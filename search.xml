<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>个人博客搭建</title>
      <link href="2021/09/27/blog/"/>
      <url>2021/09/27/blog/</url>
      
        <content type="html"><![CDATA[<h3 id="个人博客搭建"><a href="#个人博客搭建" class="headerlink" title="个人博客搭建"></a>个人博客搭建</h3><p>直接使用md写文档,然后通过hexo发布在github page上.</p><p>使用到的工具(安装Node后请先<strong>添加国内镜像源</strong>):</p><ul><li><a href="https://nodejs.org/zh-cn/">Node</a></li><li><a href="https://git-scm.com/">git</a>,  <a href="https://npm.taobao.org/mirrors/git-for-windows/">镜像下载</a></li><li><a href="https://github.com/">github</a></li><li><a href="https://hexo.io/zh-cn/">hexo</a></li></ul><p>参考文章:  <a href="http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/#toc-heading-1">hexo官方教程★★★推荐</a>; <a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">官方github地址</a>;  <a href="https://sunhwee.com/posts/6e8839eb.html#toc-heading-2">Hexo+Github博客搭建完全教程</a></p><h5 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h5><p>千万不要偷懒,搭建博客系统要先学学node知识,git知识,hexo官方文档,再开始搭建自己的博客.自己踩坑git的main,master主干/分支, githubPage显示,hexo与node版本不兼容等….其实你都按照最新的文档就不会踩坑了.</p><p>由于参考文章教程写的非常详细,直接照着来就行,这儿记录下hexo的几个常用操作命令就好.</p><pre class="line-numbers language-bash"><code class="language-bash">  hexo init <span class="token operator">&lt;</span>xxx<span class="token operator">></span>  <span class="token comment" spellcheck="true"># 初始化</span>  hexo version   <span class="token comment" spellcheck="true">#显示版本</span>  hexo clean  <span class="token comment" spellcheck="true">#清除生成的文件</span>  hexo f    <span class="token comment" spellcheck="true">#强制重新生成文件</span>  hexo g <span class="token comment" spellcheck="true">#生成网页, 只生成有变动的网页</span>  hexo s  <span class="token comment" spellcheck="true">#启动服务器,可以本地预览,默认情况下，访问网址为： `http://localhost:4000/`</span>  hexo publish <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>filename<span class="token operator">></span>  <span class="token comment" spellcheck="true"># 发表草稿</span>  hexo d  <span class="token comment" spellcheck="true"># 部署</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>网上一些博客写的X分钟搭建个人blog等,我不太建议直接copy人家的源码修改,还是自己看看<a href="https://hexo.io/zh-cn/docs/configuration">hexo配置文档</a>,只有了解了,才知道怎么写. </p><p><strong>Tips</strong>: 配置文档_config.yml里面的写法都是==冒号后面添加<strong>空格</strong>==,再跟value值,不然会报错.</p><h5 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h5><ul><li><p>方法一,根据模板自动生成</p><blockquote><p>首先在博客根目录下右键打开<code>git bash</code>，安装一个扩展<code>npm i hexo-deployer-git</code>。</p><p>然后输入<code>hexo new post "article title"</code>，或者<code>hexo new "xxx"</code>新建一篇文章。</p><p>然后打开<code>...\MyBlog\source\_posts</code>的目录，可以发现下面多了一个文件夹和一个<code>.md</code>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。默认是以根目录/scaffold/post.md文档为模板生成的,模板里面有一些配置好的参数,修改就行.</p></blockquote></li><li><p>方法二, 手动生成</p><blockquote><p>自己在<code>...\MyBlog\source\_posts</code>目录下新建md文档,然后typora,,鼠标右键自己插入插入YAML front Fmatter,在里面添加的字段就行,参数含义对照官网配置文档说明去看.</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 测试4<span class="token key atrule">author</span><span class="token punctuation">:</span> 小蝌蚪<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">false  </span><span class="token comment" spellcheck="true">#是否置顶</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#标签</span>  <span class="token punctuation">-</span> test<span class="token key atrule">categories</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#分类</span>  <span class="token punctuation">-</span> default<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2021-01-19 16:05:12</span><span class="token key atrule">img</span><span class="token punctuation">:</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span><span class="token key atrule">password</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#密码,查了下,功能还没搞定</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这里是文章摘要哦.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li></ul><h5 id="添加标签-分类设置"><a href="#添加标签-分类设置" class="headerlink" title="添加标签/分类设置"></a>添加标签/分类设置</h5><ul><li>方法一, Diary1是Diary2的父级</li></ul><pre><code>categories:  - Diary1  - Diary2tags:  - PS3  - Games</code></pre><ul><li>方法二, PlayStation和Games同级,Diary是他们两个的父级, Diary和life同级</li></ul><pre><code>categories:  - [Diary, PlayStation]  - [Diary, Games]  - [Life]</code></pre>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java基础知识面试总结</title>
      <link href="2021/09/18/mian-shi-chong-nan-dian/"/>
      <url>2021/09/18/mian-shi-chong-nan-dian/</url>
      
        <content type="html"><![CDATA[<h2 id="java知识点专题总结"><a href="#java知识点专题总结" class="headerlink" title="java知识点专题总结"></a>java知识点专题总结</h2><h3 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h3><h4 id="HashMap的底层实现"><a href="#HashMap的底层实现" class="headerlink" title="HashMap的底层实现"></a>HashMap的底层实现</h4><p>在 JDK 1.7 中 HashMap 是以数组加链表的形式组成的，数组记录了每个链表的第一个节点. JDK 1.8 之后新增了红黑树的组成结构，当链表大于 8 并且数组容量大于 64 时，链表结构会转换成红黑树结构,数组中的元素被称为哈希桶. </p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210720163504.png" alt="image-20210720163456580"></p><p>哈希桶,也就是数组中的元素,定义如下:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">static</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">class</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">implements</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hash<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>K<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>V<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>next<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//下一个节点元素</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hash<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>K<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>V<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>next<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>hash<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hash<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>key<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>next<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>next<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>K<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>V<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>String<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">+</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token string">"="</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">+</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Objects<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">^</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Objects<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>V<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">setValue</span><span class="token punctuation">(</span>V<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newValue<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>V<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldValue<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newValue<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldValue<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">boolean</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">equals</span><span class="token punctuation">(</span>Object<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>o<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>o<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>o<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">instanceof</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Map<span class="token punctuation">.</span>Entry<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">)</span>o<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Objects<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此外,类初始化的时候,给了一些默认的属性值</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//&amp;nbsp;HashMap&amp;nbsp;初始化长度</span><span class="token keyword">static</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>DEFAULT_INITIAL_CAPACITY<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">1</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;&amp;nbsp;16</span><span class="token comment" spellcheck="true">//&amp;nbsp;HashMap&amp;nbsp;最大长度</span><span class="token keyword">static</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>MAXIMUM_CAPACITY<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">1</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">30</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;1073741824</span><span class="token comment" spellcheck="true">//&amp;nbsp;默认的加载因子&amp;nbsp;(扩容因子)</span><span class="token keyword">static</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">float</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>DEFAULT_LOAD_FACTOR<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">0.75f</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;当链表长度大于此值且数组容量大于&amp;nbsp;64&amp;nbsp;时</span><span class="token keyword">static</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>TREEIFY_THRESHOLD<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">8</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;转换链表的临界值，当元素小于此值时，会将红黑树结构转换成链表结构</span><span class="token keyword">static</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>UNTREEIFY_THRESHOLD<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">6</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;最小树容量</span><span class="token keyword">static</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>MIN_TREEIFY_CAPACITY<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token number">64</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> HashMap源码中主要的方法有get(Object key), put(K key, V value), resize()方法</p><h4 id="put方法原理及知识点"><a href="#put方法原理及知识点" class="headerlink" title="put方法原理及知识点"></a>put方法原理及知识点</h4><h5 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>V<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">put</span><span class="token punctuation">(</span>K<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>V<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;对&amp;nbsp;key&amp;nbsp;进行哈希操作</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>V<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">putVal</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hash<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>K<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>V<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">boolean</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>onlyIfAbsent<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">boolean</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>evict<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>tab<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>p<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>n<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>i<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;哈希表为空则创建表</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>tab<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>table<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">||</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>n<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>n<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>tab<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;根据&amp;nbsp;key&amp;nbsp;的哈希值计算出要插入的数组索引&amp;nbsp;i</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>tab<span class="token punctuation">[</span>i<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>n<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span>nbsp<span class="token punctuation">;</span>hash<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;如果&amp;nbsp;table[i]&amp;nbsp;等于&amp;nbsp;null，则直接插入</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">else</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>K<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>k<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;如果&amp;nbsp;key&amp;nbsp;已经存在了，直接覆盖&amp;nbsp;value</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>hash<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hash<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>p<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">||</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>key<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>p<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;如果&amp;nbsp;key&amp;nbsp;不存在，判断是否为红黑树</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">else</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>p<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">instanceof</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>TreeNode<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;红黑树直接插入键值对</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>TreeNode<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token punctuation">)</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>tab<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hash<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">else</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;为链表结构，循环准备插入</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>binCount<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">++</span>binCount<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;下一个元素为空时</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>p<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>p<span class="token punctuation">.</span>next<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;转换为红黑树进行处理</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>binCount<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">>=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>TREEIFY_THRESHOLD<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;-1&amp;nbsp;for&amp;nbsp;1st</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;&amp;nbsp;key&amp;nbsp;已经存在直接覆盖&amp;nbsp;value</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hash<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">||</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>key<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>p<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>e<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;existing&amp;nbsp;mapping&amp;nbsp;for&amp;nbsp;key</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>V<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldValue<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">.</span>value<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">||</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldValue<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">.</span>value<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>value<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">afterNodeAccess</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldValue<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">++</span>modCount<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;超过最大容量，扩容</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token operator">++</span>size<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>threshold<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">afterNodeInsertion</span><span class="token punctuation">(</span>evict<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>put 流程简化如下:</p><ol><li>对 Key 求 Hash 值，然后再计算下标</li><li>如果没有碰撞，直接放入桶中（碰撞的意思是计算得到的 Hash 值相同，需要放到同一个 bucket 中）</li><li>如果碰撞了，以链表的方式链接到后面</li><li>如果链表长度超过阀值（TREEIFY THRESHOLD==8并且容量超过MIN_TREEIFY_CAPACITY=64），就把链表转成红黑树，链表长度低于6，就把红黑树转回链表</li><li>如果节点已经存在就替换旧值</li><li>如果桶满了（容量16*加载因子0.75），就需要 resize（扩容2倍后重排）</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://s0.lgstatic.com/i/image3/M01/73/D9/CgpOIF5rDYmATP43AAB3coc0R64799.png" alt="img"></p><h5 id="如何获取待插入元素的数组索引"><a href="#如何获取待插入元素的数组索引" class="headerlink" title="如何获取待插入元素的数组索引"></a>如何获取待插入元素的数组索引</h5><p>jdk8中,需要通过如下代码获取到待存入数据的索引</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 找到元素在数组中的位置，n 为数组长度。</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token comment" spellcheck="true">// 计算 Key 的 Hash 值 </span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span>Object key<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> h<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">>>></span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//异或运算^:  相同则为0,不同则为1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="为什么-HashMap-数组的长度要是-2-的整数幂？"><a href="#为什么-HashMap-数组的长度要是-2-的整数幂？" class="headerlink" title="为什么 HashMap 数组的长度要是 2 的整数幂？"></a>为什么 HashMap 数组的长度要是 2 的整数幂？</h6><p> <strong>为了 减少哈希冲突并加快运算效率</strong></p><p>   hash是散列的意思, 我们希望任意一个 Key 落在数组中的位置是足够散列的，这样可以减少 Hash 碰撞的概率. 我们根据hash值得到的是一个int数,放置在一个16位长的数组中,如果想让它尽可能的散列分布,最简单的办法是 hash%n, 这样得到的余数就是数组的索引, 但是这样计算太低效了,由于计算机是二进制计算的,我们可以通过二进制的==与运算==,取其hash值的后几位就可以高效的得到散列值(也就是索引), 如: </p><pre class="line-numbers language-java"><code class="language-java">    <span class="token number">00100100</span> <span class="token number">10100101</span> <span class="token number">11000100</span> <span class="token number">00100101</span>    <span class="token comment" spellcheck="true">// Hash 值 </span><span class="token operator">&amp;</span>   <span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">00001111</span>    <span class="token comment" spellcheck="true">// 16 - 1 = 15</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>    <span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">00000101</span>    <span class="token comment" spellcheck="true">// 高位全部归零，只保留末四位。与运算不改变原hash值的低位数,这样散列程度只受参与运算的hash值影响.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>假设是其它容量值,进行与运算的结果碰撞的概率就比较大, 比如当容量是10时,n-1=9 :</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210720173626.jpeg" alt="img"></p><p>总的来说,因为计算机采用二进制,使用2的整数幂,在进行运算时候能大大提升效率.</p><h6 id="HashMap中的hash算法是如何降低碰撞率的"><a href="#HashMap中的hash算法是如何降低碰撞率的" class="headerlink" title="HashMap中的hash算法是如何降低碰撞率的"></a>HashMap中的hash算法是如何降低碰撞率的</h6><p>上面我们已经知道,通过与运算取最后几位值,得到索引.但是int型的hash值,末尾数重复的太多了,为了解决这类问题，HashMap 想了一种办法（ <em>扰动</em> ）：将 Hash 值的高 16 位右移并与原 Hash 值取异或运算（^），混合高 16 位和低 16 位的值，得到一个更加散列的低 16 位的 Hash 值。如：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">00000101</span> <span class="token comment" spellcheck="true">// H1</span><span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token comment" spellcheck="true">// H1 >>> 16</span><span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">00000101</span> <span class="token comment" spellcheck="true">// hash = H1 ^ (H1 >>> 16) = 5</span><span class="token number">00000000</span> <span class="token number">11111111</span> <span class="token number">00000000</span> <span class="token number">00000101</span> <span class="token comment" spellcheck="true">// H2</span><span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">11111111</span> <span class="token comment" spellcheck="true">// H2 >>> 16</span><span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">11111010</span> <span class="token comment" spellcheck="true">// hash = H2 ^ (H2 >>> 16) = 250</span><span class="token comment" spellcheck="true">//经过与运算求索引</span>index1 <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> H1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">5</span>index2 <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> H2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">250</span> <span class="token operator">=</span> <span class="token number">10</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="jdk1-8为啥引入红黑树-为啥不直接全部变为红黑树-转化成红黑树的条件是什么"><a href="#jdk1-8为啥引入红黑树-为啥不直接全部变为红黑树-转化成红黑树的条件是什么" class="headerlink" title="jdk1.8为啥引入红黑树, 为啥不直接全部变为红黑树, 转化成红黑树的条件是什么"></a>jdk1.8为啥引入红黑树, 为啥不直接全部变为红黑树, 转化成红黑树的条件是什么</h5><p>同一个链表上的节点，它们的hash值计算出来都是一样的。但是如果hash冲突比较多的时候，生成的链表也会拉得比较长，这个时候检索起来就会退化成遍历操作，性能就比较低了。在Java 8中为了改善这种情况，引入了红黑树。红黑树是一种高级的平衡二叉树结构，其能保证查找、插入、删除的时间复杂度最坏为O(logn), 可以有效的解决链表过长时操作比较慢的问题。 </p><p>之所以选择红黑树是为了解决二叉查找树的缺陷：二叉查找树在特殊情况下会变成一条线性结构（这就跟原来使用链表结构一样了，造成层次很深的问题），遍历查找会非常慢。而红黑树在插入新数据后可能需要通过左旋、右旋、变色这些操作来保持平衡。引入红黑树就是为了查找数据快，解决链表查询深度的问题。我们知道红黑树属于平衡二叉树，为了保持“平衡”是需要付出代价的，但是该代价所损耗的资源要比遍历线性链表要少。所以当长度大于8的时候，会使用红黑树；如果链表长度很短的话，根本不需要引入红黑树，引入反而会慢。</p><p>当链表长度＞=8,且数组长度＞64时,才会转化成红黑树.只有在节点较多时,红黑树才能发挥它的优势.另外,如果满足链表长度＞8,而数组长度＜64,会被认为是桶分配的太少才产生那么多冲突的。那么此时应该选择扩容操作，以此来降低hash冲突的产生。等到数组的长度大于等于MIN_TREEIFY_CAPACITY的时候，如果当前链表的长度还是8的话，才会去转化成红黑树。</p><h5 id="说说你对红黑树的见解？"><a href="#说说你对红黑树的见解？" class="headerlink" title="说说你对红黑树的见解？"></a>说说你对红黑树的见解？</h5><ol><li> 每个节点非红即黑</li><li>根节点总是黑色的</li><li>如果节点是红色的，则它的子节点必须是黑色的（反之不一定）</li><li>每个叶子节点都是黑色的空节点（NIL节点）</li><li>从根节点到叶节点或空子节点的每条路径，必须包含相同数目的黑色节点（即相同的黑色高度）</li></ol><h5 id="链表转为红黑树的阈值是8，而红黑树退化成链表的阈值是6-为什么不一致呢"><a href="#链表转为红黑树的阈值是8，而红黑树退化成链表的阈值是6-为什么不一致呢" class="headerlink" title="链表转为红黑树的阈值是8，而红黑树退化成链表的阈值是6,为什么不一致呢"></a>链表转为红黑树的阈值是8，而红黑树退化成链表的阈值是6,为什么不一致呢</h5><p>如果这两个值都为8的话，而当前链表的节点数量为7，此时一个新的节点进来了，计算出hash值和这七个节点的hash值相同，即发生了hash冲突。于是就会把这个节点挂在第七个节点的后面，但是此时已经达到了变成红黑树的阈值了（MIN_TREEIFY_CAPACITY条件假定也满足），于是就转成红黑树。</p><p>但是此时调用了一次remove操作需要删掉这个新加的节点，删掉之后当前红黑树的节点数量就又变成了7，于是就退化成了链表。然后此时又新加了一个节点，正好又要挂在第七个节点的后面，于是就又变成红黑树，然后又要remove，又退化成链表…可以看到在这种场景下，会不断地出现链表和红黑树之间的相互转换，这个性能是很低的，因为大部分的执行时间都花费在了转换数据结构上面</p><p>所以为了避免这种情况的发生，将两个阈值错开一些，以此来尽量避免在阈值点附近可能存在的、频繁地做转换数据结构操作而导致性能变低的情况出现。</p><h4 id="get方法原理及其相关知识点"><a href="#get方法原理及其相关知识点" class="headerlink" title="get方法原理及其相关知识点"></a>get方法原理及其相关知识点</h4><h5 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>V<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">get</span><span class="token punctuation">(</span>Object<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;对&amp;nbsp;key&amp;nbsp;进行哈希操作</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>e<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">?</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">:</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">.</span>value<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">getNode</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hash<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Object<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>tab<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>first<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>n<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>K<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>k<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;非空判断</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>tab<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>table<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>n<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">0</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>first<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>tab<span class="token punctuation">[</span><span class="token punctuation">(</span>n<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span>nbsp<span class="token punctuation">;</span>hash<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;判断第一个元素是否是要查询的元素</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>first<span class="token punctuation">.</span>hash<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hash<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;always&amp;nbsp;check&amp;nbsp;first&amp;nbsp;node</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>first<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">||</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>key<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>first<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;下一个节点非空判断</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>first<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;如果第一节点是树结构，则使用&amp;nbsp;getTreeNode&amp;nbsp;直接获取相应的数据</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>first<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">instanceof</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>TreeNode<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>TreeNode<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token punctuation">)</span>first<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTreeNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">do</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;非树结构，循环节点判断</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;hash&amp;nbsp;相等并且&amp;nbsp;key&amp;nbsp;相同，则返回此节点</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hash<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">||</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>key<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>get 方法流程总结:</p><ul><li>计算 key 的 hash 值。</li><li>如果存储数组不为空，且计算得到的位置上的元素不为空。继续，否则，返回 Null。</li><li>如果获取到的元素的 key 值相等，说明查找到了，返回元素。</li><li>如果获取到的元素的 key 值不相等，查找 next 节点的元素。<ul><li>如果元素是红黑树，在红黑树中查找。</li><li>不是红黑树，遍历 next 节点查找，找到则返回。</li></ul></li></ul><h4 id="resize-方法及其知识点"><a href="#resize-方法及其知识点" class="headerlink" title="resize()方法及其知识点"></a>resize()方法及其知识点</h4><h5 id="源码-2"><a href="#源码-2" class="headerlink" title="源码"></a>源码</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAXIMUM_CAPACITY <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">float</span> DEFAULT_LOAD_FACTOR <span class="token operator">=</span> <span class="token number">0.75f</span><span class="token punctuation">;</span><span class="token keyword">final</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;扩容前的数组</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldTab<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>table<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;扩容前的数组的大小和阈值</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldCap<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>oldTab<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">?</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">0</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">:</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldTab<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldThr<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>threshold<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;预定义新数组的大小和阈值</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newCap<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newThr<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>oldCap<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;超过最大值就不再扩容了</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>oldCap<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">>=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>MAXIMUM_CAPACITY<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>threshold<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Integer<span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldTab<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;扩大容量为当前容量的两倍，但不能超过&amp;nbsp;MAXIMUM_CAPACITY</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">else</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>newCap<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldCap<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>MAXIMUM_CAPACITY<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldCap<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">>=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>DEFAULT_INITIAL_CAPACITY<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newThr<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldThr<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;double&amp;nbsp;threshold</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;当前数组没有数据，使用初始化的值</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">else</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>oldThr<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;initial&amp;nbsp;capacity&amp;nbsp;was&amp;nbsp;placed&amp;nbsp;in&amp;nbsp;threshold</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newCap<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldThr<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">else</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;zero&amp;nbsp;initial&amp;nbsp;threshold&amp;nbsp;signifies&amp;nbsp;using&amp;nbsp;defaults</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;如果初始化的值为&amp;nbsp;0，则使用默认的初始化容量</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newCap<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>DEFAULT_INITIAL_CAPACITY<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newThr<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>DEFAULT_LOAD_FACTOR<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">*</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>DEFAULT_INITIAL_CAPACITY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;如果新的容量等于&amp;nbsp;0</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>newThr<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">float</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>ft<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>newCap<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">*</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>loadFactor<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newThr<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>newCap<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>MAXIMUM_CAPACITY<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>ft<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>MAXIMUM_CAPACITY<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">?</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>ft<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">:</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Integer<span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>threshold<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newThr<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"rawtypes"</span><span class="token punctuation">,</span><span class="token string">"unchecked"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newTab<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token punctuation">[</span>newCap<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;开始扩容，将新的容量赋值给&amp;nbsp;table</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>table<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newTab<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;原数据不为空，将原数据复制到新&amp;nbsp;table&amp;nbsp;中</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>oldTab<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;根据容量循环数组，复制非空元素到新&amp;nbsp;table</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>j<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>j<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldCap<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">++</span>j<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;如果链表只有一个，则进行直接赋值</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>next<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newTab<span class="token punctuation">[</span>e<span class="token punctuation">.</span>hash<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>newCap<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">else</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>e<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">instanceof</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>TreeNode<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;红黑树相关的操作</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>TreeNode<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token punctuation">)</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newTab<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>j<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldCap<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">else</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;preserve&amp;nbsp;order</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;链表复制，JDK&amp;nbsp;1.8&amp;nbsp;扩容优化部分</span>                    <span class="token comment" spellcheck="true">// 把当前index对应的链表分成两个链表，减少扩容的迁移量</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>loHead<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>loTail<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hiHead<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hiTail<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>next<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">do</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>next<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">.</span>next<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;原索引</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;&amp;</span>nbsp<span class="token punctuation">;</span>oldCap<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>loTail<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>loHead<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">else</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>loTail<span class="token punctuation">.</span>next<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>loTail<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;原索引&amp;nbsp;+&amp;nbsp;oldCap</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">else</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>hiTail<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hiHead<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">else</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hiTail<span class="token punctuation">.</span>next<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hiTail<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>e<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>next<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;将原索引放到哈希桶中</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>loTail<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>loTail<span class="token punctuation">.</span>next<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>loHead<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;nbsp;将原索引&amp;nbsp;+&amp;nbsp;oldCap&amp;nbsp;放到哈希桶中</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">(</span>hiTail<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">!=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">)</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hiTail<span class="token punctuation">.</span>next<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>null<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newTab<span class="token punctuation">[</span>j<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">+</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>oldCap<span class="token punctuation">]</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>hiHead<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>newTab<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>resize方法执行流程如下:</p><ol><li>记录下扩容前的数组,及其大小和阈值, 初始化新数组及其阈值</li><li>对原数组的大小及其阈值进行校验<ol><li>oldCap超过最大值就不再扩容了</li><li>扩大容量为当前容量的两倍，但不能超过 MAXIMUM_CAPACITY</li><li>如果初始化的值为 0，则使用数组默认的初始化容量16</li></ol></li><li>开始扩容，创建一个长度为newCap的newTab.</li><li>根据oldCap遍历数组，复制非空元素到新 table<ol><li>如果链表只有一个，则进行直接赋值, 重新计算在新数组中的索引e.hash &amp; (newCap - 1)</li><li>如果是红黑树,则执行红黑树相关操作</li><li>如果是链表,则根据e.hash &amp; oldCap 得到的结果来决定是否移动索引位置</li></ol></li></ol><h5 id="什么是加载因子？加载因子为什么是-0-75？"><a href="#什么是加载因子？加载因子为什么是-0-75？" class="headerlink" title="什么是加载因子？加载因子为什么是 0.75？"></a>什么是加载因子？加载因子为什么是 0.75？</h5><p>加载因子也叫扩容因子或负载因子，用来判断什么时候进行扩容的，假如加载因子是 0.5，HashMap 的初始化容量是 16，那么当 HashMap 中有 16*0.5=8 个元素时，HashMap 就会进行扩容。</p><p>那加载因子为什么是 0.75 而不是 0.5 或者 1.0 呢？</p><p>这其实是出于容量和性能之间平衡的结果：</p><p>当加载因子设置比较大的时候，扩容的门槛就被提高了，扩容发生的频率比较低，占用的空间会比较小，但此时发生 Hash 冲突的几率就会提升，因此需要更复杂的数据结构来存储元素，这样对元素的操作时间就会增加，运行效率也会因此降低；</p><p>而当加载因子值比较小的时候，扩容的门槛会比较低，因此会占用更多的空间，此时元素的存储就比较稀疏，发生哈希冲突的可能性就比较小，因此操作性能会比较高。</p><p>所以综合了以上情况就取了一个 0.5 到 1.0 的平均数 0.75 作为加载因子。</p><h5 id="如何理解jdk1-8中的扩容后的链表移动机制"><a href="#如何理解jdk1-8中的扩容后的链表移动机制" class="headerlink" title="如何理解jdk1.8中的扩容后的链表移动机制"></a>如何理解jdk1.8中的扩容后的链表移动机制</h5><p>正常情况下，计算节点在table中的下标的方法是：hash&amp;(oldTable.length-1)，扩容之后，table长度翻倍，计算table下标的方法是hash&amp;(newTable.length-1)，也就是hash&amp;(oldTable.length*2-1)，于是我们有了这样的结论：这新旧两次计算下标的结果，要不然就相同，要不然就是新下标等于旧下标加上旧数组的长度。</p><p>举例:  假设table原长度是16，扩容后长度32，那么一个hash值在扩容前后的table下标是这么计算的：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210721154935.jpeg" alt="img"></p><p>hash和新旧table按位与的结果，最后4位显然是相同的，唯一可能出现的区别就在第5位，也就是hash值的b所在的那一位，如果b所在的那一位是0，那么新table按位与的结果和旧table的结果就相同，反之如果b所在的那一位是1，则新table按位与的结果就比旧table的结果多了10000（二进制），而这个二进制10000就是旧table的长度16。</p><p>换言之，hash值的新散列下标是不是需要加上旧table长度，只需要看看hash值第5位是不是1就行了，位运算的方法就是hash值和10000（也就是旧table长度）来按位与，其结果只可能是10000或者00000。</p><p>所以,源码使用e.hash &amp; oldCap，就是用于计算位置b到底是0还是1用的，只要其结果是0，则新散列下标就等于原散列下标，否则新散列坐标要在原散列坐标的基础上加上原table长度。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://s0.lgstatic.com/i/image3/M01/73/D9/Cgq2xl5rDYmAXoWFAAArXO_oe8c713.png" alt="img"></p><h5 id="HashMap扩容时候的死锁问题"><a href="#HashMap扩容时候的死锁问题" class="headerlink" title="HashMap扩容时候的死锁问题"></a>HashMap扩容时候的死锁问题</h5><p>在Java 7的HashMap源码中，transfer方法是用来做扩容时的迁移数据操作的。其实现就是通过遍历链表中的每一个节点，重新rehash实现的。在这其中会涉及到指针的修改，在高并发的场景下，可能会使链表上的一个节点的下一个指针指向了其前一个节点，也就是形成了死循环</p><p>而Java8中通过形成两个链表，节点hash值在数组容量二进制数为1的那个位置处去按位与判断是0还是1，以此来选择插入的方式很好地解决了这个问题，而且不用每一个节点rehash，提高了执行速度。</p><p> HashMap 本身就是非线程安全的，如果要在多线程下，建议使用 ConcurrentHashMap 替代.</p><h4 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h4><p><a href="https://baijiahao.baidu.com/s?id=1679219630514764243&amp;wfr=spider&amp;for=pc">聊聊经典数据结构HashMap,逐行分析每一个关键点</a></p><p><a href="https://zhangzw.com/posts/20190925.html">详解 HashMap 中的 Hash 算法（扰动函数）</a></p><p><a href="https://zhuanlan.zhihu.com/p/77899892">终结HashMap面试？我是谁？我在哪</a></p><p><a href="https://baijiahao.baidu.com/s?id=1662733945029523270&amp;wfr=spider&amp;for=pc">面试中最喜欢问的HashMap知识都在这里，赶紧收藏！</a></p><p><a href="https://blog.csdn.net/woshimaxiao1/article/details/83661464">Java集合之一—HashMap</a></p><p>java源码剖析34讲</p><p><a href="https://blog.csdn.net/lkforce/article/details/89521318">Hashmap实现原理及扩容机制详解</a></p>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabitMQ介绍与使用</title>
      <link href="2021/06/11/rabbitmq/"/>
      <url>2021/06/11/rabbitmq/</url>
      
        <content type="html"><![CDATA[<h2 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h2><p>资料来源: <a href="https://www.bilibili.com/video/BV1dE411K7MG">B站视频</a>, 笔记与源文档略有差异,根据自己的理解.重组了部分内容.</p><h4 id="MQ介绍"><a href="#MQ介绍" class="headerlink" title="MQ介绍"></a>MQ介绍</h4><h5 id="什么是MQ"><a href="#什么是MQ" class="headerlink" title="什么是MQ?"></a>什么是MQ?</h5><p>MQ(Message Quene): 典型的生产者与消费者模型,生产者不断向消息队列中生产消息,消费者不断向队列中获取消息,整个过程是异步的,只负责消息的存取,而不涉及到业务逻辑的侵入.</p><h5 id="当前主流MQ"><a href="#当前主流MQ" class="headerlink" title="当前主流MQ"></a>当前主流MQ</h5><ul><li> ActiveMQ</li></ul><p>优点: Apache出品,完全支持JMS规范的消息中间件,丰富的API,多种集群架构模式</p><p>缺点: 性能不高,主要是中小型企业在使用.</p><ul><li> Kafka</li></ul><p>Apache开源的顶级项目,它是一个分布式发布-订阅消息系统,其主要特点是基于pull模式来处理消息消费,追求高吞吐量.</p><p>缺点: 不支持事务,对消息的重复,丢失,错误没有严格的限制.</p><ul><li>RocketMQ</li></ul><p>阿里开源,纯java开发,具有高吞吐量,高可用性,适合大规模分布式系统应用的特点,其思路起源于kafka,对消息的可靠性传输和事务性做了优化.开源版不支持事务,收费版支持.</p><ul><li>RabbitMQ</li></ul><p>使用Erlang语言开发的消息队列系统,基于AMQP协议来实现,其主要特征是面向消息,队列,路由,可靠性, 安全. AMQR协议更多用在企业系统内对数据的一致性,稳定性,可靠性要求高的场景,对性能和吞吐量在其次.</p><h4 id="RabbitMQ-1"><a href="#RabbitMQ-1" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h4><h5 id="AMQP-协议"><a href="#AMQP-协议" class="headerlink" title="AMQP 协议"></a>AMQP 协议</h5><pre><code>     AMQP（advanced message queuing protocol）`在2003年时被提出，最早用于解决金融领不同平台之间的消息传递交互问题。顾名思义，AMQP是一种协议，更准确的说是一种binary wire-level protocol（链接协议）。这是其和JMS的本质差别，AMQP不从API层进行限定，而是直接定义网络交换的数据格式。这使得实现了AMQP的provider天然性就是跨平台的。以下是AMQP协议模型:</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210615142230.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 开发教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 消息中间件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud笔记</title>
      <link href="2021/05/23/springcloud/"/>
      <url>2021/05/23/springcloud/</url>
      
        <content type="html"><![CDATA[<h2 id="SpringCloud"><a href="#SpringCloud" class="headerlink" title="SpringCloud"></a>SpringCloud</h2><p>笔记来源于<a href="https://www.bilibili.com/video/BV18E411x7eT">B站尚硅谷</a></p><h4 id="使用须知"><a href="#使用须知" class="headerlink" title="使用须知"></a>使用须知</h4><h5 id="技术要求"><a href="#技术要求" class="headerlink" title="技术要求"></a>技术要求</h5><ul><li>java8</li><li>maven</li><li>git/github</li><li>Nginx</li><li>RabbitMQ</li><li>SpringBoot2</li></ul><p>知识章节图谱</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210615151621.png" alt="image-20210615151621637"></p><h5 id="相关文档地址"><a href="#相关文档地址" class="headerlink" title="相关文档地址"></a>相关文档地址</h5><p><a href="https://spring.io/projects/spring-cloud#overview">官网文档地址</a> ,   <a href="https://www.springcloud.cc/">中文版文档地址</a>,   <a href="https://github.com/spring-cloud/spring-cloud-release">github地址</a></p><p>版本选择,参考官方文档.</p><h5 id="组件升级"><a href="#组件升级" class="headerlink" title="组件升级"></a>组件升级</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210615160824.png" alt="image-20210615160824886"></p><h4 id="微服务架构编码构建"><a href="#微服务架构编码构建" class="headerlink" title="微服务架构编码构建"></a>微服务架构编码构建</h4><h5 id="工程搭建步骤"><a href="#工程搭建步骤" class="headerlink" title="工程搭建步骤"></a>工程搭建步骤</h5><ul><li>New Project</li><li>选择maven版本</li><li>字符编码修改File Encoding–&gt; UTF-8</li><li>注解生效激活 Annotation Processors</li><li>编译版本选择 java compiler</li></ul><h5 id="父工程的pom文件管理"><a href="#父工程的pom文件管理" class="headerlink" title="父工程的pom文件管理"></a>父工程的pom文件管理</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springcloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 统一管理jar包版本 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>junit.version</span><span class="token punctuation">></span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>junit.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log4j.version</span><span class="token punctuation">></span></span>1.2.17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>log4j.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lombok.version</span><span class="token punctuation">></span></span>1.16.18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lombok.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mysql.version</span><span class="token punctuation">></span></span>8.0.17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mysql.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>druid.version</span><span class="token punctuation">></span></span>1.1.16<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>druid.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mybatis.spring.boot.version</span><span class="token punctuation">></span></span>1.3.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mybatis.spring.boot.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--只声明依赖,并不实现引入, 子模块实现了对应的依赖,无需指定版本号,默认使用父工程的版本 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--spring boot 2.2.2--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.2.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--spring cloud Hoxton.SR1--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>Hoxton.SR1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--spring cloud alibaba 2.1.0.RELEASE--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--mysql--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${mysql.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--mysql--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>druid<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${druid.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--mybatis--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${mybatis.spring.boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--junit--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${junit.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--log4j--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${log4j.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${lombok.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--热启动插件--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fork</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fork</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>addResources</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>addResources</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="微服务模块构建"><a href="#微服务模块构建" class="headerlink" title="微服务模块构建"></a>微服务模块构建</h5><ul><li>建module</li><li>改pom</li><li>写yaml</li><li>主启动</li><li>业务类<ul><li>建表</li><li>写entities</li><li>dao</li><li>service</li><li>controller</li></ul></li></ul><h5 id="热部署"><a href="#热部署" class="headerlink" title="热部署"></a>热部署</h5><ol><li><p>当前module添加热部署工具依赖</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>父pom配置文件中添加插件</p></li></ol><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--下面一项选填--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileName</span><span class="token punctuation">></span></span>你自己的工程名字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileName</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fork</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fork</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>addResources</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>addResources</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>设置–build–compile勾选如下选项</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210623103352.png" alt="image-20210623103352028"></p><ol start="4"><li>在项目任何地方,按住ctrl+alt+shift+/, 选中第一个Registy, 勾选如下选项</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210623103613.png" alt="image-20210623103613494"></p><ol start="5"><li>重启IDE即可</li></ol>]]></content>
      
      
      <categories>
          
          <category> 开发教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swagger详解</title>
      <link href="2021/05/21/swagger/"/>
      <url>2021/05/21/swagger/</url>
      
        <content type="html"><![CDATA[<h2 id="Swagger详解"><a href="#Swagger详解" class="headerlink" title="Swagger详解"></a>Swagger详解</h2><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p><a href="https://swagger.io/">Swagger</a> 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 接口文档。</p><p><a href="https://github.com/springfox/springfox">Spring-fox</a> 是根据代码生成接口文档,它利用AOP特性,把Swagger集成进来,本质上是对swagger的封装.</p><h4 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h4><p><code>Swagger</code> 目前有 <code>2.x</code> 和 <code>3.x</code> 两个主流版本，配置略有不同。</p><h5 id="2-x版本的集成"><a href="#2-x版本的集成" class="headerlink" title="2.x版本的集成"></a>2.x版本的集成</h5><ol><li>在pom文件下引入依赖包</li></ol><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 去mvnrepository去搜索, 注意版本差异https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springfox-swagger2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- UI依赖包 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springfox-swagger-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>开启<code>@EnableSwagger2</code> 注解<ul><li>方式1: 主启动类开启该注解</li><li>方式2(推荐):  新建一个配置类，通过 <code>@EnableSwagger2</code> 注解启用 Swagger, </li></ul></li></ol><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableSwagger2</span>   <span class="token comment" spellcheck="true">// 开启Swagger</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfig</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>在<a href="http://localhost:8080/swagger-ui.html%E6%9F%A5%E7%9C%8B%E7%94%9F%E6%88%90%E7%9A%84%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3">http://localhost:8080/swagger-ui.html查看生成的接口文档</a>.</li><li>实例化 <code>Docket</code> 的时候，需要传入 <code>DocumentationType.SWAGGER_2</code></li></ol><h5 id="Swagger-3-X在SpringBoot中的集成"><a href="#Swagger-3-X在SpringBoot中的集成" class="headerlink" title="Swagger 3.X在SpringBoot中的集成"></a>Swagger 3.X在SpringBoot中的集成</h5><ol><li>pom引入对应的starter启动器依赖</li></ol><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springfox-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><p>使用 @EnableOpenApi 注解开启 Swagger</p><ul><li>方式1: 主启动类开启该注解</li><li>方式2(推荐):  新建一个配置类，通过 <code>@EnableOpenApi </code> 注解启用 Swagger, </li></ul></li><li><p>访问 <a href="http://localhost:8080/swagger-ui/">http://localhost:8080/swagger-ui/</a></p></li><li><p>实例化 Docket 的时候，需要传入 DocumentationType.OAS_30。</p></li></ol><h4 id="自定义配置信息"><a href="#自定义配置信息" class="headerlink" title="自定义配置信息"></a>自定义配置信息</h4><ul><li>自定义文档基础信息</li><li>自定义扫描包路径</li><li>自定义注解,过滤某些接口</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//2.x版本</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableSwagger2</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">getDocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Docket docket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>SWAGGER_2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置文档消息</span>        docket<span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">getApiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置过滤条件</span>        docket<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//扫描指定路径下的包(包括子包)</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>RequestHandlerSelectors<span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"com.example.swagger"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> docket<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     *     * @return 关于文档的基本信息     */</span>    <span class="token keyword">private</span> ApiInfo <span class="token function">getApiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"接口文档的title"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"接口文档的描述"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"1.0"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">"xxx公司"</span><span class="token punctuation">,</span><span class="token string">"公司url"</span><span class="token punctuation">,</span><span class="token string">"xxx@gmail.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//3.x版本</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableOpenApi</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.profiles.active:NA}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String active<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">createRestApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>SWAGGER_2<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// OAS_30</span>                <span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token string">"dev"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>active<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 仅在开发环境开启Swagger</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">host</span><span class="token punctuation">(</span><span class="token string">"http://www.example.com"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// Base URL</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>RequestHandlerSelectors<span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"com.example.controller"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>PathSelectors<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> ApiInfo <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"API文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"这是描述信息"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"1.0"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h4><p>通过自定义注解,搭配过滤器功能使用,可以动态进行接口分类,从而达到某些目的,比如配置某些接口信息不生成文档,或者归类.</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//使用示例, 配置该注解的接口不展示</span><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span>ElementType<span class="token punctuation">.</span>METHOD<span class="token punctuation">,</span> ElementType<span class="token punctuation">.</span>TYPE<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span>RetentionPolicy<span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span><span class="token keyword">public</span> @<span class="token keyword">interface</span> <span class="token class-name">SwaggerIgnore</span> <span class="token punctuation">{</span>    String <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//调用注解</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableSwagger2</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">getDocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Docket docket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>SWAGGER_2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置文档消息</span>        docket<span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">getApiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置分组, 一般开发会有多组api接口,比如面向后台管理系统,面向web客户端,app端的接口</span>        docket<span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">"adminApi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//方式1:  设置过滤条件</span>        docket<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//以下多个过滤条件,可以选择一个,也可以结合多个使用</span>                <span class="token comment" spellcheck="true">//过滤带有@SwaggerIgnore注解(自定义注解)的方法</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>Predicates<span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span>RequestHandlerSelectors<span class="token punctuation">.</span><span class="token function">withMethodAnnotation</span><span class="token punctuation">(</span>SwaggerIgnore<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//多个路径,任意匹配一个即可</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>Predicates<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span>                        PathSelectors<span class="token punctuation">.</span><span class="token function">regex</span><span class="token punctuation">(</span><span class="token string">"/api2/.*"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        PathSelectors<span class="token punctuation">.</span><span class="token function">regex</span><span class="token punctuation">(</span><span class="token string">"/api3/.*"</span><span class="token punctuation">)</span>                <span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> docket<span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token comment" spellcheck="true">/**     * @return 关于文档的基本信息     */</span>    <span class="token keyword">private</span> ApiInfo <span class="token function">getApiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"接口文档的title"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"接口文档的描述"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"1.0"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">"xxx公司"</span><span class="token punctuation">,</span> <span class="token string">"公司url"</span><span class="token punctuation">,</span> <span class="token string">"xxx@gmail.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="内置注解"><a href="#内置注解" class="headerlink" title="内置注解"></a>内置注解</h4><ul><li>@Api , 一般作用于controller类上,通过 <code>tags</code> 指定描述信息;</li><li>@ApiOperation 主要作用于方法上,描述该方法的作用;</li><li>@ApiParam 主要作用方法于形参前面，可以描述参数的作用;</li><li> @ApiIgnore  作用于方法上,被注解后不生成文档;</li><li>@ApiModel 作用于实体类上,可以通过 <code>value</code> 指定别名，不指定时默认为类名</li><li>@ApiModelProperty 作用于实体类中的属性</li><li>@ApiImplicitParam 作用于方法上,用于解释参数</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:\Users\小蝌蚪\AppData\Roaming\Typora\typora-user-images\image-20210818204637079.png" alt="image-20210818204637079"></p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//示例如下</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/api"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"标签1"</span><span class="token punctuation">,</span> <span class="token string">"标签2"</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//给当前类打标签.写几个标签就展示几个控制器,建议1个即可</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerController</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * @ApiOperation : 标注在方法上     *         - value  给接口起别名     *         - notes  接口说明描述     *     */</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/test1"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"get请求"</span><span class="token punctuation">,</span> nickname <span class="token operator">=</span> <span class="token string">"昵称"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"笔记"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"test1"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/test2"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">test2</span><span class="token punctuation">(</span><span class="token annotation punctuation">@ApiParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"参数说明解释"</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">"字段别名"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>example <span class="token operator">=</span> <span class="token string">"张三"</span><span class="token punctuation">)</span>                                     String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/test3"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiIgnore</span>  <span class="token comment" spellcheck="true">//文档忽略此接口</span>    <span class="token keyword">public</span> String <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"test1"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/test4"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"m"</span><span class="token punctuation">,</span>value <span class="token operator">=</span> <span class="token string">"参数描述"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>dataType <span class="token operator">=</span> <span class="token string">"键值对"</span><span class="token punctuation">,</span>paramType <span class="token operator">=</span> <span class="token string">"String"</span><span class="token punctuation">,</span>allowMultiple <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">test4</span><span class="token punctuation">(</span>String m<span class="token punctuation">,</span> String b<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"test4"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/test5"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Person <span class="token function">test5</span><span class="token punctuation">(</span>            <span class="token annotation punctuation">@ApiParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"name,age必传"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span>            <span class="token annotation punctuation">@RequestBody</span> Person person<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> person<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//-----------------------------------------------实体属性示例----------------------------------------</span><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"person实体"</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">"包含3个属性信息"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"别名name"</span><span class="token punctuation">,</span>value <span class="token operator">=</span> <span class="token string">"name属性注释"</span><span class="token punctuation">,</span> example <span class="token operator">=</span> <span class="token string">"zhangsan"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"别名sex"</span><span class="token punctuation">,</span>value <span class="token operator">=</span> <span class="token string">"sex属性注释"</span><span class="token punctuation">,</span> example <span class="token operator">=</span> <span class="token string">"男"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String sex<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"别名age"</span><span class="token punctuation">,</span>value <span class="token operator">=</span> <span class="token string">"age属性注释"</span><span class="token punctuation">,</span> example <span class="token operator">=</span> <span class="token string">"18"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span>String sex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span>Integer age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Person{"</span> <span class="token operator">+</span>                <span class="token string">"name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", sex='"</span> <span class="token operator">+</span> sex <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对于map参数的方法,如果参数小于5个，推荐使用 @ApiImplicitParams的方式单独封装每一个参数；如果参数大于5个，采用定义一个对象去封装所有参数的属性,配合@RequestBody注解，然后使用@APiParam的方式</p><p>在GET请求中，参数在Body体里面,不能使用@RequestBody。在POST请求，可以使用@RequestBody和@RequestParam，当参数为对象时,使用@RequestBody，当参数为基本类型或者String, Map等,@RequestParam,也可以不使用注解,建议使用. </p><p>ps:  当不使用注解时,从swagger看post请求,看起来很像是get拼接,其实并非如此,使用postman测试即可.</p><p>swagger在生产环境不能对外暴露,可以使用@Profile({“dev”, “prod”,“pre”})指定可以使用的环境. 不过一般在配置类对所有接口进行控制,而不会针对当个controller或者接口进行控制.</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文档工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用软件介绍</title>
      <link href="2021/04/14/chang-yong-ruan-jian-jie-shao/"/>
      <url>2021/04/14/chang-yong-ruan-jian-jie-shao/</url>
      
        <content type="html"><![CDATA[<h3 id="软件与工具"><a href="#软件与工具" class="headerlink" title="软件与工具"></a>软件与工具</h3><p> 工欲善其事必先利其器,既然是日常使用,那必定要好用,记录并分享一些我常用的工具,此文档会不断更新.由于本人使用的是windows系统,因此一般提供的都是win系统的,有些软件官方开源并支持多平台的,就直接提供官方地址,有些是破解版的,只提供win版本.</p><h5 id="typora"><a href="#typora" class="headerlink" title="typora"></a><a href="https://www.typora.io/">typora</a></h5><p>一款MD格式的文本编辑器,我主要用来记录日常笔记以及开发文档说明.虽然MD语法不太多,但是记起来也麻烦,这款软件特点是直接展示格式化后的样子,而不是左右对照,另外一个优点是可以直接粘贴图片,至于输出格式有很多,支持PDF,HTML等.</p><p>此款软件支持图床,图片能在线保存,具体支持的系统以及上传图片的软件请参照<a href="https://picgo.github.io/PicGo-Doc/zh/guide/">官方软件操作指南</a>,</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/smart_tadpole/images/raw/master/image-20210113145545340.png" alt="image-20210113145545340"></p><p>默认只支持红框中的图床,如果想使用gitee需要手动通过插件添加该图床,我这里选择了使用picGo软件以及Gitee图床</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/smart_tadpole/images/raw/master/image-20210113145810034.png" alt="image-20210113145810034"></p><p>如果使用gitee需要安装Node.js,去官网下载个LTS(Long-Term Support, 双数字版本)版本勾选默认安装即可.</p><p>为何这么多图床,我最重选择了gitee呢? </p><ul><li>七牛免费虽好,但是需要实名认证,还要备案.</li><li>github我也配置了,图片倒是正常上传到github了,但是在Typora中没有预览显示….图片也无法访问.</li></ul><p>(PS,我网上搜索发现图片是可以通过配置站点解析可以使用的,于是乎,我又切换到了github图床,方法如下:</p><pre><code>window系统打开路径C:\Windows\System32\drivers\etc下的hosts文件, 然后添加如下代码# GitHub Start 192.30.253.112    github.com 192.30.253.119    gist.github.com151.101.184.133    assets-cdn.github.com151.101.184.133    raw.githubusercontent.com151.101.184.133    gist.githubusercontent.com151.101.184.133    cloud.githubusercontent.com151.101.184.133    camo.githubusercontent.com151.101.184.133    avatars0.githubusercontent.com151.101.184.133    avatars1.githubusercontent.com151.101.184.133    avatars2.githubusercontent.com151.101.184.133    avatars3.githubusercontent.com151.101.184.133    avatars4.githubusercontent.com151.101.184.133    avatars5.githubusercontent.com151.101.184.133    avatars6.githubusercontent.com151.101.184.133    avatars7.githubusercontent.com151.101.184.133    avatars8.githubusercontent.com  # GitHub End</code></pre><p>)</p><ul><li>使用gitee,国内服务器,速度快,缺点就是在github页面预览时候比较慢,同时按照gitee需要安装插件和Node.js,因为不是picGo默认支持的,所以需要添加额外工具.</li></ul><p>安装过程中可能会踩点坑,一般来说对照<a href="https://picgo.github.io/PicGo-Doc/zh/guide/">官方软件操作指南</a>安装,基本上不会出现啥问题,我这说下我遇到的坑吧</p><ul><li>安装node.js后,在picGo中点击安装gitee插件,一直提示请先安装node.js..按照要求点重启应用还是不行,后面发现先关闭应用,再打开就行了,直接点重启居然没生效…</li><li>在填写图床配置时候,对着<a href="https://picgo.github.io/PicGo-Doc/zh/guide/">官方软件操作指南</a>填写必填参数就行了,不要填customurl,填完了发现图片可以上传,但是Typora无法预览…你也无法通过上传后的网址在浏览器访问该图片,而使用默认的是可以直接通过上传后返回的url在浏览器访问到图片的.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/smart_tadpole/images/raw/master/image-20210113153352060.png" alt="image-20210113153352060"></p><h5 id="Potplayer-绿色便携版，官方安装版"><a href="#Potplayer-绿色便携版，官方安装版" class="headerlink" title="Potplayer  绿色便携版，官方安装版"></a><strong>Potplayer</strong>  <a href="https://wwe.lanzous.com/i7TGSkbfmbe">绿色便携版</a>，<a href="https://potplayer.daum.net/?lang=zh_CN">官方安装版</a></h5><p>堪称Windows下的播放神器，虽然现在已经有官方中文版，不过在中国好用的是它的绿色汉化版，而不是官方安装版。在中国好用的是它的绿色汉化版，而不是官方安装版。PotPlayer就是KMPlayer作者换公司之后基于KMPlayer开发出来的，低内存占用、无广告、功能强大又唯美的本地播放器。  </p><h5 id="ZY-Player-Github下载-蓝奏云备份-密码-b0ai"><a href="#ZY-Player-Github下载-蓝奏云备份-密码-b0ai" class="headerlink" title="ZY-Player Github下载 蓝奏云备份(密码:b0ai)"></a>ZY-Player <a href="https://github.com/Hunlongyu/ZY-Player">Github下载</a> <a href="https://wwe.lanzous.com/b0162anbe">蓝奏云备份</a>(密码:b0ai)</h5><p>一款开源的在线视频播放软件,画质清晰,高清无广告,资源多而且更新快.支持跨平台(PC端,Android手机端,电视端,浏览器端)</p><h5 id="Dism-（开源）开源绿色便携版"><a href="#Dism-（开源）开源绿色便携版" class="headerlink" title="Dism++（开源）开源绿色便携版"></a><strong>Dism++（开源）</strong><a href="https://www.chuyu.me/zh-Hans">开源绿色便携版</a></h5><p>Dism++ 中文多语免费版是由国内初雨团队采用微软内部 Windows API 开发的的一款用于 Windows 系统精简优化的工具。Dism++ 中文版某种程度上可以说是以前的 Dism 管理器的升级版（最开始的名字叫 Windows 更新清理工具。Dism++ 中文版全新的构建，更小的体积占用，更快的响应，更为底层的操作了系统，提供更加丰富的制定，支持所有 Windows 操作系统。</p><h5 id="ScreenToGif-github，官网下载"><a href="#ScreenToGif-github，官网下载" class="headerlink" title="ScreenToGif    github，官网下载"></a><strong>ScreenToGif</strong>    <a href="https://github.com/NickeManarin/ScreenToGif">github</a>，<a href="http://www.screentogif.com/">官网下载</a></h5><p>开源免费绿色功能齐全的GIF录屏软件 官网支持安装版和免安装版下载，可以录制屏幕、摄像头和画板，录制-编辑一条龙。自由拖动设置录屏区域,录制完成后可以在保存前设置录制质量和像素大小以及密度,保存时可以输出为git或者图片,视频等功能.具体功能如图所示</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:\Users\admin\AppData\Roaming\Typora\typora-user-images\image-20210112155325347.png" alt="image-20210112155325347"></p><h5 id="班迪录屏-便携破解版"><a href="#班迪录屏-便携破解版" class="headerlink" title="班迪录屏(便携破解版)"></a><a href="https://wwe.lanzous.com/ijJ7tkbedad">班迪录屏</a>(便携破解版)</h5><p>视频录制的电脑工具。它录制的视频文件不仅体积小，而且画质相当清晰，支持H.264预制高清，以较高的压缩率可录制超过分辨率高达3840×1600高画质视频（1080p全高清视频），录制的同时还可以添加个性化 LOGO到视频中，Bandicam支持bmp、png 、jpeg等格式截图。<strong>启动即为破解版，无需屏蔽联网</strong></p><h5 id="PDF-XChange-Editor-免安装版本"><a href="#PDF-XChange-Editor-免安装版本" class="headerlink" title="PDF XChange Editor(免安装版本)"></a><a href="https://wwe.lanzous.com/iazrowd">PDF XChange Editor</a>(免安装版本)</h5><p>体积小,我从13年开始使用,非常好用. PDF-XChange Editor是著名的PDF阅读工具PDF-XChange的编辑器增强版本，专注于PDF电子文档的编辑功能，体积小巧，速度飞快，界面友好，具备丰富的配置和功能选项，而且非常简单易用.现在已经有升级破解版了,不过一百多M,我一直没换,有需要的可以自行网上搜索.</p><h5 id="Neat-Download-Manager-免安装版"><a href="#Neat-Download-Manager-免安装版" class="headerlink" title="Neat Download Manager(免安装版)"></a><a href="https://wwe.lanzous.com/ivQclkbfxti">Neat Download Manager</a>(免安装版)</h5><p>简称NDM下载器，与 Internet Download Manager 下载器差不多是姐妹花，不过Neat Download Manager下载器的特色是完全的免费.下载速度超快,配合chrome浏览器的NDM extendtion插件使用,下载网络资源基本上都以M为单位的,同时可以识别网页中的视频文件,并提供下载.</p><h5 id="浏览器插件"><a href="#浏览器插件" class="headerlink" title="浏览器插件"></a>浏览器插件</h5><ul><li><p><a href="https://wwe.lanzous.com/ia6geij">谷歌访问助手破解版</a> 目的是chrome浏览器访问google搜索,google商店,去下载别的插件.</p></li><li><p>油猴: 安装完谷歌访问助手后,在商店搜索油猴插件,它里面有很多脚本,比如破解百度文库下载限制,VIP视频解析,比如csdn网页净化,除去烦人的广告等.还是很有用的. <a href="https://greasyfork.org/zh-CN/scripts"><strong>脚本列表</strong></a></p></li><li><p>NDM extendtion插件, 配合NDM下载器, 下载神器.</p></li><li><p>其余还有很多好用的插件,能访问google商店了,自己搜下就好了.</p></li></ul><h5 id="DF一键开关"><a href="#DF一键开关" class="headerlink" title="DF一键开关"></a><a href="https://wwe.lanzous.com/iiyyWkbc2lg">DF一键开关</a></h5><p>DF是windows 自带的Defender缩写,有时候安装破解软件会被拦截,需要关闭或者开启</p><h5 id="7z压缩软件"><a href="#7z压缩软件" class="headerlink" title="7z压缩软件"></a><a href="https://www.7-zip.org/download.html">7z压缩软件</a></h5><p>因为WinRar,好压2345等带广告,很烦人. 7Z体积小(1M左右),压缩率很高,而且免费开源</p><h5 id="EveryThing文件搜索工具"><a href="#EveryThing文件搜索工具" class="headerlink" title="EveryThing文件搜索工具"></a><a href="https://www.voidtools.com/zh-cn/downloads/">EveryThing文件搜索工具</a></h5><p>搜索超快,小巧,免安装,官方版本.</p><h5 id="洛雪音乐助手-多平台-开源-官方地址-网盘地址-密码-glqw"><a href="#洛雪音乐助手-多平台-开源-官方地址-网盘地址-密码-glqw" class="headerlink" title="洛雪音乐助手(多平台,开源)  官方地址  网盘地址(密码: glqw)"></a>洛雪音乐助手(多平台,开源)  <a href="https://github.com/lyswhut/lx-music-desktop">官方地址</a>  <a href="https://www.lanzoux.com/b0bf2cfa/">网盘地址</a>(密码: glqw)</h5><p>支持多平台,开源,免安装,软件界面清新,支持免费下载无损音乐…资源丰富,喜欢听歌的必备.</p><h5 id="PDF压缩-图片压缩工具"><a href="#PDF压缩-图片压缩工具" class="headerlink" title="PDF压缩,图片压缩工具"></a>PDF压缩,图片压缩工具</h5><p>网上下载的电子书经常超过100M,导致无法上传到github,无法和读书笔记放一起,本想找个比较好用的pdf压缩工具,结果免费的有限制,还是网页版居多,最后选择了金山pdf,使用学生身份买了一个会员.前些年用WPS感觉蛮不好用的,如今使用WPS套装,感觉比office还强大,<a href="https://wwe.lanzous.com/b0162i9gd">WPS校园版 </a>(密码:elas)广告少功能多,不过官网不提供下载了.促使我买会员的主要功能:</p><ul><li><p>wps图片: 图片尺寸修改</p></li><li><p>金山pdf 文档压缩</p></li></ul><p>此外,还有ppt一键美化,现在也是免费开放中,希望WPS越做越好.</p><h5 id="思维导图XMind"><a href="#思维导图XMind" class="headerlink" title="思维导图XMind"></a><a href="https://wwe.lanzous.com/ifzLEl6ll9i">思维导图XMind</a></h5><p>绿色便携版本,解压即可用.</p><h5 id="flameshot"><a href="#flameshot" class="headerlink" title="flameshot"></a><a href="https://github.com/flameshot-org/flameshot/releases">flameshot</a></h5><p>开源截图工具,使用prtSc一键截屏,可以自定义快捷键,功能强大.</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统学习</title>
      <link href="2021/04/08/linux-xi-tong/"/>
      <url>2021/04/08/linux-xi-tong/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux系统学习"><a href="#Linux系统学习" class="headerlink" title="Linux系统学习"></a>Linux系统学习</h2><p><a href="https://www.linux.org/">官网地址</a>, 本笔记是根据B占韩顺平老师的<a href="https://www.bilibili.com/video/BV1Sv411r7vd">一周学会Linux</a>而总结的.</p><h4 id="linux介绍"><a href="#linux介绍" class="headerlink" title="linux介绍"></a>linux介绍</h4><p>是一种免费使用和自由传播的类UNIX操作系统.目前我们常见到的是基于linux内核的各种发行版本.</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210628101916.png" alt="image-20210628101916046"></p><p>本次视频学习内容</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210628102147.png" alt="image-20210628102146861"></p><h4 id="linux基础"><a href="#linux基础" class="headerlink" title="linux基础"></a>linux基础</h4><h5 id="Linux系统安装"><a href="#Linux系统安装" class="headerlink" title="Linux系统安装"></a>Linux系统安装</h5><ul><li>找一台真正安装了linux系统的机器, 比如阿里云,腾讯云等.一般新人会有优惠.</li><li>安装虚拟机VM(virtual machine), 然后在VM上安装linux发行版Centos.</li></ul><h6 id="vm虚拟机安装"><a href="#vm虚拟机安装" class="headerlink" title="vm虚拟机安装"></a>vm虚拟机安装</h6><p><a href="https://www.vmware.com/cn.html">vmware官网</a>—&gt;产品下载—-&gt;workstation Pro</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210628112313.png" alt="image-20210628112313505"></p><p>点进去后,可以根据名字寻找,下拉到底部,也可以在搜索框输入“workstation Pro”</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210628112637.png" alt="image-20210628112637862"></p><h6 id="vm安装注意事项-以windows为例"><a href="#vm安装注意事项-以windows为例" class="headerlink" title="vm安装注意事项(以windows为例)"></a>vm安装注意事项(以windows为例)</h6><ul><li>开机在BIOS系统中开启虚拟化设备支持设置, <a href="https://jingyan.baidu.com/article/ab0b56305f2882c15afa7dda.html">教程</a></li></ul><p>本人联想台式机,与教程并不一样,记录下流程:  开机—&gt;不停按F1—&gt;进入BIOS—&gt;高级菜单—&gt;CPU菜单—&gt;intel virtualization技术.</p><ul><li>以管理员身份运行软件</li><li>输入软件注册码</li></ul><h6 id="Centos下载与安装"><a href="#Centos下载与安装" class="headerlink" title="Centos下载与安装"></a>Centos下载与安装</h6><p>去镜像网站下载,此处列举2个镜像</p><p><a href="https://mirrors.aliyun.com/">阿里云开源镜像</a></p><p><a href="https://mirrors.huaweicloud.com/home">华为云开源镜像</a></p><p>安装, 参考老师的教程.</p><h5 id="虚拟机的克隆"><a href="#虚拟机的克隆" class="headerlink" title="虚拟机的克隆"></a>虚拟机的克隆</h5><ul><li>方式一, 直接copy一份已存在的linux系统安装文件夹,然后使用vm虚拟机打开文件,选择后缀为wmx的文件.</li><li>使用wm虚拟机,选择指定系统,右键选择clone, 建议完整克隆.</li></ul><h5 id="VMTools安装"><a href="#VMTools安装" class="headerlink" title="VMTools安装"></a>VMTools安装</h5><p>wmtools是一个win/linux系统共享文件工具,安装参照老师教程</p><p>注意点:  若提示普通用户无权限,可切换到root用户</p><p>使用:  选择centos—&gt;右键—&gt;设置–&gt;选项—&gt;共享文件夹—&gt;启用,添加文件目录.</p><h5 id="Linux目录"><a href="#Linux目录" class="headerlink" title="Linux目录"></a>Linux目录</h5><p>在linux系统中,一切皆文件.  顶层目录结构为“/”, 其余目录皆在它的子目录.</p><h6 id="应用目录"><a href="#应用目录" class="headerlink" title="应用目录"></a>应用目录</h6><ul><li>/bin (/usr/bin, /usr/local/bin), binary的缩写,存放最经常使用的命令.</li><li>/sbin(/usr/bin, /usr/local/bin) s是super的意思,存放系统管理员使用的系统程序</li><li>/home, 存放普通用户的主目录,每个用户都会在此目录下创建一个以自己账户名为名字的文件夹.</li><li>/root, 系统管理员的用户主目录.</li><li>/etc, 系统管理所需要的配置文件和子目录.</li><li>/usr, 存放用户的应用程序和文件</li><li>/tmp, 存放临时文件</li><li>/mnt, 挂载临时的外部文件系统,比如共享文件夹.</li><li>/opt 用户下载的安装软件存放目录,比如xx压缩包</li><li>/usr/local 软件安装后所在的安装目录.一般是通过编译源码的方式安装.</li></ul><h6 id="系统目录"><a href="#系统目录" class="headerlink" title="系统目录"></a>系统目录</h6><ul><li>/lib, 系统开机需要的最基本的动态连接共享库</li><li>/lost+found, 一般为空,系统非法关机才会存储一些文件.</li><li>/boot, 存放启动linux的一些核心文件.</li><li>/proc, 系统内存的映射,访问该目录获取系统信息.</li><li>/srv, service的缩写,存放一些服务启动后所需要提取的数据</li><li>/sys, 2.6系统中的一个文件夹</li><li>/dev,类似于win中的设备管理器,把所有硬件使用文件存储</li><li>/media 将外部设备挂载到该目录</li><li>/var, 经常存放一些log类的文件</li><li>/selinux, 安装子系统,控制程序只能访问特定文件.</li></ul><h4 id="linux实战"><a href="#linux实战" class="headerlink" title="linux实战"></a>linux实战</h4><h5 id="linux远程登录"><a href="#linux远程登录" class="headerlink" title="linux远程登录"></a>linux远程登录</h5><h6 id="连接工具"><a href="#连接工具" class="headerlink" title="连接工具"></a>连接工具</h6><ul><li>命令行工具Xshell6</li><li>文件传输工具Xftp6</li></ul><p>其余同类软件可备选</p><h6 id="连接步骤"><a href="#连接步骤" class="headerlink" title="连接步骤"></a>连接步骤</h6><ol><li>获取linux系统的公网IP.   终端命令行窗口输入命令: ifconfig</li><li>xshell6新建会话,设置主机地址.</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:\Users\admin\AppData\Roaming\Typora\typora-user-images\image-20210629104532643.png" alt="image-20210629104532643"></p><ol start="3"><li>连接成功后,测试是否可以输入命令</li></ol><h5 id="vi-vim介绍"><a href="#vi-vim介绍" class="headerlink" title="vi/vim介绍"></a>vi/vim介绍</h5><p>linux系统内置vi文本编辑器.vim可以看做是vi的增强版.它具有类似于ide的基本功能,比如显示行号,自动代码补充,编译等功能.它具有三种工作模式</p><h5 id="三种模式"><a href="#三种模式" class="headerlink" title="三种模式"></a>三种模式</h5><ul><li><p>一般模式(默认)</p></li><li><p>插入模式,  按i,I, O ,o,A,r,R 任一字母进入该模式.. 建议i, 代表insert</p></li><li><p>命令行模式, 一般模式下按:或者/进入</p></li></ul><p>模式切换: ESC, 退出当前模式</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210629114357.png" alt="image-20210629114357558"></p><h5 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h5><ol><li>拷贝当前行: yy,拷贝多行,比如从当前开始下面5行,  5yy,粘贴:  p.  此操作需要在一般模式下.</li><li>删除当前行 dd, 删除多行, 5dd</li><li>文件中查找某个单词.  切换到命令行, 输入/关键字, 回车, 输入n,查找下一个.</li><li>设置行号, 命令行下输入   : set nu   , 取消行号, 命令行下输入 :set nonu</li><li>快速定位到首行/尾行, 一般模式下输入gg/G</li><li>撤销上一次输入, 一般模式下输入u</li><li>更多命令,参考教程.</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210629134933.png" alt="image-20210629134932842"></p><h5 id="开关机-注销命令"><a href="#开关机-注销命令" class="headerlink" title="开关机/注销命令"></a>开关机/注销命令</h5><ul><li>shutdown -h now   立刻关机, h=halt</li><li>shutdown -h  1    1分钟后关机等同于shutdown</li><li>shutdown -r now  立刻重启,  r=reboot</li><li>halt   关机</li><li>reboot  重启</li><li>sync 同步内存数据到磁盘… 建议注销/关机前同步</li><li>su - 管理员用户名    切换管理员用户名,当然也可以切换普通用户</li><li>logout  注销用户, 仅在运行级别有效,图形界面无效.</li></ul><p>虽然现在shutdown/reboot/halt执行前均sync了,但是还是建议手动执行一次sync</p><h5 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//管理员登录,才有权限对用户进行增删操作</span>useradd 用户名    <span class="token comment" spellcheck="true">//新增用户,默认目录在/home/xxx</span>useradd <span class="token operator">-</span>d 指定目录 用户名  <span class="token comment" spellcheck="true">//新增用户并指定目录名.</span>passwd 用户名     <span class="token comment" spellcheck="true">//给xxx用户设置密码</span>userdel xxx    <span class="token comment" spellcheck="true">//删除xxx, 不删除工作目录</span>userdel <span class="token operator">-</span>r xxx   <span class="token comment" spellcheck="true">//删除xxx同时删除他的工作目录</span>id xxx   <span class="token comment" spellcheck="true">//查询xxx的信息</span>su <span class="token operator">-</span> xxx  <span class="token comment" spellcheck="true">//切换用户,高权限-->低权限,无需密码,反之是需要的.</span>exit<span class="token operator">/</span>logout  <span class="token comment" spellcheck="true">//切回到原来用户</span>    <span class="token comment" spellcheck="true">//用户分组</span>groupadd 组名    <span class="token comment" spellcheck="true">//新增一个组</span>groupdel 组名    <span class="token comment" spellcheck="true">//删除一个组</span>useradd <span class="token operator">-</span>g 用户组 用户名   <span class="token comment" spellcheck="true">//新增一个用户,并指定到xx组, 如果不指定,默认是放在以自己名字为单独的用户组</span>usermod <span class="token operator">-</span>g 用户组 用户名    <span class="token comment" spellcheck="true">//将xxx移到指定的用户组</span>    <span class="token comment" spellcheck="true">//用户和组相关的文件</span><span class="token operator">/</span>etc<span class="token operator">/</span>passwd   用户user的配置文件<span class="token punctuation">,</span>记录用户的各种信息 登录名<span class="token operator">:</span>密码<span class="token operator">:</span>用户标识号<span class="token operator">:</span>组标识号<span class="token operator">:</span>注释性描述<span class="token operator">:</span>主目录<span class="token operator">:</span>登录shell root<span class="token operator">:</span>x<span class="token operator">:</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">0</span><span class="token operator">:</span>root<span class="token operator">:</span><span class="token operator">/</span>root<span class="token operator">:</span><span class="token operator">/</span>bin<span class="token operator">/</span>bash        <span class="token operator">/</span>etc<span class="token operator">/</span>shadow   口令的配置文件 每行的含义：登录名<span class="token operator">:</span>加密口令<span class="token operator">:</span>最后一次修改时间<span class="token operator">:</span>最小时间间隔<span class="token operator">:</span>最大时间间隔<span class="token operator">:</span>警告时间<span class="token operator">:</span>不活动时间<span class="token operator">:</span>失效时间<span class="token operator">:</span>标志     <span class="token operator">/</span>etc<span class="token operator">/</span>group  组的配置文件<span class="token punctuation">,</span>记录linux包含的组信息每行含义：组名<span class="token operator">:</span>口令<span class="token operator">:</span>组标识号<span class="token operator">:</span>组内用户列表   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="运行级别"><a href="#运行级别" class="headerlink" title="运行级别"></a>运行级别</h5><p>linux系统存在7个运行级别,常用的运行级别是3,5.我们可以手动的指定默认运行级别.</p><ol start="0"><li>关机</li><li>单用户(找回丢失密码)</li><li>多用户状态无网络服务</li><li>多用户状态有网络服务</li><li>系统未使用保留给用户</li><li>图形界面</li><li>重启系统</li></ol><h6 id="切换运行级别"><a href="#切换运行级别" class="headerlink" title="切换运行级别"></a>切换运行级别</h6><p>终端输入:  init x,  x代表0-6这7个运行级别.</p><p>设置默认的运行级别:   systemctl set-default xx.target        multi=user.target 代表级别3,     graphical.target 代表运行级别5.</p><p>查看当前运行级别:   systemctl get-default</p><h5 id="找回root密码-CentOS7教程"><a href="#找回root密码-CentOS7教程" class="headerlink" title="找回root密码(CentOS7教程)"></a>找回root密码(CentOS7教程)</h5><p>1, 开机界面,出现CentOS Linux时候,按“e”, 进入编辑页面.</p><p>==注意: 进入编辑界面后,无法切换到主机win系统,无法使用截图或者其余按键调用别的软件,请事先准备好要输入的命令.第2步完成后,后面可恢复正常==</p><p>2, 进入编辑界面后,使用方向键移动光标,找到以“linux16”为开头的所在行数,在行的最后面输入 init=/bin/sh, 然后按ctrl+x进入单用户模式.</p><p>3, 在界面闪烁处输入: mount -o remount,rw /      ,完成后按enter</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210630102548.png" alt="image-20210630102548673"></p><p>4, 接着输入passwd,按Enterh后输入密码,然后再次输入确认密码.</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210630102643.png" alt="image-20210630102643568"></p><p>5, 输入: touch /.autorelabel  ; 完成后按enter</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210630102729.png" alt="image-20210630102729209"></p><p>6, 输入: exec /sbin/init  ; 完成后按enter,等待系统自动修改密码(需等待较长时间,大概需要2分钟).然后系统会自动重启.</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210630102841.png" alt="image-20210630102841919"></p><h5 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h5><h6 id="帮助类指令"><a href="#帮助类指令" class="headerlink" title="帮助类指令"></a>帮助类指令</h6><p>man xx      获得xx的帮助信息</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//示例</span>man ls    <span class="token comment" spellcheck="true">//查看ls命令的详细信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>help        获得shell内置命令的帮助信息</p><h6 id="目录指令"><a href="#目录指令" class="headerlink" title="目录指令"></a>目录指令</h6><p>pwd   显示当前工作目录的绝对路径</p><p>ls  [选项] [目录或者文件]   查看指定目录的详细信息</p><ul><li>-a : 显示所有目录,包含隐藏文件</li><li>-l  : 以列表方式显示</li><li>其余的参照选项命令参照指示,  可以组合使用,比如-al(la, 不区分先后)</li></ul><p>cd [参数]      //切换到指定目录</p><p>cd ~     //返回自己的家目录</p><p>mkdir [选项] 目录名    //用于创建目录</p><p>常用选项: -p, 创建多级目录</p><p>注意事项:  创建一级子目录,可以直接使用,创建多级子目录,需要用到绝对路径.</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//当前用户目录为/home/user1</span>mkdir dog   <span class="token comment" spellcheck="true">//当前目录下直接创建dog文件夹</span>mkdir <span class="token operator">-</span>p <span class="token operator">/</span>home<span class="token operator">/</span>user1<span class="token operator">/</span>animal<span class="token operator">/</span>cat   <span class="token comment" spellcheck="true">//创建多级目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>rmdir [选项] 要删除的目录</p><p>rm -rf xx    //递归删除xx及其子目录</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//当前用户目录为/home/user1</span>rmdir dog   <span class="token comment" spellcheck="true">//删除当前目录下dog文件夹</span>rm <span class="token operator">-</span>rf <span class="token operator">/</span>home<span class="token operator">/</span>user1<span class="token operator">/</span>animal<span class="token operator">/</span>cat   <span class="token comment" spellcheck="true">//递归删除孙子级别目录cat及其子目录.如果是直接子目录可以相对路径,如果不是,则必须使用绝对路径.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>touch xx    //创建xx空文件</p><pre class="line-numbers language-java"><code class="language-java">touch hello<span class="token punctuation">.</span>java     <span class="token comment" spellcheck="true">//创建hello的空文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cp [选项] source dest   //从源文件(夹)复制到目标文件(夹)</p><p>-r  //递归复制整个文件夹</p><p>\cp : 强制覆盖不提示, 示例: \cp -r /home/bbb  /opt</p><p>注意事项:  当前目录下可以直接文件(夹)名, 其余目录是绝对路径.</p><p>mv指令:   </p><ul><li>当前目录下使用, 重命名  mv oldName  newName</li><li>不同目录下,移动功能  mv  /home/bb  /opt    //将home目录下的bb文件夹整体移动到opt目录下</li></ul><p>cat : 查看文件内容, 只能浏览而不能修改. 为了浏览方便,一般会带上管道命令 | more</p><p>cat [选项] 文件名 </p><p>-n  : 显示行号</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//示例</span>cat <span class="token operator">-</span>n <span class="token operator">/</span>etc<span class="token operator">/</span>profile <span class="token operator">|</span> more<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>more指令是基于VI编辑器的文本过滤器,它以全屏幕的方式按页显示文件内容, more指令内置了若干快捷键.详细操作如下: </p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210630161534.png" alt="image-20210630161534097"></p><p>less:  分屏查看文件内容,功能与more指令类似.但是更强大,支持显示各种中断,加载文件是按需加载,而不是一次性加载,节省内存.</p><p>基本语法:   less  文件完整路径</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210630162912.png" alt="image-20210630162912653"></p><p>echo: 输出内容到控制台</p><p>语法:   echo [选项] [输出内容]</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//示例</span>echo $HOSTNAME   <span class="token comment" spellcheck="true">//输出当前主机名</span>echo <span class="token string">"hello"</span>    <span class="token comment" spellcheck="true">//输出hello</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>head:  用于显示文件的开头部分内容. 默认显示前面10行.</p><p>基本语法:  head 文件,  head -n 5 文件路径</p><pre class="line-numbers language-java"><code class="language-java">head <span class="token operator">/</span>etc<span class="token operator">/</span>profile        <span class="token comment" spellcheck="true">//查看前10行</span>head <span class="token operator">-</span>n <span class="token operator">/</span>etc<span class="token operator">/</span>profile   <span class="token comment" spellcheck="true">//查看前5行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>tail 输出文件末尾内容,默认10行</p><p>基本语法: tail 文件路径</p><pre class="line-numbers language-java"><code class="language-java">tail <span class="token operator">/</span>etc<span class="token operator">/</span>profile   <span class="token comment" spellcheck="true">//查看文件末尾10行</span>tail <span class="token operator">-</span>n <span class="token number">5</span> <span class="token operator">/</span>etc<span class="token operator">/</span>profile   <span class="token comment" spellcheck="true">//查看文件末尾5行</span>tail <span class="token operator">-</span>f <span class="token operator">/</span>etc<span class="token operator">/</span>profile   <span class="token comment" spellcheck="true">//实时追踪该文档的所有更新</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>“&gt;” 输出重定向, &gt;&gt;追加指令</p><pre class="line-numbers language-java"><code class="language-java">ls <span class="token operator">-</span>l <span class="token operator">></span> a<span class="token punctuation">.</span>txt   <span class="token comment" spellcheck="true">//将当前目录下的子文件信息列出并写入a.txt文件中</span>ls <span class="token operator">-</span>al <span class="token operator">>></span> a<span class="token punctuation">.</span>txt   <span class="token comment" spellcheck="true">//将当前目录下的文件信息追加到a.txt中</span>cat 文件<span class="token number">1</span> <span class="token operator">></span>文件<span class="token number">2</span>    <span class="token comment" spellcheck="true">//将1中的内容完整覆盖到2中,类似于复制文件并重命名</span> echo <span class="token string">"hello"</span> <span class="token operator">>></span> a<span class="token punctuation">.</span>txt   <span class="token comment" spellcheck="true">//将hello追加到a.txt中.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>ln 连接符,类似于win里面的快捷方式.</p><p>基本语法:  ln -s [原路径] [软连接名]   //给源文件创建一个软连接</p><pre class="line-numbers language-java"><code class="language-java">ln <span class="token operator">-</span>s <span class="token operator">/</span>root <span class="token operator">/</span>home<span class="token operator">/</span>myroot   <span class="token comment" spellcheck="true">//将myroot连接到/root目录.</span> rm <span class="token operator">/</span>home<span class="token operator">/</span>myroot 删除软连接<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>history:  查看已经执行过的历史命令.</p><pre class="line-numbers language-java"><code class="language-java">history   <span class="token comment" spellcheck="true">//显示所有的历史命令</span>history <span class="token number">5</span>   <span class="token comment" spellcheck="true">//显示前5个</span><span class="token operator">!</span><span class="token number">5</span>    <span class="token comment" spellcheck="true">//执行编号为5的历史指令</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h6 id="时间日期类"><a href="#时间日期类" class="headerlink" title="时间日期类"></a>时间日期类</h6><p>date 显示当前日期</p><pre class="line-numbers language-java"><code class="language-java">date   <span class="token comment" spellcheck="true">//显示当前详细的时间信息</span>date <span class="token operator">+</span><span class="token operator">%</span>Y <span class="token operator">/</span> <span class="token string">"+%Y"</span> 显示当前年份date <span class="token operator">+</span><span class="token operator">%</span>m    <span class="token comment" spellcheck="true">//显示当前月份</span>date <span class="token operator">+</span><span class="token operator">%</span>d    <span class="token comment" spellcheck="true">//显示当前天</span>date <span class="token string">"+%Y-+%m-+%d %H:%M:%S"</span>   <span class="token comment" spellcheck="true">//显示当前年月日时分秒</span>date <span class="token operator">-</span>s <span class="token string">"2020-11-03 20:02:10"</span> <span class="token comment" spellcheck="true">//将时间设置为想设置的时间</span>  <span class="token comment" spellcheck="true">//cal指令</span>  cal  <span class="token comment" spellcheck="true">//显示当前日历</span>  cal <span class="token number">2021</span> <span class="token comment" spellcheck="true">//显示2021年历</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="搜索查找类"><a href="#搜索查找类" class="headerlink" title="搜索查找类"></a>搜索查找类</h6><p>find 从指定目录下遍历其各个子目录, 将满足条件的显示在终端.</p><p>基本语法:   find [搜索范围] [选项]</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210630180643.png" alt="image-20210630180643326"></p><pre class="line-numbers language-java"><code class="language-java">find <span class="token operator">/</span>home <span class="token operator">-</span>name hello<span class="token punctuation">.</span>java   <span class="token comment" spellcheck="true">//在home目录下查找hello.java文件</span>find <span class="token operator">/</span>home <span class="token operator">-</span>name <span class="token operator">*</span><span class="token punctuation">.</span>java   <span class="token comment" spellcheck="true">//在home目录下查找.java后缀的文件    </span>find <span class="token operator">/</span>opt <span class="token operator">-</span>user tom   <span class="token comment" spellcheck="true">//在opt目录下查找tom创建的文件</span>    <span class="token comment" spellcheck="true">// +大于, -小于, 不写就是等于,  k=kb, M=Mb, G=Gb    </span>find <span class="token operator">/</span>opt <span class="token operator">-</span>size <span class="token operator">+</span>200M  <span class="token comment" spellcheck="true">//在opt目录下查找大于200M的文件.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>locate可以快速定位文件路径.它是利用实现事先建立的系统中所有文件名称以及路径的locate数据库实现快速定位文件. 所以使用之前需要updatedb.类似于win系统中的everything搜索工具.</p><pre class="line-numbers language-java"><code class="language-java">locate hello<span class="token punctuation">.</span>txt   <span class="token comment" spellcheck="true">//查找hello.txt文件位置</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>grep, 过滤查找,一般和管道符“|”合用.表示将前一个命令处理的结果输出传递给后面的命令来处理.</p><p>基本语法:  grep [选项] 查找内容 源文件</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210701091938.png" alt="image-20210701091938336"></p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//示例</span>grep <span class="token operator">-</span>n <span class="token string">"yes"</span> <span class="token operator">/</span>home<span class="token operator">/</span>hello<span class="token punctuation">.</span>txt         <span class="token comment" spellcheck="true">//在hello.txt中查找yes并显示行号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="压缩-解压缩类"><a href="#压缩-解压缩类" class="headerlink" title="压缩/解压缩类"></a>压缩/解压缩类</h6><p> gzip 压缩文件, gunzip解压缩文件</p><p>zip [选项] xxx.zip  sourceFile     </p><p>unzip [选项] xxx.zip </p><p>-r 递归压缩;   -d 目录 :指定解压后文件的存放目录</p><p>tar 打包指令,格式为.tar.gz</p><p>基本语法:   tar [选项]  xxx.tar.gz  sourceFile</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210701102034.png" alt="image-20210701102034843"></p><pre class="line-numbers language-java"><code class="language-java">gzip  文件           <span class="token comment" spellcheck="true">//将文件压缩为*.gz文件</span>gunzip 文件<span class="token punctuation">.</span>gz   <span class="token comment" spellcheck="true">//解压缩文件</span>        <span class="token comment" spellcheck="true">//-----zip指令</span>zip <span class="token operator">-</span>r myhome<span class="token punctuation">.</span>zip <span class="token operator">/</span>home<span class="token operator">/</span>     <span class="token comment" spellcheck="true">//将home文件夹压缩为myhome.zip</span>unzip <span class="token operator">-</span>d <span class="token operator">/</span>opt<span class="token operator">/</span>tmp <span class="token operator">/</span>home<span class="token operator">/</span>myhome<span class="token punctuation">.</span>zip      <span class="token comment" spellcheck="true">//将myhome.zip解压到tmp目录下.</span>    <span class="token comment" spellcheck="true">//tar指令</span> tar <span class="token operator">-</span>zcvf pc<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz <span class="token operator">/</span>home<span class="token operator">/</span>file1<span class="token punctuation">.</span>txt <span class="token operator">/</span>home<span class="token operator">/</span>file2<span class="token punctuation">.</span>txt    <span class="token comment" spellcheck="true">//将file1.file2两个文件打包到pc.tar.gz文件中</span>tar <span class="token operator">-</span>zxvf pc<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz      <span class="token comment" spellcheck="true">//将pc.tar.gz解压缩.</span>tar <span class="token operator">-</span>zxvf pc<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz <span class="token operator">-</span>C <span class="token operator">/</span>opt      <span class="token comment" spellcheck="true">//将pc.tar.gz解压缩到指定目录.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>基本语法: </p>]]></content>
      
      
      <categories>
          
          <category> 开发教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx详解</title>
      <link href="2021/03/25/nginx/"/>
      <url>2021/03/25/nginx/</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><h4 id="什么是Nginx"><a href="#什么是Nginx" class="headerlink" title="什么是Nginx"></a>什么是Nginx</h4><p>Nginx是一个高性能的Http和反向代理服务器(也支持正向代理), 优点是占有内存小,并发能力强. Nginx专为性能优化而开发，性能是其最重要的考量.Nginx支持热部署,启动容易.</p><h4 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h4><p>正向代理: 局域网中的客户端要访问Internet,需要通过代理服务器来访问,这种代理服务就称为正向代理.</p><p>反向代理: 客户端并不需要知道真正的服务器地址,将请求发送给反向代理服务器,然后由反向代理服务器转发到真正的服务器.</p><p>差别: 正向代理的是客户端,服务器不做任何配置,反向代理的是服务器,客户端并不感知.</p><h4 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h4><p>随着业务增长与数据的增加,服务器从单一变为多个,将原先请求集中到单个服务器上的情况改为将请求分发到多个服务器上,将负载分发到不同的服务器，也就是我们所说的负载均衡</p><h4 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h4><p>为加快网站解析速度,将静/动态页面分由不同服务器来解析,降低单个服务器的压力,加快解析速度.</p><h4 id="高可用"><a href="#高可用" class="headerlink" title="高可用"></a>高可用</h4><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210611094502.png" alt="img"></p><h3 id="Nginx的安装"><a href="#Nginx的安装" class="headerlink" title="Nginx的安装"></a>Nginx的安装</h3><p><a href="http://nginx.org/">官网地址</a>, 支持linux, windows系统</p><h4 id="Nginx相关依赖"><a href="#Nginx相关依赖" class="headerlink" title="Nginx相关依赖"></a>Nginx相关依赖</h4><ul><li>gcc</li><li>pcre</li><li>openssl</li><li>zlib</li></ul><h4 id="安装方法以及常用命令"><a href="#安装方法以及常用命令" class="headerlink" title="安装方法以及常用命令"></a>安装方法以及常用命令</h4><ol><li>命令行安装(可以一次安装多个)</li></ol><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//安装 nginx 需要先将官网下载的源码进行编译，编译依赖 gcc 环境</span>$ yum install gcc<span class="token operator">-</span>c<span class="token operator">++</span><span class="token comment" spellcheck="true">// PCRE(Perl Compatible Regular Expressions) 是一个Perl库，包括 perl 兼容的正则表达式库。nginx 的 http 模块使用 pcre 来解析正则表达式，所以需要在 linux 上安装 pcre 库，pcre-devel 是使用 pcre 开发的一个二次开发库。nginx也需要此库。</span>$ yum install <span class="token operator">-</span>y pcre pcre<span class="token operator">-</span>devel<span class="token comment" spellcheck="true">//zlib 库提供了很多种压缩和解压缩的方式， nginx 使用 zlib 对 http 包的内容进行 gzip</span>$ yum install <span class="token operator">-</span>y zlib zlib<span class="token operator">-</span>devel<span class="token comment" spellcheck="true">//OpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及 SSL 协议，并提供丰富的应用程序供测试或其它目的使用。nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http）</span>$ yum install <span class="token operator">-</span>y openssl openssl<span class="token operator">-</span>devel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><p>下载压缩包,手动安装</p><ul><li>下载对应的压缩包<ul><li>官网下载对应格式的安装包</li><li><strong>使用<code>wget</code>命令下载（推荐）</strong>。确保系统已经安装了wget，如果没有安装，执行 yum install wget 安装。</li></ul></li><li>解压缩安装包</li></ul><pre class="line-numbers language-cmd"><code class="language-cmd">$ tar -zxvf nginx-1.19.0.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li> 进入目录,进行配置</li></ul><pre class="line-numbers language-cmd"><code class="language-cmd">$ cd nginx-1.19.0$ ./configure  //默认配置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>安装</li></ul><pre class="line-numbers language-cmd"><code class="language-cmd">$ make && make install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="Nginx常用命令"><a href="#Nginx常用命令" class="headerlink" title="Nginx常用命令"></a>Nginx常用命令</h3><p>使用命令之前,必须进入Nginx的目录才行</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//切换目录</span>cd <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>nginx<span class="token operator">/</span>sbin<span class="token comment" spellcheck="true">//查看版本号</span> $ <span class="token punctuation">.</span>/nginx <span class="token operator">-</span>v<span class="token comment" spellcheck="true">//查看安装路径</span>$ whereis nginx<span class="token comment" spellcheck="true">//启动</span><span class="token punctuation">.</span>/nginx <span class="token comment" spellcheck="true">//关闭</span>$ <span class="token punctuation">.</span>/nginx <span class="token operator">-</span>s stop<span class="token comment" spellcheck="true">//重新加载</span><span class="token punctuation">.</span>/nginx <span class="token operator">-</span>s reload <span class="token comment" spellcheck="true">//查看开放的端口号</span>firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>list<span class="token operator">-</span>all    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改Nginx的配置文件"><a href="#修改Nginx的配置文件" class="headerlink" title="修改Nginx的配置文件"></a>修改Nginx的配置文件</h3><p>配置文件路径: /usr/local/nginx/conf/nginx.conf</p><h4 id="配置文件的组成"><a href="#配置文件的组成" class="headerlink" title="配置文件的组成"></a>配置文件的组成</h4><h5 id="1-全局块"><a href="#1-全局块" class="headerlink" title="1. 全局块"></a>1. 全局块</h5><p>从配置文件开始到event块之间的内容,主要设置一些影响Nginx的服务器整体运行的配置指令,包括配置运行Nginx服务器的用户(组),允许生成worker process数(越大,支持并发处理越多),进程PID存放路径,日志存放路径,类型, 以及配置文件的引入等.</p><h5 id="2-enents块"><a href="#2-enents块" class="headerlink" title="2.enents块"></a>2.enents块</h5><p>events块涉及的指令主要影响Nginx服务器与用户的网络连接,灵活配置</p><h5 id="3-http块"><a href="#3-http块" class="headerlink" title="3. http块"></a>3. http块</h5><p>配置最频繁的块.代理,缓存,日志定义等绝大多数功能和第三方模块的配置在这儿.</p><h6 id="http全局块"><a href="#http全局块" class="headerlink" title="http全局块"></a>http全局块</h6><p>指令包括文件引入, MIME-TYPE定义,日志自定义,连接超时自定义,单链请求数上限等.</p><h6 id="server块"><a href="#server块" class="headerlink" title="server块"></a>server块</h6><p>和虚拟主机有密切关系,每个http块可以包括多个server块,每个server可以当做一个虚拟主机,每个server块可以分为全局server块+多个location块.</p><ul><li>全局server块: 本虚拟机的监听配置和本虚拟机的名称或IP配置;</li><li>location块, 作用是基于接收到的请求字符串,对虚拟主机之外的名称进行匹配,对特定请求进行处理.地址定向,数据缓存,和应答控制功能,第三方模块配置都在这.</li></ul><h6 id="location说明"><a href="#location说明" class="headerlink" title="location说明"></a>location说明</h6><p>语法如下:</p><pre class="line-numbers language-java"><code class="language-java">location <span class="token punctuation">[</span> <span class="token operator">=</span> <span class="token operator">|</span> <span class="token operator">~</span> <span class="token operator">|</span> <span class="token operator">~</span><span class="token operator">*</span> <span class="token operator">|</span> <span class="token operator">^</span><span class="token operator">~</span><span class="token punctuation">]</span> uri <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//1、=: 用于不含正则表达式的uri前，要求请求字符串与uri严格匹配，如果匹配成功，就停止继续向下搜索并立即处理该请求</span><span class="token comment" spellcheck="true">//2、~: 用于表示uri包含正则表达式，并且区分大小写</span><span class="token comment" spellcheck="true">//3、~*: 用于表示uri包含正则表达式，并且不区分大小写</span><span class="token comment" spellcheck="true">//4、^~: 用于不含正则表达式的uri前，要求Nginx服务器找到标识uri和请求字    符串匹配度最高的location后，立即使用此location处理请求，而不再使用location    块中的正则uri和请求字符串做匹配</span><span class="token comment" spellcheck="true">//注意: 如果uri包含正则表达式，则必须要有~或者~*标识。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Nginx的配置实例"><a href="#Nginx的配置实例" class="headerlink" title="Nginx的配置实例"></a>Nginx的配置实例</h3><h4 id="反向代理实例"><a href="#反向代理实例" class="headerlink" title="反向代理实例"></a>反向代理实例</h4><h5 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h5><p>使用nginx反向代理，根据访问的路径跳转到不同端口的服务中。例如, 访问<a href="http://www.123.com/">www.123.com</a>, nginx暴露的端口是127.0.0.1:1000, 服务器tomcat地址是127.0.0.1:8081, 输入域名能打开tomcat主页</p><h5 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h5><ul><li><p>准备tomcat服务器</p></li><li><p>在本机host里面设置域名与Nginx端口的映射</p></li><li><p>开放对外访问的端口</p></li></ul><p>默认linux防火墙屏蔽了对外访问的端口,如果需要开放,则需要手动打开</p><pre class="line-numbers language-java"><code class="language-java">    firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>add<span class="token operator">-</span>port<span class="token operator">=</span><span class="token number">8080</span><span class="token operator">/</span>tcp <span class="token operator">--</span>permanent    <span class="token comment" spellcheck="true">//重启防火墙</span>    firewall<span class="token operator">-</span>cmd<span class="token operator">-</span>reload   <span class="token comment" spellcheck="true">//查看开放的端口号</span>    firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>list<span class="token operator">-</span>all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="设置Nginx配置文件"><a href="#设置Nginx配置文件" class="headerlink" title="设置Nginx配置文件"></a>设置Nginx配置文件</h5><p>进入到Nginx的配置文件(/usr/local/nginx/conf/nginx.conf)中,修改参数</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://i.loli.net/2021/06/10/Aj8zqTgr5iNPth1.png" alt="image-20210610155016946"></p><h4 id="反向代理实例2"><a href="#反向代理实例2" class="headerlink" title="反向代理实例2"></a>反向代理实例2</h4><h5 id="实现效果-1"><a href="#实现效果-1" class="headerlink" title="实现效果"></a>实现效果</h5><p>监听同一个端口,根据不同的关键词转发到不同的服务器</p><h5 id="配置清单"><a href="#配置清单" class="headerlink" title="配置清单"></a>配置清单</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://i.loli.net/2021/06/10/PxRlBh7qDIkvjwF.png" alt="image-20210610162713693"></p><h4 id="负载均衡实例"><a href="#负载均衡实例" class="headerlink" title="负载均衡实例"></a>负载均衡实例</h4><h5 id="实现效果-2"><a href="#实现效果-2" class="headerlink" title="实现效果"></a>实现效果</h5><p>一个机器配置有多套相同服务的tomcat, 访问指定端口的时候, 平均分发请求到不同的tomcat中</p><h5 id="配置清单-1"><a href="#配置清单-1" class="headerlink" title="配置清单"></a>配置清单</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210610172950.png" alt="img"></p><h5 id="负载均衡分配策略"><a href="#负载均衡分配策略" class="headerlink" title="负载均衡分配策略"></a>负载均衡分配策略</h5><ol><li><p>轮询(默认), 每个请求按时间顺序逐一分配到不 同的后端服务器，如果后端服务器down掉，能自动剔除</p></li><li><p>weigth; 权重默认为1,权重越高被分配的客户端越多。指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。</p></li><li><p><strong>ip_hash</strong>; 每个请求按访问ip的hash结果分配, 这样每个访客固定访问一个后端服务器,可以解诀session的问题。</p></li><li><p>fair (第三方); 按后端服务器的响应时间来分配请求，响应时间短的优先分配</p></li></ol><pre class="line-numbers language-java"><code class="language-java">upstream server_pool     server <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">5.21</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">;</span>    server <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">5.22</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">;</span>    fair<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//ip_hash;</span><span class="token comment" spellcheck="true">//weigth;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//weight</span>upstream server_pool     weigth<span class="token punctuation">;</span>    server <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">5.21</span><span class="token operator">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    server <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">5.22</span><span class="token operator">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//ip_hash;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="动静分离实例"><a href="#动静分离实例" class="headerlink" title="动静分离实例"></a>动静分离实例</h4><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210610175500.png" alt="img"></p><h5 id="配置挂单"><a href="#配置挂单" class="headerlink" title="配置挂单"></a>配置挂单</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210610181706.png" alt="image-20210610181706153"></p><h4 id="高可用配置实例"><a href="#高可用配置实例" class="headerlink" title="高可用配置实例"></a>高可用配置实例</h4><h5 id="准备条件"><a href="#准备条件" class="headerlink" title="准备条件"></a>准备条件</h5><p>(1) 需要两台nginx服务器。<br>        (2) 需要keepalived, 检测Nginx是否还在运行的脚本<br>        (3) 需要虚拟ip,提供对外访问的虚拟地址.</p><h5 id="安装keepalived"><a href="#安装keepalived" class="headerlink" title="安装keepalived"></a>安装keepalived</h5><ul><li><p>命令行安装: $ yum install keepalived</p></li><li><p>安装包手动安装</p></li></ul><p>默认安装路径: /etc/keepalived,  </p><p>$ rpm -q -a keepalived    #查看是否已经安装上</p><p>安装之后，在etc里面生成目录keepalived, 有配置文件keepalived.conf</p><h5 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h5><ol><li>修改keepalived的配置文件keepalived.conf</li></ol><pre class="line-numbers language-js"><code class="language-js">global_defs <span class="token punctuation">{</span>    notification_email <span class="token punctuation">{</span>      acassen@firewall<span class="token punctuation">.</span>loc      failover@firewall<span class="token punctuation">.</span>loc      sysadmin@firewall<span class="token punctuation">.</span>loc    <span class="token punctuation">}</span>    notification_email_from Alexandre<span class="token punctuation">.</span>Cassen@firewall<span class="token punctuation">.</span>loc    smtp_ server <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">17.129</span>    smtp_connect_timeout <span class="token number">30</span>    router_id LVS_DEVEL    # LVS_DEVEL<span class="token punctuation">,</span>主机名<span class="token punctuation">,</span>这字段在<span class="token operator">/</span>etc<span class="token operator">/</span>hosts文件中看；通过它访问到主机<span class="token punctuation">}</span>vrrp_script chk_http_ port <span class="token punctuation">{</span>    script <span class="token string">"/usr/local/src/nginx_check.sh"</span>    interval <span class="token number">2</span>   # <span class="token punctuation">(</span>检测脚本执行的间隔<span class="token punctuation">)</span>2s    weight <span class="token number">2</span>  #权重，如果这个脚本检测为真，服务器权重<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">}</span>vrrp_instance VI_1 <span class="token punctuation">{</span>    state BACKUP   # 备份服务器上将MASTER 改为BACKUP    <span class="token keyword">interface</span> <span class="token class-name">ens33</span> <span class="token comment" spellcheck="true">//网卡名称, 通过ifconfig查看当前服务器的网卡</span>    virtual_router_id <span class="token number">51</span> # 主、备机的virtual_router_id必须相同    priority <span class="token number">100</span>   #主、备机取不同的优先级，主机值较大，备份机值较小    advert_int <span class="token number">1</span>    #每隔1s发送一次心跳    authentication <span class="token punctuation">{</span>    # 校验方式， 类型是密码，密码<span class="token number">1111</span>        auth type PASS        auth pass <span class="token number">1111</span>    <span class="token punctuation">}</span>    virtual_ipaddress <span class="token punctuation">{</span> # 虛拟ip        <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">17.50</span> <span class="token comment" spellcheck="true">// 虛拟ip地址</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>在路径/usr/local/src/ 下新建检测脚本 nginx_check.sh</li></ol><pre class="line-numbers language-js"><code class="language-js">#<span class="token operator">!</span> <span class="token operator">/</span>bin<span class="token operator">/</span>bashA<span class="token operator">=</span><span class="token template-string"><span class="token string">`ps -C nginx -no-header | wc - 1`</span></span><span class="token keyword">if</span> <span class="token punctuation">[</span> $A <span class="token operator">-</span>eq <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>then    <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>nginx<span class="token operator">/</span>sbin<span class="token operator">/</span>nginx    sleep <span class="token number">2</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token string">`ps -C nginx --no-header| wc -1`</span></span> <span class="token operator">-</span>eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>then        killall keepalived    fifi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>把两台服务器上nginx和keepalived启动</li></ol><pre class="line-numbers language-yaml"><code class="language-yaml">$ systemctl start keepalived.service        <span class="token comment" spellcheck="true">#keepalived启动</span>$ ps <span class="token punctuation">-</span>ef I grep keepalived        <span class="token comment" spellcheck="true">#查看keepalived是否启动</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Nginx的工作原理"><a href="#Nginx的工作原理" class="headerlink" title="Nginx的工作原理"></a>Nginx的工作原理</h3><p>一个Nginx client,里面包含有一个master进程和1个或者多个worker进程,worker进程数量最好和cpu内核数量保持一致,才能最大发挥cpu性能.当有请求过来时,master进程会通知worker进程去争抢该任务</p><h6 id="master进程职责"><a href="#master进程职责" class="headerlink" title="master进程职责"></a><strong>master进程职责</strong></h6><ul><li>读取并验证配置信息。</li><li>创建，绑定，关闭套接字。</li><li>启动，终止，维护worker进程的个数。</li></ul><h6 id="worker进程职责"><a href="#worker进程职责" class="headerlink" title="worker进程职责"></a>worker进程职责</h6><ul><li>接受，传入并处理来自客户端的连接；</li><li>提供反向代理等功能；</li></ul><h6 id="Nginx支持热部署"><a href="#Nginx支持热部署" class="headerlink" title="Nginx支持热部署"></a>Nginx支持热部署</h6><p>修改配置文件后,如果配置文件有误,reload后，master会提示配置错误，并不会影响请求的处理。如果主配置文件发生改变，那么并不会立刻影响到WORKER进程，而是MASTER等到WORKER进程的连接请求处理完毕后KILL掉这个WORKER进程，然后重新生成一个WORKER进程，这样这个WORKER进程就将以新的配置启动了。也就是说，老的连接用老的配置，新的连接用新的配置。重新加载配置文件不会中断正在处理的请求。</p><h6 id="worker进程如何处理请求"><a href="#worker进程如何处理请求" class="headerlink" title="worker进程如何处理请求"></a>worker进程如何处理请求</h6><p>一个请求可以由一个worker进程处理并只能由这个worker进程完全处理。Nginx在内部其实是维护了一个accept_mutex，其实就是一个锁，确保在某一时刻，一个请求只能被一个worker进程捕获。当一个worker进程在accept这个连接之后，就开始读取请求，解析请求，处理请求，产生数据后，再返回给客户端，最后才断开连接，这样一个完整的请求就是这样的了。Nginx采用了异步非阻塞事件驱动的方式来处理请求的</p><h6 id="异步-非阻塞-事件驱动"><a href="#异步-非阻塞-事件驱动" class="headerlink" title="异步/非阻塞/事件驱动"></a><strong>异步/非阻塞/事件驱动</strong></h6><p>如果发生IO中断，那么你去做你的事情，但是过一段时间来看看IO调用是否结束，这就是非阻塞.为了更高效，Nginx利用了LINUX的EPOLL模型,它提供一种事件驱动机制，它可以监控多个事件是否准备好了，如果准备好了，那么就放入EPOLL队列中。这种机制是异步的。通过这样，WORKER进程只需要循环处理EPOLL队列中的请求，我们只需要在请求间不断切换</p><pre class="line-numbers language-js"><code class="language-js"># 设置worker数量worker<span class="token punctuation">.</span>processes <span class="token number">4</span> # <span class="token function">work绑定cpu</span><span class="token punctuation">(</span>4work绑定4cpu<span class="token punctuation">)</span>worker_cpu_affinity <span class="token number">0001</span> <span class="token number">0010</span> <span class="token number">0100</span> <span class="token number">1000</span># work绑定cpu <span class="token punctuation">(</span>4work绑定8cpu中的<span class="token number">4</span>个<span class="token punctuation">)</span>worker_cpu_affinity <span class="token number">0000001</span> <span class="token number">00000010</span> <span class="token number">00000100</span> <span class="token number">00001000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210611170714.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210611170922.png" alt="img"></p><h5 id="连接数worker-connection"><a href="#连接数worker-connection" class="headerlink" title="连接数worker_ connection"></a><strong>连接数worker_ connection</strong></h5><ol><li>发送请求，占用了woker的几个连接数? </li></ol><p>访问静态资源占用2个(请求与返回), 动态资源占用4个,因为worker还要与tomcat服务器进行连接.</p><ol start="2"><li>nginx有一个master,有四个woker,每个woker支持最大的连接数1024,支持的最大并发数是多少?</li></ol><p>普通的静态访问最大并发数是: worker connections * worker processes /2，<br>而如果是HTTP作为反向代理来说，最大并发数量应该是worker connections * worker processes/4</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代理工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zookeeper简介与应用</title>
      <link href="2021/03/23/zookeeper/"/>
      <url>2021/03/23/zookeeper/</url>
      
        <content type="html"><![CDATA[<h3 id="Zookeeper简介与应用"><a href="#Zookeeper简介与应用" class="headerlink" title="Zookeeper简介与应用"></a>Zookeeper简介与应用</h3><h5 id="什么是zookeeper"><a href="#什么是zookeeper" class="headerlink" title="什么是zookeeper"></a>什么是zookeeper</h5><p>Zookeeper 是一个开源的分布式的，为分布式框架提供协调服务的 Apache 项目。</p><p>Zookeeper 从设计模式角度来理解：是一个基于观察者模式设计的分布式服务管理框架，它负责存储和管理大家都关心的数据，然后接受观察者的注册，一旦这些数据的状态发生变化， Zookeeper就将负责通知已经在 Zookeeper 上注册的那些观察者做出相应的反应。</p><h5 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h5><ul><li>Zookeeper：一个领导者（Leader），多个跟随者（Follower）组成的集群。</li><li>集群中只要有半数以上节点存活，Zookeeper集群就能正常服务。所以Zookeeper适合安装奇数台服务器。</li><li>全局数据一致：每个Server保存一份相同的数据副本，Client无论连接到哪个Server，数据都是一致的。</li><li>更新请求顺序执行，来自同一个Client的更新请求按其发送顺序依次执行。</li><li>数据更新原子性，一次数据更新要么成功，要么失败。</li><li>实时性，在一定时间范围内，Client能读到最新数据。</li></ul><h5 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h5><ul><li>统一命名服务(一个域名映射多个IP)</li><li>统一配置管理(配置信息写入Znode节点)</li><li>统一集群管理(客户端监听ZNode获取实时状态变化)</li><li>服务节点动态上下线(客户端动态获取当前服务器状态)</li><li>软负载均衡(同nigx功能, 动态分配客户请求到不同ip)</li></ul><h3 id="Zookeeper的下载与安装"><a href="#Zookeeper的下载与安装" class="headerlink" title="Zookeeper的下载与安装"></a>Zookeeper的下载与安装</h3><h5 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h5><p><a href="https://zookeeper.apache.org/">官网地址</a></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210708153438.png" alt="image-20210708153437377"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210708153513.png" alt="image-20210708153513783"></p><h6 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h6><p>-bin.tar.gz  是已经编译好的包, 不带bin的需要自己编译. 因此下载时候要选择-bin.tar.gz</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210708153757.png" alt="img"></p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><ul><li>需要java环境, 事先安装好jdk,并配置好环境变量     </li><li>使用xftp6将下载的zookeeper推送到linux系统, 不要直接从win系统拖送过去…拖过去会导致文件不全,安装不成功.==一定要注意不要直接拖文件==</li><li>解压到指定目录</li></ul><pre class="line-numbers language-java"><code class="language-java">tar <span class="token operator">-</span>zxvf apache<span class="token operator">-</span>zookeeper<span class="token operator">-</span><span class="token number">3.5</span><span class="token punctuation">.</span><span class="token number">7</span><span class="token operator">-</span>bin<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz <span class="token operator">-</span>C <span class="token operator">/</span>opt<span class="token operator">/</span>module<span class="token operator">/</span> <span class="token comment" spellcheck="true">//注意, 安装到指定目录,一定要带上-C, 代表change到新目录.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>修改名称(可选)</li></ul><pre class="line-numbers language-java"><code class="language-java"> mv  apache<span class="token operator">-</span>zookeeper<span class="token operator">-</span><span class="token number">3.5</span><span class="token punctuation">.</span><span class="token number">7</span>  zookeeper<span class="token operator">-</span><span class="token number">3.5</span><span class="token punctuation">.</span><span class="token number">7</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改配置</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token number">1</span><span class="token punctuation">.</span> 将<span class="token operator">/</span>opt<span class="token operator">/</span>module<span class="token operator">/</span>zookeeper<span class="token operator">-</span><span class="token number">3.5</span><span class="token punctuation">.</span><span class="token number">7</span><span class="token operator">/</span>conf 这个路径下的 zoo_sample<span class="token punctuation">.</span>cfg 修改为 zoo<span class="token punctuation">.</span>cfg；<span class="token number">2</span><span class="token punctuation">.</span> 打开 zoo<span class="token punctuation">.</span>cfg 文件，修改 dataDir 路径 dataDir<span class="token operator">=</span><span class="token operator">/</span>opt<span class="token operator">/</span>module<span class="token operator">/</span>zookeeper<span class="token operator">-</span><span class="token number">3.5</span><span class="token punctuation">.</span><span class="token number">7</span><span class="token operator">/</span>zkData     <span class="token comment" spellcheck="true">//存放数据的文件夹自定义名字,最好放在zookeeper安装目录下</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>配置环境变量</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token number">1</span><span class="token punctuation">)</span> 打开配置文件<span class="token punctuation">,</span> 命令终端输入指令<span class="token operator">:</span>    vi <span class="token operator">/</span>etc<span class="token operator">/</span>profile<span class="token number">2</span><span class="token punctuation">)</span> 在文件末端输入如下数据<span class="token punctuation">,</span>然后保存并退出export ZOOKEEPER_HOME<span class="token operator">=</span><span class="token operator">/</span>你的安装目录<span class="token operator">/</span>zookeeper<span class="token operator">-</span><span class="token number">3.5</span><span class="token punctuation">.</span><span class="token number">7</span><span class="token operator">/</span>export PATH<span class="token operator">=</span>$ZOOKEEPER_HOME<span class="token operator">/</span>bin<span class="token operator">:</span>$PATHexport PATH<span class="token number">3</span><span class="token punctuation">)</span> 刷新环境变量<span class="token punctuation">,</span> 终端输入如下指令 <span class="token punctuation">[</span>root<span class="token annotation punctuation">@master</span> <span class="token operator">~</span><span class="token punctuation">]</span># source <span class="token operator">/</span>etc<span class="token operator">/</span>profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="启动-关闭服务-终端输入命令"><a href="#启动-关闭服务-终端输入命令" class="headerlink" title="启动/关闭服务,终端输入命令"></a>启动/关闭服务,终端输入命令</h6><pre class="line-numbers language-java"><code class="language-java">zkServer<span class="token punctuation">.</span>sh start   <span class="token comment" spellcheck="true">//启动服务</span>zkServer<span class="token punctuation">.</span>sh status   <span class="token comment" spellcheck="true">//查看状态</span>zkCli<span class="token punctuation">.</span>sh     <span class="token comment" spellcheck="true">//启动客户端</span>jps     <span class="token comment" spellcheck="true">//查看进程是否启动</span>zkServer<span class="token punctuation">.</span>sh stop  <span class="token comment" spellcheck="true">//关闭服务</span>zkServer<span class="token punctuation">.</span>sh restart  <span class="token comment" spellcheck="true">//重启服务</span>quit <span class="token comment" spellcheck="true">//退出</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210708160337.png" alt="image-20210708160337775"></p><h5 id="配置参数解读"><a href="#配置参数解读" class="headerlink" title="配置参数解读"></a>配置参数解读</h5><p>Zookeeper中的配置文件zoo.cfg中参数含义解读如下： </p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210708174503.png" alt="image-20210708174503821"></p><ul><li>tickTime = 2000：单次通信心跳时间，Zookeeper服务器与客户端心跳时间，单位毫秒 </li><li>initLimit = 10：Leader-Fellower初始通信时限, 最多能容忍的心跳次数. </li><li>syncLimit = 5：Leader-Fellower同步通信最多能容忍的心跳次数. 如果超过syncLimit * tickTime，Leader认为Follwer死掉，从服务器列表中删除Follwer。</li><li>dataDir：保存Zookeeper中的数据 , 自定义存放位置</li><li>clientPort = 2181：客户端连接端口，通常不做修改。 </li></ul><h3 id="Zookeeper集群"><a href="#Zookeeper集群" class="headerlink" title="Zookeeper集群"></a>Zookeeper集群</h3><h4 id="集群安装"><a href="#集群安装" class="headerlink" title="集群安装"></a>集群安装</h4><ol><li>在每台服务器上安装好zookeeper, 操作与单台一致.</li><li>zkData 目录下创建一个 myid 的文件 ,在文件中添加与 server 对应的编号（注意：上下不要有空行，左右不要有空格） </li><li>拷贝步骤2中的配置文件到其余服务器的zkData目录下,修改对应的sid值.</li><li> zoo.cfg 配置文件内增加如下配置</li></ol><pre class="line-numbers language-java"><code class="language-java">#######################cluster########################## server<span class="token number">.2</span><span class="token operator">=</span>hadoop102<span class="token operator">:</span><span class="token number">2888</span><span class="token operator">:</span><span class="token number">3888</span> server<span class="token number">.3</span><span class="token operator">=</span>hadoop103<span class="token operator">:</span><span class="token number">2888</span><span class="token operator">:</span><span class="token number">3888</span> server<span class="token number">.4</span><span class="token operator">=</span>hadoop104<span class="token operator">:</span><span class="token number">2888</span><span class="token operator">:</span><span class="token number">3888</span>  <span class="token comment" spellcheck="true">/** *参数解读  server.A=B:C:D。     A: serviceId(sid),与myid中的数值一致     B: 服务器主机名     C: Follower 与集群中的 Leader 服务器交换信息的端口     D: Leader挂掉后,用来执行重新选举时服务器相互通信的端口 * */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>同步 zoo.cfg 配置文件 </li></ol><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//终端执行命令</span>xsync zoo<span class="token punctuation">.</span>cfg <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="选举机制"><a href="#选举机制" class="headerlink" title="选举机制"></a>选举机制</h4><h5 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h5><h6 id="选举原则"><a href="#选举原则" class="headerlink" title="选举原则"></a>选举原则</h6><p>一个集群里面只有一个Leader,其余全部为Follower,  leader通过选举产生,zookeeper 默认的算法是 FastLeaderElection，采用投票数大于半数则胜出<br>的逻辑。</p><h6 id="选举状态"><a href="#选举状态" class="headerlink" title="选举状态"></a>选举状态</h6><ul><li>LOOKING：寻找leader状态，该状态下，服务器认为当前集群没有leader，会发起leader选举。在选举过程中，所有服务器的状态都是LOOKING。</li><li>FOLLOWING：跟随者状态，该状态下，当前服务器是follower，并且知道leader是谁。此时选举已经结束。</li><li>LEADING：领导者状态，该状态下，当前服务器是leader，会与follower维持心跳检测。此时选举已经结束。</li><li>OBSERVING：观察者状态，该状态下的服务器是observer，不参与选举。目的是为了降低多台服务器进行选举的复杂度,同时又能对外提供更庞大的服务集群.</li></ul><h6 id="选票数据结构"><a href="#选票数据结构" class="headerlink" title="选票数据结构"></a>选票数据结构</h6><p>每个服务器在进行leader选举时，都会发送以下几个关键属性信息：</p><ul><li><p>logicalclock：投票轮次，自增的，volatile的，初始值为1，也就是第一轮选举。</p></li><li><p>state：当前服务器的状态。</p></li><li><p>self_id：当前服务器的myid。</p></li><li><p>self_zxid：当前服务器的最新的zxid,也是事务编号,它是一个8字节的整形数字,分为2部分,前32位用来记录epoch,后32位用于计数.</p><ul><li>epoch, 纪元朝代的意思,每选举一次会增1</li><li>计数器,记做DataId吧, 数据每写入一次+1,数据越大,代表服务器上的数据越新</li></ul></li><li><p>vote_id：当前服务器推举的leader服务器的myid。</p></li><li><p>vote_zxid：当前服务器推举的leader服务器的最新的zxid。</p></li></ul><h6 id="选举轮次"><a href="#选举轮次" class="headerlink" title="选举轮次"></a>选举轮次</h6><p> Zookeeper选举机制有一个前提条件：在一个轮次的选举中，所有选票必须属于该轮次。在选举的某一时刻，确实可能存在某张选票不属于该轮次的情况。所以Zookeeper在选举过程中，始终会先核对选票的轮次。</p><h6 id="选举权重"><a href="#选举权重" class="headerlink" title="选举权重"></a>选举权重</h6><p>epoch &gt; dataId &gt; myId,  最后获取票数(大于一半)最多的单选leader</p><h5 id="选举"><a href="#选举" class="headerlink" title="选举"></a>选举</h5><h6 id="初始化选举"><a href="#初始化选举" class="headerlink" title="初始化选举"></a>初始化选举</h6><p>假设有5台服务器参与竞选,myid编号分别为1-5, 并依次启动,情况如下:</p><ul><li>服务器1启动, epoch,dataid均为0, myid=1,由于没有其它服务器,投票给自己,此时状态为looking</li><li>服务器2启动, 也是投票给自己, epoch,dataid均为0, myid=2, 同时通过广播与其它服务器(此时只有1)交换结果,经过对比,服务器2胜出,服务器1的票投给2 ,由于得票数不到一半,还是保持looking状态</li><li>服务器3启动,投票给自己,通过广播交换结果,发现服务器3的myid最大,服务器1,2投票给3,此时3得票3,超过一半.成为leader,服务器1,2成为follower.</li><li>服务器4启动,投票给自己,然后广播交换数据,发现已经有leader了,然后自动变为follower.</li><li>服务器5启动,投票给自己,广播交换数据后,发现已经有leader,然后自动变为follower</li></ul><h6 id="非初始化选举"><a href="#非初始化选举" class="headerlink" title="非初始化选举"></a>非初始化选举</h6><p>情形一:   集群中某一个follewer节点掉线,重新上线后会发起选举,广播交换数据,发现已经存在leader,则自动变为follower,并从leader那更新同步数据</p><p>情形二:  leader宕机, 集群会进行崩溃恢复。ZAB 的崩溃恢复分成三个阶段：</p><p><strong>Leader election</strong>:  比较各个子节点的epoch值, dataId, myId,根据值大小选举出准leader, 并改变各节点的状态值.</p><p><strong>Discovery:</strong> 在从节点中发现最新的 ZXID 和事务日志。了防止某些意外情况，比如因网络原因在上一阶段产生多个 Leader 的情况。所以这一阶段，Leader 集思广益，接收所有 Follower 发来各自的最新 epoch 值。Leader 从中选出最大的 epoch，基于此值加 1，生成新的 epoch 分发给各个 Follower。各个 Follower 收到全新的 epoch 后，返回 ACK 给 Leader，带上各自最大的 ZXID 和历史事务日志。Leader 选出最大的 ZXID，并更新自身历史日志。</p><p><em><strong>Synchronization</strong></em></p><p>同步阶段，把 Leader 刚才收集得到的最新历史事务日志，同步给集群中所有的 Follower。只有当半数 Follower 同步成功，这个准 Leader 才能成为正式的Leader。</p><h5 id="数据写入"><a href="#数据写入" class="headerlink" title="数据写入"></a>数据写入</h5><p>ZAB 的数据写入涉及到 Broadcast 阶段，简单来说，就是 Zookeeper 常规情况下更新数据的时候，由 Leader 广播到所有的 Follower。其过程如下：</p><ul><li>客户端发出写入数据请求给任意 Follower。</li><li>Follower 把写入数据请求转发给 Leader。</li><li>Leader 采用二阶段提交方式，先发送 Propose 广播给 Follower。</li><li>Follower 接到 Propose 消息，写入日志成功后，返回 ACK 消息给 Leader。</li><li>Leader 接到半数以上ACK消息，返回成功给客户端，并且广播 Commit 请求给 Follower</li></ul><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://www.bilibili.com/video/BV1to4y1C7gw">尚硅谷Zookeeper 3.5.7版本教程</a></p><p><a href="https://zhuanlan.zhihu.com/p/112710111">Zookeeper简介</a></p><p><a href="https://baijiahao.baidu.com/s?id=1693897375037977921&amp;wfr=spider&amp;for=pc">图解 ZooKeeper的选举机制</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发教程 </category>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yaml语法详解</title>
      <link href="2021/03/18/yaml-yu-fa-jie-shao/"/>
      <url>2021/03/18/yaml-yu-fa-jie-shao/</url>
      
        <content type="html"><![CDATA[<p><a href="https://yaml.org/spec/">官网地址</a></p><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>官方给出的定义: YAML 是 “YAML Ain’t a Markup Language”（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：”Yet Another Markup Language”（仍是一种标记语言）。</p><p>我的理解是, yaml同md,xml,一样,都属于一种标记语言,都有自己的语法规则. 其文件的后缀为.yml/ .yaml</p><h4 id="为什么要学习使用yaml"><a href="#为什么要学习使用yaml" class="headerlink" title="为什么要学习使用yaml?"></a>为什么要学习使用yaml?</h4><p>相比于xml,它更加简洁,而且功能更强大,特别适合用来表达或编辑数据结构、各种配置文件、倾印调试内容、文件大纲, 并且也越来也流行.</p><h4 id="基本语法规则"><a href="#基本语法规则" class="headerlink" title="基本语法规则"></a>基本语法规则</h4><ul><li>大小写敏感</li><li>冒号后面必须要有一个空格</li><li>使用缩进表示层级关系</li><li>缩进不允许使用tab，只允许空格</li><li>缩进的空格数不重要，只要相同层级的元素左对齐即可</li><li>‘#’表示注释</li><li>${} 占位符</li></ul><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p>YAML 支持以下几种数据类型：</p><ul><li>对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）</li><li>数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）</li><li>纯量（scalars）：单个的、不可再分的值</li></ul><h4 id="YAML对象"><a href="#YAML对象" class="headerlink" title="YAML对象"></a>YAML对象</h4><ol><li>使用冒号结构表示 <strong>key: value</strong>，冒号后面要加一个空格。</li><li>使用 **key:{key1: value1, key2: value2, …}**。</li><li>使用缩进表示层级关系；</li></ol><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">key</span><span class="token punctuation">:</span>     <span class="token key atrule">child-key</span><span class="token punctuation">:</span> value1    <span class="token key atrule">child-key2</span><span class="token punctuation">:</span> value2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="YAML数组"><a href="#YAML数组" class="headerlink" title="YAML数组"></a>YAML数组</h4><p>以 <strong>-</strong> 开头的行表示构成一个数组：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">-</span> A<span class="token punctuation">-</span> B<span class="token punctuation">-</span> C<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>YAML 支持多维数组，可以使用行内表示：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>value1<span class="token punctuation">,</span> value2<span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。</p><pre><code>- - A - B - C</code></pre><p>示例:</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">companies</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span>        <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">1</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span> company1        <span class="token key atrule">price</span><span class="token punctuation">:</span> 200W    <span class="token punctuation">-</span>        <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">2</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span> company2        <span class="token key atrule">price</span><span class="token punctuation">:</span> 500W         <span class="token comment" spellcheck="true"># 等价于       </span><span class="token key atrule">companies</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token key atrule">name</span><span class="token punctuation">:</span> company1<span class="token punctuation">,</span><span class="token key atrule">price</span><span class="token punctuation">:</span> 200W<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token key atrule">name</span><span class="token punctuation">:</span> company2<span class="token punctuation">,</span><span class="token key atrule">price</span><span class="token punctuation">:</span> 500W<span class="token punctuation">}</span><span class="token punctuation">]</span>        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="纯量"><a href="#纯量" class="headerlink" title="纯量"></a>纯量</h4><p>纯量是最基本的，不可再分的值，类似于java中的基本数据类型. 包括：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">boolean</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span> <span class="token boolean important">TRUE  </span><span class="token comment" spellcheck="true">#true,True都可以</span>    <span class="token punctuation">-</span> <span class="token boolean important">FALSE  </span><span class="token comment" spellcheck="true">#false，False都可以</span><span class="token key atrule">float</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token number">3.14</span>    <span class="token punctuation">-</span> <span class="token number">6.8523015e+5  </span><span class="token comment" spellcheck="true">#可以使用科学计数法</span><span class="token key atrule">int</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token number">123</span>    <span class="token punctuation">-</span> 0b1010_0111_0100_1010_1110    <span class="token comment" spellcheck="true">#二进制表示</span><span class="token key atrule">null</span><span class="token punctuation">:</span>    <span class="token key atrule">nodeName</span><span class="token punctuation">:</span> <span class="token string">'node'</span>    <span class="token key atrule">parent</span><span class="token punctuation">:</span> <span class="token null important">~  </span><span class="token comment" spellcheck="true">#使用~表示null</span><span class="token key atrule">string</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> 哈哈    <span class="token punctuation">-</span> <span class="token string">'Hello world'</span>  <span class="token comment" spellcheck="true">#可以使用双引号或者单引号包裹特殊字符</span>    <span class="token punctuation">-</span> newline      newline2    <span class="token comment" spellcheck="true">#字符串可以拆成多行，每一行会被转化成一个空格</span><span class="token key atrule">date</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token datetime number">2018-02-17</span>    <span class="token comment" spellcheck="true">#日期必须使用ISO 8601格式，即yyyy-MM-dd</span><span class="token key atrule">datetime</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span>  <span class="token datetime number">2018-02-17T15:02:31+08:00</span>    <span class="token comment" spellcheck="true">#时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><p><strong>&amp;</strong> 用来建立锚点（defaults），**&lt;&lt;** 表示合并到当前数据，***** 用来引用锚点。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">defaults</span><span class="token punctuation">:</span> <span class="token important">&amp;defaults</span>  <span class="token key atrule">adapter</span><span class="token punctuation">:</span>  postgres  <span class="token key atrule">host</span><span class="token punctuation">:</span>     localhost<span class="token key atrule">development</span><span class="token punctuation">:</span>  <span class="token key atrule">database</span><span class="token punctuation">:</span> myapp_development  <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*defaults</span><span class="token key atrule">test</span><span class="token punctuation">:</span>  <span class="token key atrule">database</span><span class="token punctuation">:</span> myapp_test  <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*defaults</span>    <span class="token comment" spellcheck="true">#等价于</span>  <span class="token key atrule">defaults</span><span class="token punctuation">:</span>  <span class="token key atrule">adapter</span><span class="token punctuation">:</span>  postgres  <span class="token key atrule">host</span><span class="token punctuation">:</span>     localhost<span class="token key atrule">development</span><span class="token punctuation">:</span>  <span class="token key atrule">database</span><span class="token punctuation">:</span> myapp_development  <span class="token key atrule">adapter</span><span class="token punctuation">:</span>  postgres  <span class="token key atrule">host</span><span class="token punctuation">:</span>     localhost<span class="token key atrule">test</span><span class="token punctuation">:</span>  <span class="token key atrule">database</span><span class="token punctuation">:</span> myapp_test  <span class="token key atrule">adapter</span><span class="token punctuation">:</span>  postgres  <span class="token key atrule">host</span><span class="token punctuation">:</span>     localhost<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用网站资源</title>
      <link href="2021/02/18/wang-zhan-zi-yuan/"/>
      <url>2021/02/18/wang-zhan-zi-yuan/</url>
      
        <content type="html"><![CDATA[<h2 id="常用网站资源"><a href="#常用网站资源" class="headerlink" title="常用网站资源"></a>常用网站资源</h2><h4 id="镜像类"><a href="#镜像类" class="headerlink" title="镜像类"></a>镜像类</h4><p><a href="https://mirrors.163.com/">网易开源镜像</a></p><p><a href="https://mirrors.aliyun.com/">阿里云开源镜像</a></p><p><a href="https://mirrors.huaweicloud.com/home">华为云开源镜像</a></p><p><a href="https://npm.taobao.org/mirrors/">npm淘宝镜像</a></p><p><a href="https://mirrors.tencent.com/">腾讯软件源</a></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学开源软件镜像站</a></p><p><a href="http://mirrors.bit.edu.cn/web/">北京理工大学开源软件镜像服务</a></p><p><a href="https://mirrors.ustc.edu.cn/">中国科学技术大学开源镜像站</a></p><p><a href="https://mirrors.zju.edu.cn/">浙江大学开源镜像站</a></p><p><a href="http://mirror.nju.edu.cn/">南京大学开源镜像站</a></p><p><a href="https://mirrors.njupt.edu.cn/">南京邮电大学开源软件镜像站</a></p><p><a href="https://mirrors.sjtug.sjtu.edu.cn/">上海交通大学镜像站</a></p><p><a href="http://mirror.hust.edu.cn/">华中科技大学开源软件镜像站</a></p><p><a href="http://mirrors.hit.edu.cn/">哈尔滨工业大学开源镜像站</a></p><p><a href="http://mirror.dlut.edu.cn/">大连理工大学开源软件镜像站</a></p><p><a href="http://mirrors.cqu.edu.cn/">重庆大学开源软件镜像站</a></p><h4 id="免费视频学习网站"><a href="#免费视频学习网站" class="headerlink" title="免费视频学习网站"></a>免费视频学习网站</h4><p><a href="https://www.bilibili.com/">B站</a></p><p><a href="https://www.icourse163.org/">中国大学mooc</a> 网易与高教社携手推出的在线教育平台</p><p><a href="https://www.icourses.cn/home/">爱课程</a> 高教社主办</p><p><a href="https://visuwords.com/">Visuwords</a>（有趣的专注英语学习网站）</p><p><a href="http://www.howzhi.com/">好知</a>（各种兴趣零基础学习网站、摄影、吉他音乐、设计等等）</p><p><a href="https://www.wdl.org/zh/">世界数字图书馆</a>（世界历史、手抄本、地图等等）</p><p><a href="https://curious.com/">Curious</a>（生活、爱好的培养，可选择每天投入多久时间）</p><p><a href="http://www.dxzy163.com/">大学资源网</a>（从小学到大学的课程、外语课程、电脑网络）</p><p><a href="http://www.chinesemooc.org/">华文慕课</a>（北京大学联合阿里巴巴的高质量网站）</p><h4 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h4><p><a href="https://npm.taobao.org/mirrors">淘宝镜像</a> : 用于下载一些国外的软件,比如git等</p><h4 id="书籍资源"><a href="#书籍资源" class="headerlink" title="书籍资源"></a>书籍资源</h4><p><a href="http://www.java1234.com/a/javabook/">java知识分享网</a>, 除了java也还分享别的书籍.</p>]]></content>
      
      
      <categories>
          
          <category> 资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot笔记</title>
      <link href="2021/02/13/springboot2-bi-ji/"/>
      <url>2021/02/13/springboot2-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>注:   本文档基于SpringBoot V2.4.5</p><h2 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h2><h3 id="SpringBoot-基础入门"><a href="#SpringBoot-基础入门" class="headerlink" title="SpringBoot 基础入门"></a>SpringBoot 基础入门</h3><h4 id="什么是SpringBoot"><a href="#什么是SpringBoot" class="headerlink" title="什么是SpringBoot"></a>什么是SpringBoot</h4><p>能快速集成Spring各个框架的应用框架.用于简化Spring技术栈的脚手架.</p><p>优点: 快速创建Spring应用,自动配置第三方依赖,提供生产级别的监控等</p><p>缺点: 版本更新快,内部原理复杂,封装太深,不容易精通</p><h4 id="如何使用SpringBoot"><a href="#如何使用SpringBoot" class="headerlink" title="如何使用SpringBoot?"></a>如何使用SpringBoot?</h4><h5 id="系统版本要求"><a href="#系统版本要求" class="headerlink" title="系统版本要求"></a>系统版本要求</h5><p>根据SpringBoot版本参照<a href="https://spring.io/projects/spring-boot#learn">官方文档</a></p><h5 id="maven镜像配置"><a href="#maven镜像配置" class="headerlink" title="maven镜像配置"></a>maven镜像配置</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrors</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>nexus-aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Nexus aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://maven.aliyun.com/nexus/content/groups/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrors</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>jdk-1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdk</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdk</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.compilerVersion</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.compilerVersion</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h5><ul><li><p>使用idea创建maven工程</p></li><li><p>pom.xml添加SpringBoot依赖,web依赖,测试模块</p></li><li><p>编写代码,主程序类</p><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--            测试模块，包括JUnit、Hamcrest、Mockito--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Springboot1Application</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>Springboot1Application<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="创建项目方法2"><a href="#创建项目方法2" class="headerlink" title="创建项目方法2"></a>创建项目方法2</h5><p>直接使用idea,选择Spring initialzr 创建….会自动生成可启动的SpringBoot的Hello应用.</p><h5 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h5><p>直接在右侧找到mvn脚本,双击package即可..,添加maven插件,默认是打jar包,如果需打其余类型包,可以配置方式指定包类型.</p><pre class="line-numbers language-xml"><code class="language-xml">   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 编译插件, 允许程序以jar包执行--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://i.loli.net/2021/05/14/HnFdMViBvDCexpc.png" alt="image-20210514112216731"></p><p>打包</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://i.loli.net/2021/05/14/IxekGCzZQ98JRsd.png" alt="image-20210514112007349"></p><h5 id="打包踩坑"><a href="#打包踩坑" class="headerlink" title="打包踩坑"></a>打包踩坑</h5><p>使用SpringBoot 2.4.x版本都会报错</p><pre class="line-numbers language-xml"><code class="language-xml">Maven clean install: Failed to execute goal org.apache.maven.plugins:maven-resources-plugin:3.2.0:resources<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参考问题解决:</p><p><a href="https://stackoverflow.com/questions/65910112/maven-clean-install-failed-to-execute-goal-org-apache-maven-pluginsmaven-resou">https://stackoverflow.com/questions/65910112/maven-clean-install-failed-to-execute-goal-org-apache-maven-pluginsmaven-resou</a></p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--降级该插件版本即可--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-resources-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看详细问题日志命令</p><pre><code>mvn clean install -X</code></pre><h5 id="修改指定依赖的版本号"><a href="#修改指定依赖的版本号" class="headerlink" title="修改指定依赖的版本号"></a>修改指定依赖的版本号</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//去pom里面的SpringBoot的父工程的父工程里面查看该依赖的引用,然后修改成自己想要的版本,示例:</span><span class="token comment" spellcheck="true">//1、查看spring-boot-dependencies里面规定当前依赖的版本 用的 key。</span><span class="token comment" spellcheck="true">//2、在当前项目pom.xml里面重写配置</span>    <span class="token operator">&lt;</span>properties<span class="token operator">></span>        <span class="token operator">&lt;</span>mysql<span class="token punctuation">.</span>version<span class="token operator">></span><span class="token number">5.1</span><span class="token punctuation">.</span><span class="token number">43</span><span class="token operator">&lt;</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>properties<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="容器讲解"><a href="#容器讲解" class="headerlink" title="容器讲解"></a>容器讲解</h5><h6 id="组件注册"><a href="#组件注册" class="headerlink" title="组件注册"></a>组件注册</h6><p><strong>spring mvc 组件注册方案</strong></p><p>新建beans.xml ,然后去注册各个bean.</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>person01<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.springboot1.bean.Person<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>张三<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cat<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.springboot1.bean.Pet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tom<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>SpringBoot中的组件注册</strong></p><p>通过注解的方式,表明这是一个组件</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 告诉SpringBoot这是一个配置文件,配置类也是组件. * 默认容器中是单例的, 获得的组件是Cglib单例代理类, 每次调用都会去容器里面寻找是否已经存在, 这种比较耗时,叫Full模式 * 当proxyBeanMethods = false时,获得的是原类,而且不是单例的,每获取一次,都会重新生成一个实例,运行较快, 叫Light模式 * 应用场景: 组件依赖, 保持容器中的对象是唯一的. */</span><span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span><span class="token comment" spellcheck="true">//添加组件bean, 方法名=id=组件名, 返回类型=组件类型,返回值=容器中保存的实例</span>    <span class="token keyword">public</span> Person <span class="token function">person1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"18"</span><span class="token punctuation">,</span> <span class="token function">getPet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">"tom"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//自定义组件名,此时方法名无效,自定义名=id=组件名</span>    <span class="token keyword">public</span> Pet <span class="token function">getPet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Pet</span><span class="token punctuation">(</span><span class="token string">"tomcat"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>获取组件并比较</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Springboot1Application</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取返回的IOC容器</span>        ConfigurableApplicationContext run <span class="token operator">=</span> SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>Springboot1Application<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> names <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">getBeanDefinitionNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>String name <span class="token operator">:</span> names<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        MyConfig myConfig <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>MyConfig<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//com.example.springboot1.config.MyConfig$$EnhancerBySpringCGLIB$$9805ef3@3e6f3bae</span>        <span class="token comment" spellcheck="true">//获得的是CGLib代理类,容器中单例存在</span>        Pet pet <span class="token operator">=</span> myConfig<span class="token punctuation">.</span><span class="token function">getPet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Pet tom <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"tom"</span><span class="token punctuation">,</span> Pet<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"pet==tom : "</span> <span class="token operator">+</span> <span class="token punctuation">(</span>pet <span class="token operator">==</span> tom<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>条件注入组件</strong><br>@Conditional(), 根注解,有很多子类, 根据条件来决定组件是否来注册.</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://i.loli.net/2021/05/14/RECs6DcIj3Ygv2w.png" alt="image-20210514173228479"></p><p><strong>资源注入组件</strong>@ImportResource ,将以前xml注册的bean,以一种中间过渡的方式,注册进容器.</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//放置在myConfig类上</span><span class="token annotation punctuation">@ImportResource</span><span class="token punctuation">(</span><span class="token string">"classpath:beans.xml"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>属性注入</strong></p><pre class="line-numbers language-xml"><code class="language-xml">//配置文件 application.propertiescar.brand=比亚迪car.price=100000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>1、@ConfigurationProperties + conponent +bean</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 只有在容器中的组件，才会拥有SpringBoot提供的强大功能 */</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"mycar"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer price<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span>Integer price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Car{"</span> <span class="token operator">+</span>                <span class="token string">"brand='"</span> <span class="token operator">+</span> brand <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", price="</span> <span class="token operator">+</span> price <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>2、@EnableConfigurationProperties + @ConfigurationProperties</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//适用于没被标注@component的第三方对象</span><span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span>Car<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConfig</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"car"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> String name<span class="token punctuation">;</span>    <span class="token keyword">public</span> String brand<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//配置文件 application.properties</span>car<span class="token punctuation">.</span>brand<span class="token operator">=</span>比亚迪car<span class="token punctuation">.</span>price<span class="token operator">=</span><span class="token number">100000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="SpringBoot的底层原理"><a href="#SpringBoot的底层原理" class="headerlink" title="SpringBoot的底层原理"></a>SpringBoot的底层原理</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token comment" spellcheck="true">//其实是三个注解的综合</span><span class="token annotation punctuation">@SpringBootConfiguration</span><span class="token annotation punctuation">@EnableAutoConfiguration</span><span class="token annotation punctuation">@ComponentScan</span><span class="token comment" spellcheck="true">//总的来说,就是标注当前类也是一个配置类,然后指定包规则,批量导入一些组件(SpringBoot框架+用户自定义),同时扫描指定包下的组件.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>@SpringBootConfiguration</p><blockquote><p>就是@Configuration,其底层是@Component,代表该类是一个配置类.</p></blockquote><p>@EnableAutoConfiguration</p><blockquote><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//自动配置包,并指定默认的包规则</span><span class="token comment" spellcheck="true">//利用Registrar给容器中导入一系列组件</span><span class="token comment" spellcheck="true">//将指定的一个包下的所有组件导入进来 MainApplication 所在包下。</span><span class="token annotation punctuation">@AutoConfigurationPackage</span><span class="token comment" spellcheck="true">//1. 利用getAutoConfigurationEntry(annotationMetadata);给容器中批量导入一些组件</span><span class="token comment" spellcheck="true">//2、调用List&lt;String> configurations = getCandidateConfigurations(annotationMetadata, attributes)获取到所有需要导入到容器中的配置类</span><span class="token comment" spellcheck="true">//3、利用工厂加载 Map&lt;String, List&lt;String>> loadSpringFactories(@Nullable ClassLoader classLoader)；得到所有的组件</span><span class="token comment" spellcheck="true">//4、从META-INF/spring.factories位置来加载一个文件。默认扫描我们当前系统里面所有META-INF/spring.factories位置的文件 spring-boot-autoconfigure-2.3.4.RELEASE.jar包里面也有META-INF/spring.factories</span><span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token punctuation">{</span>AutoConfigurationImportSelector<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>@ComponentScan</p><blockquote><p>扫描指定的包</p></blockquote><p><strong>xxxxxAutoConfiguration —&gt; 组件  —&gt;</strong> <strong>xxxxProperties里面拿值  —-&gt; application.properties自定义</strong></p><h4 id="最佳实战"><a href="#最佳实战" class="headerlink" title="最佳实战"></a>最佳实战</h4><ul><li><p>引入场景依赖, 参考官方文档看看支持哪些依赖<a href="https://docs.spring.io/spring-boot/docs/current/reference/html/using-spring-boot.html#using-boot-starter">https://docs.spring.io/spring-boot/docs/current/reference/html/using-spring-boot.html#using-boot-starter</a></p></li><li><p>查看自动配置了哪些（选做）</p><ul><li>自己分析，引入场景对应的自动配置一般都生效了</li><li>配置文件中debug=true开启自动配置报告。Negative（不生效）\Positive（生效）</li></ul></li><li><p>修改配置</p><ul><li>参照文档修改配置项<a href="https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#common-application-properties">https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#common-application-properties</a></li><li>自己分析。xxxxProperties绑定了配置文件的哪些。</li><li>自定义加入或者替换组件  @Bean、@Component。。。</li><li>自定义器  <strong>XXXXXCustomizer</strong>；</li></ul></li></ul><h5 id="开发小技巧"><a href="#开发小技巧" class="headerlink" title="开发小技巧"></a>开发小技巧</h5><h6 id="引入Lombok-简化javaBean"><a href="#引入Lombok-简化javaBean" class="headerlink" title="引入Lombok,简化javaBean"></a>引入Lombok,简化javaBean</h6><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- springBoot已经集成了Lombok,引入依赖即可--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--第二步,安装对应插件--></span>idea中搜索安装lombok插件<span class="token comment" spellcheck="true">&lt;!--第三步,使用--></span>常用的注解@data  set/get方法@NoArgsConstructor 无参构造@AllArgsConstructor 全参构造@ToString   toString方法@EqualsAndHashCode  hash方法@Slf4j   注入日志如果想用部分有参构造,则需手动处理<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="热更新"><a href="#热更新" class="headerlink" title="热更新"></a>热更新</h6><pre class="line-numbers language-xml"><code class="language-xml">     <span class="token comment" spellcheck="true">&lt;!--引入热重启后,任何修改,不用重启项目,只需要build即可,其实本质上也是重启项目,真正的热更新是JRebel,需要付费--></span>    <span class="token comment" spellcheck="true">&lt;!--第一步:  引入依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--第二步:  build project--></span>            Ctrl+F9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="SpringBoot核心功能"><a href="#SpringBoot核心功能" class="headerlink" title="SpringBoot核心功能"></a>SpringBoot核心功能</h3><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><ul><li>properties </li><li> yaml  推荐使用,参考对应的yaml文档介绍,此处略</li></ul><h6 id="增加yaml的提示功能"><a href="#增加yaml的提示功能" class="headerlink" title="增加yaml的提示功能"></a>增加yaml的提示功能</h6><pre class="line-numbers language-xml"><code class="language-xml">  <span class="token comment" spellcheck="true">&lt;!--参考官方文档附录,添加依赖,然后打包时候排除该依赖,因为这个只是开发过程中方便开发者使用的--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-configuration-processor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-configuration-processor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="SpringBoot-Web开发"><a href="#SpringBoot-Web开发" class="headerlink" title="SpringBoot Web开发"></a>SpringBoot Web开发</h4><h5 id="静态资源的访问"><a href="#静态资源的访问" class="headerlink" title="静态资源的访问"></a>静态资源的访问</h5><p><strong>存放默认路径</strong>: resources下的</p><ul><li>/static</li><li>/public</li><li>/resources</li><li>/META-INF/resources</li></ul><p><strong>访问方式:</strong>  项目根路径/+资源名</p><p><strong>原理:</strong>  SpringBoot对其做了静态映射/**, 当请求静态资源文件时,会先去让controller处理,如果不能处理,则交给静态资源处理器,如果还是不能处理,则相应404页面. </p><p>面临问题:  由于开发中的权限控制,很多接口都需要登录才可以访问,一旦添加拦截器会默认把图片访问权限也拦截掉,对此的处理方法主要用2种:</p><ol><li>修改拦截器规则,过滤掉指定后缀的资源文件;</li><li>自定义静态资源的路径,给添加自定义前缀</li></ol><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">mvc</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#添加res前缀, 访问时路径必须添加res</span>    <span class="token key atrule">static-path-pattern</span><span class="token punctuation">:</span> /res/**<span class="token comment" spellcheck="true">#根据官方文档,自定义存放静态资源的路径,是一个数组,可以存放多个路径,资源必须放置在指定目录下, 以下3种方式均可以</span>  <span class="token key atrule">resources</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#  static-locations: [classpath:/haha/,classpath:/bb/]</span>    <span class="token key atrule">static-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>/haha/<span class="token punctuation">,</span>classpath<span class="token punctuation">:</span>/bb/ <span class="token comment" spellcheck="true">#    static-locations:</span> <span class="token comment" spellcheck="true">#       - classpath:/haha/</span> <span class="token comment" spellcheck="true">#       - classpath:/bb/</span> <span class="token comment" spellcheck="true">#根据以上配置,如果我们要访问/haha下的a.jpg,其完整路径是: 项目根路径/res/a.jpg</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="webjar-支持"><a href="#webjar-支持" class="headerlink" title="webjar 支持"></a>webjar 支持</h5><p>自动映射 /<a href="http://localhost:8080/webjars/jquery/3.5.1/jquery.js">webjars</a>/**  </p><p><a href="https://www.webjars.org/">https://www.webjars.org/</a></p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--示例: 添加jQuery的依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.webjars<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jquery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--访问地址：http://localhost:8080/webjars/jquery/3.5.1/jquery.js   后面地址要按照依赖里面的包路径--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="欢迎页-主页"><a href="#欢迎页-主页" class="headerlink" title="欢迎页/主页"></a>欢迎页/主页</h5><p>支持2种配置方式</p><ul><li><p>静态资源路径下放置index.html, 但是如果配置自定义的静态资源访问前缀,会导致index.html不能默认访问</p></li><li><p>controller能处理/index</p></li></ul><h5 id="自定义Favicon"><a href="#自定义Favicon" class="headerlink" title="自定义Favicon"></a>自定义Favicon</h5><p>将favicon.ico 放在静态资源目录下即可。同样的,如果自定义静态资源前缀会导致访问失效.</p><h5 id="静态资源配置原理"><a href="#静态资源配置原理" class="headerlink" title="静态资源配置原理"></a>静态资源配置原理</h5><ul><li>SpringBoot启动默认加载  xxxAutoConfiguration 类（自动配置类）</li><li>SpringMVC功能的自动配置类 WebMvcAutoConfiguration，生效</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ConditionalOnWebApplication</span><span class="token punctuation">(</span>type <span class="token operator">=</span> Type<span class="token punctuation">.</span>SERVLET<span class="token punctuation">)</span><span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span> Servlet<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> DispatcherServlet<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> WebMvcConfigurer<span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span>WebMvcConfigurationSupport<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@AutoConfigureOrder</span><span class="token punctuation">(</span>Ordered<span class="token punctuation">.</span>HIGHEST_PRECEDENCE <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token annotation punctuation">@AutoConfigureAfter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> DispatcherServletAutoConfiguration<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> TaskExecutionAutoConfiguration<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>        ValidationAutoConfiguration<span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebMvcAutoConfiguration</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//内置静态类xxxAdapter绑定了资源</span>    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"deprecation"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span>EnableWebMvcConfiguration<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token punctuation">{</span> WebMvcProperties<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//绑定了spring.mvc配置项</span>            org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>ResourceProperties<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//绑定了spring.resources配置项</span>                                    WebProperties<span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//绑定了spring.web配置项</span>    <span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">WebMvcAutoConfigurationAdapter</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token comment" spellcheck="true">//省略部分方法</span>                    <span class="token comment" spellcheck="true">//有参构造器,所有参数的值都会从容器中确定</span>            <span class="token keyword">public</span> <span class="token function">WebMvcAutoConfigurationAdapter</span><span class="token punctuation">(</span>WebProperties webProperties<span class="token punctuation">,</span> WebMvcProperties mvcProperties<span class="token punctuation">,</span>                ListableBeanFactory beanFactory<span class="token punctuation">,</span> ObjectProvider<span class="token operator">&lt;</span>HttpMessageConverters<span class="token operator">></span> messageConvertersProvider<span class="token punctuation">,</span>                ObjectProvider<span class="token operator">&lt;</span>ResourceHandlerRegistrationCustomizer<span class="token operator">></span> resourceHandlerRegistrationCustomizerProvider<span class="token punctuation">,</span>                ObjectProvider<span class="token operator">&lt;</span>DispatcherServletPath<span class="token operator">></span> dispatcherServletPath<span class="token punctuation">,</span>                ObjectProvider<span class="token operator">&lt;</span>ServletRegistrationBean<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">>></span> servletRegistrations<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>mvcProperties <span class="token operator">=</span> mvcProperties<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory <span class="token operator">=</span> beanFactory<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>messageConvertersProvider <span class="token operator">=</span> messageConvertersProvider<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>resourceHandlerRegistrationCustomizer <span class="token operator">=</span> resourceHandlerRegistrationCustomizerProvider<span class="token punctuation">.</span><span class="token function">getIfAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>dispatcherServletPath <span class="token operator">=</span> dispatcherServletPath<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>servletRegistrations <span class="token operator">=</span> servletRegistrations<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>mvcProperties<span class="token punctuation">.</span><span class="token function">checkConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//添加资源处理规则</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">addResourceHandlers</span><span class="token punctuation">(</span>ResourceHandlerRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">addResourceHandlers</span><span class="token punctuation">(</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 配置addMapping =false ,则禁用资源</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>resourceProperties<span class="token punctuation">.</span><span class="token function">isAddMappings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Default resource handling disabled"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            ServletContext servletContext <span class="token operator">=</span> <span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//映射webjars,实际上查找的路径是classpath:/META-INF/resources/webjars/, 其实是配置了个别名.</span>            <span class="token function">addResourceHandler</span><span class="token punctuation">(</span>registry<span class="token punctuation">,</span> <span class="token string">"/webjars/**"</span><span class="token punctuation">,</span> <span class="token string">"classpath:/META-INF/resources/webjars/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">addResourceHandler</span><span class="token punctuation">(</span>registry<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mvcProperties<span class="token punctuation">.</span><span class="token function">getStaticPathPattern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>registration<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                <span class="token operator">/</span><span class="token operator">/</span>添加静态资源映射<span class="token punctuation">,</span>这个就是默认配置的静态资源路径数组                registration<span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resourceProperties<span class="token punctuation">.</span><span class="token function">getStaticLocations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>servletContext <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    registration<span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServletContextResource</span><span class="token punctuation">(</span>servletContext<span class="token punctuation">,</span> SERVLET_LOCATION<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>            <span class="token operator">/</span><span class="token operator">/</span>HandlerMapping：处理器映射。保存了每一个Handler能处理哪些请求。            <span class="token annotation punctuation">@Bean</span>        <span class="token keyword">public</span> WelcomePageHandlerMapping <span class="token function">welcomePageHandlerMapping</span><span class="token punctuation">(</span>ApplicationContext applicationContext<span class="token punctuation">,</span>                FormattingConversionService mvcConversionService<span class="token punctuation">,</span> ResourceUrlProvider mvcResourceUrlProvider<span class="token punctuation">)</span> <span class="token punctuation">{</span>            WelcomePageHandlerMapping welcomePageHandlerMapping <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WelcomePageHandlerMapping</span><span class="token punctuation">(</span>                    <span class="token keyword">new</span> <span class="token class-name">TemplateAvailabilityProviders</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">,</span> applicationContext<span class="token punctuation">,</span> <span class="token function">getWelcomePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>mvcProperties<span class="token punctuation">.</span><span class="token function">getStaticPathPattern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            welcomePageHandlerMapping<span class="token punctuation">.</span><span class="token function">setInterceptors</span><span class="token punctuation">(</span><span class="token function">getInterceptors</span><span class="token punctuation">(</span>mvcConversionService<span class="token punctuation">,</span> mvcResourceUrlProvider<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            welcomePageHandlerMapping<span class="token punctuation">.</span><span class="token function">setCorsConfigurations</span><span class="token punctuation">(</span><span class="token function">getCorsConfigurations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> welcomePageHandlerMapping<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token function">WelcomePageHandlerMapping</span><span class="token punctuation">(</span>TemplateAvailabilityProviders templateAvailabilityProviders<span class="token punctuation">,</span>            ApplicationContext applicationContext<span class="token punctuation">,</span> Optional<span class="token operator">&lt;</span>Resource<span class="token operator">></span> welcomePage<span class="token punctuation">,</span> String staticPathPattern<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>welcomePage<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token string">"/**"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>staticPathPattern<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token operator">/</span><span class="token operator">/</span>要用欢迎页功能，必须是<span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Adding welcome page: "</span> <span class="token operator">+</span> welcomePage<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">setRootViewName</span><span class="token punctuation">(</span><span class="token string">"forward:index.html"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token operator">/</span><span class="token operator">/</span>或者是Template        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">welcomeTemplateExists</span><span class="token punctuation">(</span>templateAvailabilityProviders<span class="token punctuation">,</span> applicationContext<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token operator">/</span><span class="token operator">/</span> 调用Controller  <span class="token operator">/</span>index            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Adding welcome page template: index"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">setRootViewName</span><span class="token punctuation">(</span><span class="token string">"index"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>                      <span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">/</span>ResourceProperties类<span class="token punctuation">,</span>配置资源路径<span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"spring.resources"</span><span class="token punctuation">,</span> ignoreUnknownFields <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResourceProperties</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> CLASSPATH_RESOURCE_LOCATIONS <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">"classpath:/META-INF/resources/"</span><span class="token punctuation">,</span>            <span class="token string">"classpath:/resources/"</span><span class="token punctuation">,</span> <span class="token string">"classpath:/static/"</span><span class="token punctuation">,</span> <span class="token string">"classpath:/public/"</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">*</span> Locations of <span class="token keyword">static</span> resources<span class="token punctuation">.</span> Defaults to classpath<span class="token operator">:</span><span class="token punctuation">[</span><span class="token operator">/</span>META<span class="token operator">-</span>INF<span class="token operator">/</span>resources<span class="token operator">/</span><span class="token punctuation">,</span>     <span class="token operator">*</span> <span class="token operator">/</span>resources<span class="token operator">/</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token keyword">static</span><span class="token operator">/</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span><span class="token punctuation">]</span><span class="token punctuation">.</span>     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token keyword">private</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> staticLocations <span class="token operator">=</span> CLASSPATH_RESOURCE_LOCATIONS<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-xml"><code class="language-xml">spring:  resources:    add-mappings: false   禁用所有静态资源规则<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="请求参数处理"><a href="#请求参数处理" class="headerlink" title="请求参数处理"></a>请求参数处理</h5><p>http请求支持的请求方式有: get,post ,put ,delete, patch等, 原生客户端都支持这些请求方式,但是web表单提交只支持get,post请求</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/user"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//@GetMapping("/user")  可替换上面的使用方式</span>    <span class="token keyword">public</span> String <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"GET-张三"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/user"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// @PostMapping("/user")</span>    <span class="token keyword">public</span> String <span class="token function">saveUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"POST-张三"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/user"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>PUT<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//@PutMapping("/user")</span>    <span class="token keyword">public</span> String <span class="token function">putUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"PUT-张三"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/user"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>DELETE<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//  @DeleteMapping("/user")</span>    <span class="token keyword">public</span> String <span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"DELETE-张三"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过查看SpringBoot源码发现,为支持form表单提交put,delete请求,它需要作出如下配置.</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 1,手动开启支持HiddenHttpMethodFilter配置</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">mvc</span><span class="token punctuation">:</span>    <span class="token key atrule">hiddenmethod</span><span class="token punctuation">:</span>      <span class="token key atrule">filter</span><span class="token punctuation">:</span>        <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true   </span><span class="token comment" spellcheck="true">#开启页面表单的Rest功能</span>       <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--2,还是以post提交,增加_method的key值,value对应为put提交方式--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span>  <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/user<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_method<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>put<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>put提交<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h6><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebMvcAutoConfiguration</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//.....省略部分代码</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token comment" spellcheck="true">//没有自定义HiddenHttpMethodFilter时生效</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span>HiddenHttpMethodFilter<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ConditionalOnProperty</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"spring.mvc.hiddenmethod.filter"</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">"enabled"</span><span class="token punctuation">,</span> matchIfMissing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//默认不开启spring.mvc.hiddenmethod.filter配置项</span>    <span class="token keyword">public</span> OrderedHiddenHttpMethodFilter <span class="token function">hiddenHttpMethodFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OrderedHiddenHttpMethodFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//OrderedHiddenHttpMethodFilter 继承了该类</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HiddenHttpMethodFilter</span> <span class="token keyword">extends</span> <span class="token class-name">OncePerRequestFilter</span> <span class="token punctuation">{</span>     <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doFilterInternal</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> FilterChain filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        HttpServletRequest requestToUse <span class="token operator">=</span> request<span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//针对form表单做的特殊处理,先判断是否post请求</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"javax.servlet.error.exception"</span><span class="token punctuation">)</span> <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//再判断是否包含_method的关键字,如果有,则取对应的value值</span>            String paramValue <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>methodParam<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>paramValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//将对应的value转为大写</span>                String method <span class="token operator">=</span> paramValue<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span>Locale<span class="token punctuation">.</span>ENGLISH<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//判断用户传的值是否是隐藏的三种请求方法</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>ALLOWED_METHODS<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//返回一个经过装饰的HttpMethodRequest,本质也是serverlet,只不过重写了getMethod方法</span>                    requestToUse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HiddenHttpMethodFilter<span class="token punctuation">.</span>HttpMethodRequestWrapper</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ServletRequest<span class="token punctuation">)</span>requestToUse<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>         <span class="token keyword">static</span> <span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">//支持put,delet,patch三种方法</span>        ALLOWED_METHODS <span class="token operator">=</span> Collections<span class="token punctuation">.</span><span class="token function">unmodifiableList</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>PUT<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> HttpMethod<span class="token punctuation">.</span>DELETE<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> HttpMethod<span class="token punctuation">.</span>PATCH<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">HttpMethodRequestWrapper</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServletRequestWrapper</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> <span class="token keyword">final</span> String method<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token function">HttpMethodRequestWrapper</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> String method<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">super</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>method <span class="token operator">=</span> method<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//重写getMethod方法</span>        <span class="token keyword">public</span> String <span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>method<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果不想用SpringBoot默认的HiddenHttpMethodFilter,那就需要自定义的HiddenHttpMethodFilter了.</p><h6 id="自定义filter"><a href="#自定义filter" class="headerlink" title="自定义filter"></a>自定义filter</h6><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConfig</span> <span class="token punctuation">{</span>     <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> HiddenHttpMethodFilter <span class="token function">hiddenHttpMethodFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        HiddenHttpMethodFilter methodFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HiddenHttpMethodFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置自定义方法参数的key值</span>        methodFilter<span class="token punctuation">.</span><span class="token function">setMethodParam</span><span class="token punctuation">(</span><span class="token string">"_m"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> methodFilter<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>form表单中的使用</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span>  <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/user<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_m<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>put<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>put提交<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="请求映射原理"><a href="#请求映射原理" class="headerlink" title="请求映射原理"></a>请求映射原理</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://i.loli.net/2021/05/19/RevEgby3WZ7AXho.png" alt="image.png"></p><p>每个请求,最后都会执行doDispatch方法.</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 所有的http请求都会走该方法,具体执行,所有请求将依次通过应用servlet的HandlerMappings获得能处理该请求的HandlerAdapter。  */</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doDispatch</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>   HttpServletRequest processedRequest <span class="token operator">=</span> request<span class="token punctuation">;</span>   HandlerExecutionChain mappedHandler <span class="token operator">=</span> null<span class="token punctuation">;</span>   <span class="token keyword">boolean</span> multipartRequestParsed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>   WebAsyncManager asyncManager <span class="token operator">=</span> WebAsyncUtils<span class="token punctuation">.</span><span class="token function">getAsyncManager</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">try</span> <span class="token punctuation">{</span>      ModelAndView mv <span class="token operator">=</span> null<span class="token punctuation">;</span>      Exception dispatchException <span class="token operator">=</span> null<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//上面都是一些变量的初始化</span>      <span class="token keyword">try</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//检查是否为文件传输请求</span>         processedRequest <span class="token operator">=</span> <span class="token function">checkMultipart</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>         multipartRequestParsed <span class="token operator">=</span> <span class="token punctuation">(</span>processedRequest <span class="token operator">!=</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//找到当前请求使用哪个Handler（Controller的方法）处理</span>         mappedHandler <span class="token operator">=</span> <span class="token function">getHandler</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>mappedHandler <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">noHandlerFound</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token comment" spellcheck="true">// Determine handler adapter for the current request.</span>         HandlerAdapter ha <span class="token operator">=</span> <span class="token function">getHandlerAdapter</span><span class="token punctuation">(</span>mappedHandler<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">// Process last-modified header, if supported by the handler.</span>         String method <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">boolean</span> isGet <span class="token operator">=</span> <span class="token string">"GET"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>isGet <span class="token operator">||</span> <span class="token string">"HEAD"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">long</span> lastModified <span class="token operator">=</span> ha<span class="token punctuation">.</span><span class="token function">getLastModified</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> mappedHandler<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">checkNotModified</span><span class="token punctuation">(</span>lastModified<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> isGet<span class="token punctuation">)</span> <span class="token punctuation">{</span>               <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mappedHandler<span class="token punctuation">.</span><span class="token function">applyPreHandle</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token comment" spellcheck="true">// Actually invoke the handler.</span>         mv <span class="token operator">=</span> ha<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">,</span> mappedHandler<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>asyncManager<span class="token punctuation">.</span><span class="token function">isConcurrentHandlingStarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token function">applyDefaultViewName</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> mv<span class="token punctuation">)</span><span class="token punctuation">;</span>         mappedHandler<span class="token punctuation">.</span><span class="token function">applyPostHandle</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">,</span> mv<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>         dispatchException <span class="token operator">=</span> ex<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> err<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">// As of 4.3, we're processing Errors thrown from handler methods as well,</span>         <span class="token comment" spellcheck="true">// making them available for @ExceptionHandler methods and other scenarios.</span>         dispatchException <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NestedServletException</span><span class="token punctuation">(</span><span class="token string">"Handler dispatch failed"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token function">processDispatchResult</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">,</span> mappedHandler<span class="token punctuation">,</span> mv<span class="token punctuation">,</span> dispatchException<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">triggerAfterCompletion</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">,</span> mappedHandler<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> err<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">triggerAfterCompletion</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">,</span> mappedHandler<span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">NestedServletException</span><span class="token punctuation">(</span><span class="token string">"Handler processing failed"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>   <span class="token keyword">finally</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>asyncManager<span class="token punctuation">.</span><span class="token function">isConcurrentHandlingStarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">// Instead of postHandle and afterCompletion</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>mappedHandler <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            mappedHandler<span class="token punctuation">.</span><span class="token function">applyAfterConcurrentHandlingStarted</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      <span class="token keyword">else</span> <span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">// Clean up any resources used by a multipart request.</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>multipartRequestParsed<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">cleanupMultipart</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>      <span class="token punctuation">}</span>   <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://i.loli.net/2021/05/19/OcdEnXUvWYJLbkA.png" alt="image.png"></p><p><strong>RequestMappingHandlerMapping</strong>：保存了所有@RequestMapping 和handler的映射规则.</p><p><strong>WelcomePageHandlerMapping</strong>  : 用于存储访问index的访问规则</p><p>如果我们需要一些自定义的映射处理，我们也可以自己给容器中放<strong>HandlerMapping</strong>。自定义 <strong>HandlerMapping</strong></p><h5 id="请求参数与注解"><a href="#请求参数与注解" class="headerlink" title="请求参数与注解"></a>请求参数与注解</h5><ul><li>@PathVariable、路径变量</li><li>@RequestHeader、请求头</li><li>@ModelAttribute、 </li><li>@RequestParam、请求参数</li><li>@MatrixVariable、</li><li>@CookieValue、cookie值</li><li>@RequestBody   请求体</li><li>@RequestAttribute 设置请求转发传递参数</li></ul><blockquote><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ParameterTestController</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//  car/2/owner/zhangsan  restful请求风格使用</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/car/{id}/owner/{username}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> <span class="token function">getCar</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> Integer id<span class="token punctuation">,</span>   <span class="token comment" spellcheck="true">//PathVariable,  动态替换请求路径的值</span>                                     <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span> String name<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@PathVariable</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>String<span class="token operator">></span> pv<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//自动将路径变量值存进map</span>                                     <span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span><span class="token string">"User-Agent"</span><span class="token punctuation">)</span> String userAgent<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//获取指定的请求头</span>                                     <span class="token annotation punctuation">@RequestHeader</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>String<span class="token operator">></span> header<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//获取所有的请求头</span>                                     <span class="token comment" spellcheck="true">//car?age=18&amp;inters=basketball  拼接请求链接时候使用RequestParam</span>                                     <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">)</span> Integer age<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//请求参数</span>                                     <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"inters"</span><span class="token punctuation">)</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> inters<span class="token punctuation">,</span>                                     <span class="token comment" spellcheck="true">//自动将拼接请求链接的参数放入map集合中</span>                                     <span class="token annotation punctuation">@RequestParam</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>String<span class="token operator">></span> params<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@CookieValue</span><span class="token punctuation">(</span><span class="token string">"_ga"</span><span class="token punctuation">)</span> String _ga<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@CookieValue</span><span class="token punctuation">(</span><span class="token string">"_ga"</span><span class="token punctuation">)</span> Cookie cookie<span class="token punctuation">)</span><span class="token punctuation">{</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        map.put("id",id);</span><span class="token comment" spellcheck="true">//        map.put("name",name);</span><span class="token comment" spellcheck="true">//        map.put("pv",pv);</span><span class="token comment" spellcheck="true">//        map.put("userAgent",userAgent);</span><span class="token comment" spellcheck="true">//        map.put("headers",header);</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"inters"</span><span class="token punctuation">,</span>inters<span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"params"</span><span class="token punctuation">,</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"_ga"</span><span class="token punctuation">,</span>_ga<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cookie<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"===>"</span><span class="token operator">+</span>cookie<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> map<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/save"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Map <span class="token function">postMethod</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> String content<span class="token punctuation">)</span><span class="token punctuation">{</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> map<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//1、语法： 请求路径：/cars/sell;low=34;brand=byd,audi,yd</span>    <span class="token comment" spellcheck="true">//2、SpringBoot默认是禁用了矩阵变量的功能</span>    <span class="token comment" spellcheck="true">//      手动开启：原理。对于路径的处理。UrlPathHelper进行解析。</span>    <span class="token comment" spellcheck="true">//              removeSemicolonContent（移除分号内容）支持矩阵变量的</span>    <span class="token comment" spellcheck="true">//3、矩阵变量必须有url路径变量才能被解析</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/cars/{path}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Map <span class="token function">carsSell</span><span class="token punctuation">(</span><span class="token annotation punctuation">@MatrixVariable</span><span class="token punctuation">(</span><span class="token string">"low"</span><span class="token punctuation">)</span> Integer low<span class="token punctuation">,</span>                        <span class="token annotation punctuation">@MatrixVariable</span><span class="token punctuation">(</span><span class="token string">"brand"</span><span class="token punctuation">)</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> brand<span class="token punctuation">,</span>                        <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span> String path<span class="token punctuation">)</span><span class="token punctuation">{</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"low"</span><span class="token punctuation">,</span>low<span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"brand"</span><span class="token punctuation">,</span>brand<span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">,</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> map<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// /boss/1;age=20/2;age=10</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/boss/{bossId}/{empId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Map <span class="token function">boss</span><span class="token punctuation">(</span><span class="token annotation punctuation">@MatrixVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"age"</span><span class="token punctuation">,</span>pathVar <span class="token operator">=</span> <span class="token string">"bossId"</span><span class="token punctuation">)</span> Integer bossAge<span class="token punctuation">,</span>                    <span class="token annotation punctuation">@MatrixVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"age"</span><span class="token punctuation">,</span>pathVar <span class="token operator">=</span> <span class="token string">"empId"</span><span class="token punctuation">)</span> Integer empAge<span class="token punctuation">)</span><span class="token punctuation">{</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"bossAge"</span><span class="token punctuation">,</span>bossAge<span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"empAge"</span><span class="token punctuation">,</span>empAge<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> map<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p> 转发并传递参数到下个页面@RequestAttribute</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ParameterTestController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/toIndex"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">goIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"forward:/index.html"</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//转发到index页面</span>    <span class="token punctuation">}</span>            <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/toSuccess"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">toSuccess</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//通过HttpServletRequest设置参数</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span> <span class="token punctuation">,</span><span class="token string">"属性值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"forward:/success"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/success"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">)</span>String msg<span class="token punctuation">,</span> HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//方法1.  直接通过@RequestAttribute接受参数</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//方法2, 通过HttpServletRequest的getAttribute获取</span>        String attribute <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> map<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="复杂参数"><a href="#复杂参数" class="headerlink" title="复杂参数"></a>复杂参数</h5><p><strong>Map</strong>、<strong>Model（map、model里面的数据会被放在request的请求域  request.setAttribute）、HttpServletRequest、</strong>Errors/BindingResult、<strong>RedirectAttributes（ 重定向携带数据）</strong>、<strong>ServletResponse（response）</strong>、SessionStatus、UriComponentsBuilder、ServletUriComponentsBuilder</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//放置数据</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> map<span class="token punctuation">,</span>  Model model<span class="token punctuation">,</span> HttpServletRequest request 都是可以给request域中放数据，<span class="token comment" spellcheck="true">//获取数据</span>request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//原理</span>Map、Model类型的参数，会返回 mavContainer<span class="token punctuation">.</span>getModel（）；<span class="token operator">--</span><span class="token operator">-</span><span class="token operator">></span> BindingAwareModelMap 是Model 也是Map<span class="token punctuation">,</span> 里面保存着之前存放的kev<span class="token punctuation">,</span>value值 然后这个BindingAwareModelMap会被加入到mergeModel中<span class="token punctuation">,</span>最后会被遍历<span class="token punctuation">,</span>被request<span class="token punctuation">.</span>setAttribute放置在请求域中<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="自定义对象参数传递"><a href="#自定义对象参数传递" class="headerlink" title="自定义对象参数传递"></a>自定义对象参数传递</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** *     HTML 页面直接传输对应的自定义对象属性值 *     姓名： &lt;input name="userName"/> &lt;br/> *     年龄： &lt;input name="age"/> &lt;br/> *     生日： &lt;input name="birth"/> &lt;br/> *     宠物姓名：&lt;input name="pet.name"/>&lt;br/> *     宠物年龄：&lt;input name="pet.age"/> */</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> String userName<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span>    <span class="token keyword">private</span> Date birth<span class="token punctuation">;</span>    <span class="token keyword">private</span> Pet pet<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Pet</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> String age<span class="token punctuation">;</span><span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="参数传递原理"><a href="#参数传递原理" class="headerlink" title="参数传递原理"></a>参数传递原理</h5><ul><li>HandlerMapping中找到能处理请求的Handler（Controller.method()）</li><li>为当前Handler 找一个适配器 HandlerAdapter； <strong>RequestMappingHandlerAdapter</strong></li><li>适配器执行目标方法并确定方法参数的每一个值</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://i.loli.net/2021/05/21/8aftckTJXV3DEdC.png" alt="image.png"></p><ul><li>执行目标方法</li></ul><pre class="line-numbers language-java"><code class="language-java">mav <span class="token operator">=</span> <span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> handlerMethod<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//执行目标方法</span><span class="token comment" spellcheck="true">//ServletInvocableHandlerMethod</span>Object returnValue <span class="token operator">=</span> <span class="token function">invokeForRequest</span><span class="token punctuation">(</span>webRequest<span class="token punctuation">,</span> mavContainer<span class="token punctuation">,</span> providedArgs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取方法的参数值</span>Object<span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token operator">=</span> <span class="token function">getMethodArgumentValues</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> mavContainer<span class="token punctuation">,</span> providedArgs<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>使用参数解析器解析参数,支持就调用 resolveArgument</p></li><li><p>使用返回处理器进行处理</p></li><li><p>目标方法执行完成,所有数据都放在ModelAndViewContainer中,包含要去的页面地址View。还包含Model数据。</p></li><li><p>处理派发结果<strong>processDispatchResult</strong>(processedRequest, response, mappedHandler, mv, dispatchException);</p><p>renderMergedOutputModel(mergedModel, getRequestToExpose(request), response);</p></li></ul><h6 id="自定义-Converter"><a href="#自定义-Converter" class="headerlink" title="自定义 Converter"></a>自定义 Converter</h6><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//1、WebMvcConfigurer定制化SpringMVC的功能</span>    <span class="token comment" spellcheck="true">//解析cat,3这样的自定义Pet数据</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> WebMvcConfigurer <span class="token function">webMvcConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">WebMvcConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configurePathMatch</span><span class="token punctuation">(</span>PathMatchConfigurer configurer<span class="token punctuation">)</span> <span class="token punctuation">{</span>                UrlPathHelper urlPathHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UrlPathHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 不移除；后面的内容。矩阵变量功能就可以生效</span>                urlPathHelper<span class="token punctuation">.</span><span class="token function">setRemoveSemicolonContent</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                configurer<span class="token punctuation">.</span><span class="token function">setUrlPathHelper</span><span class="token punctuation">(</span>urlPathHelper<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addFormatters</span><span class="token punctuation">(</span>FormatterRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>                registry<span class="token punctuation">.</span><span class="token function">addConverter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Converter</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Pet<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> Pet <span class="token function">convert</span><span class="token punctuation">(</span>String source<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">// 啊猫,3</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                            Pet pet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            String<span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            pet<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>split<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            pet<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>split<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">return</span> pet<span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                        <span class="token keyword">return</span> null<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="数据响应与内容协商"><a href="#数据响应与内容协商" class="headerlink" title="数据响应与内容协商"></a>数据响应与内容协商</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://i.loli.net/2021/05/21/cqPLHQEl2BKCybM.png" alt="image-20210521144010324"></p><p>web场景自动引入了json场景,默认返回json数据,如果需要返回其余类型数据,比如xml,则需要引入xml依赖.</p><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fasterxml.jackson.dataformat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-dataformat-xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h6 id="SpringMVC支持的返回值"><a href="#SpringMVC支持的返回值" class="headerlink" title="SpringMVC支持的返回值"></a>SpringMVC支持的返回值</h6><pre class="line-numbers language-java"><code class="language-java">ModelAndViewModelViewResponseEntity ResponseBodyEmitterStreamingResponseBodyHttpEntityHttpHeadersCallableDeferredResultListenableFutureCompletionStageWebAsyncTask有 <span class="token annotation punctuation">@ModelAttribute</span> 且为对象类型的<span class="token annotation punctuation">@ResponseBody</span> 注解 <span class="token operator">--</span><span class="token operator">-</span><span class="token operator">></span> RequestResponseBodyMethodProcessor；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="默认的MessageConverter"><a href="#默认的MessageConverter" class="headerlink" title="默认的MessageConverter"></a>默认的MessageConverter</h6><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://i.loli.net/2021/05/21/VIkPUOcNMKnJv7F.png" alt="image.png"></p><pre><code>0 - 只支持Byte类型的1 - String2 - String3 - Resource4 - ResourceRegion5 - DOMSource.class \ SAXSource.class) \ StAXSource.class \StreamSource.class \Source.class6 - MultiValueMap7 - true 8 - true9 - 支持注解方式xml处理的。</code></pre><h6 id="开启浏览器参数内容协商功能"><a href="#开启浏览器参数内容协商功能" class="headerlink" title="开启浏览器参数内容协商功能"></a>开启浏览器参数内容协商功能</h6><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#1. 开启请求参数内容协商模式</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>    <span class="token key atrule">contentnegotiation</span><span class="token punctuation">:</span>      <span class="token key atrule">favor-parameter</span><span class="token punctuation">:</span> <span class="token boolean important">true  </span><span class="token comment" spellcheck="true">#2 浏览器请求地址中输入format参数,比如</span>localhost<span class="token punctuation">:</span>8080/test<span class="token punctuation">?</span>format=json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="内容协商原理"><a href="#内容协商原理" class="headerlink" title="内容协商原理"></a>内容协商原理</h5><ol><li>判断当前响应头中是否已经有确定的媒体类型。MediaType</li><li>获取客户端（PostMan、浏览器）支持接收的内容类型。（获取客户端Accept请求头字段）</li><li>遍历循环所有当前系统的 <strong>MessageConverter</strong>，看谁支持操作这个对象</li><li>找到支持操作Person的converter，把converter支持的媒体类型统计出来。</li><li>客户端需要【application/xml】。服务端能力【10种、json、xml】</li><li>进行内容协商的最佳匹配媒体类型</li><li>用 支持 将对象转为 最佳匹配媒体类型 的converter。调用它进行转化 。</li></ol><h5 id="自定义消息处理器"><a href="#自定义消息处理器" class="headerlink" title="自定义消息处理器"></a>自定义消息处理器</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//添加自定义的消息处理器</span> <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> WebMvcConfigurer <span class="token function">webMvcConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">WebMvcConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">extendMessageConverters</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>HttpMessageConverter<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">>></span> converters<span class="token punctuation">)</span> <span class="token punctuation">{</span>                converters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyCustomMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>                                <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//自定义消息处理器</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyCustomMessageConverter</span> <span class="token keyword">implements</span> <span class="token class-name">HttpMessageConverter</span><span class="token operator">&lt;</span>Person<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//支持读该自定义数据类型,客户端传给服务端, 如果没这个需求,可默认返回false</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canRead</span><span class="token punctuation">(</span>Class <span class="token class-name">clazz</span><span class="token punctuation">,</span> MediaType mediaType<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canWrite</span><span class="token punctuation">(</span>Class <span class="token class-name">clazz</span><span class="token punctuation">,</span> MediaType mediaType<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//此处我们是自定义person的协议, 所以只有该类为person时候,才支持写操作</span>        <span class="token keyword">return</span> clazz<span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//判断该类是否是person的超类</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//服务器要统计所有支持的mediaTypes,这儿需要添加自定义数据类型,解析并返回</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>MediaType<span class="token operator">></span> <span class="token function">getSupportedMediaTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> MediaType<span class="token punctuation">.</span><span class="token function">parseMediaTypes</span><span class="token punctuation">(</span><span class="token string">"application/x-custom"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Person <span class="token function">read</span><span class="token punctuation">(</span>Class<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span><span class="token operator">></span> clazz<span class="token punctuation">,</span> HttpInputMessage inputMessage<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> HttpMessageNotReadableException <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span>Person person<span class="token punctuation">,</span> MediaType contentType<span class="token punctuation">,</span> HttpOutputMessage outputMessage<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> HttpMessageNotWritableException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//自定义数据的写出, 此处约定自定义数据为属性以分号分割</span>        String data <span class="token operator">=</span> person<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">";"</span> <span class="token operator">+</span> person<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取输出流,将数据写出去</span>        OutputStream body <span class="token operator">=</span> outputMessage<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        body<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="自定义参数内容协商策略"><a href="#自定义参数内容协商策略" class="headerlink" title="自定义参数内容协商策略"></a>自定义参数内容协商策略</h5><p>根据源码可知,SpringBoot支持2种消息策略来返回浏览器所支持的消息格式.原生客户端根据请求头设置消息策略,浏览器无法修改请求头,而是通过增加请求参数来定义消息策略的.自定义如下:</p><pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> WebMvcConfigurer <span class="token function">webMvcConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">WebMvcConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">extendMessageConverters</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>HttpMessageConverter<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">>></span> converters<span class="token punctuation">)</span> <span class="token punctuation">{</span>                converters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyCustomMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureContentNegotiation</span><span class="token punctuation">(</span>ContentNegotiationConfigurer configurer<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//此处的configurer会覆盖掉原来的消息策略,必须添加上</span>                <span class="token comment" spellcheck="true">//设置请求参数消息策略</span>                HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> MediaType<span class="token operator">></span> mediaTypes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mediaTypes<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"json"</span><span class="token punctuation">,</span> MediaType<span class="token punctuation">.</span>APPLICATION_JSON<span class="token punctuation">)</span><span class="token punctuation">;</span>                mediaTypes<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"xml"</span><span class="token punctuation">,</span> MediaType<span class="token punctuation">.</span>APPLICATION_XML<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//将自定义的请求参数key值与定义的消息格式配对</span>                mediaTypes<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"custom"</span><span class="token punctuation">,</span>  MediaType<span class="token punctuation">.</span><span class="token function">parseMediaType</span><span class="token punctuation">(</span><span class="token string">"application/x-custom"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ParameterContentNegotiationStrategy paramStrategy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ParameterContentNegotiationStrategy</span><span class="token punctuation">(</span>mediaTypes<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//设置自定义消息请求参数的K值, 默认是format</span>                paramStrategy<span class="token punctuation">.</span><span class="token function">setParameterName</span><span class="token punctuation">(</span><span class="token string">"msgType"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//获取请求体策略</span>                HeaderContentNegotiationStrategy headerStrategy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HeaderContentNegotiationStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                configurer<span class="token punctuation">.</span><span class="token function">strategies</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>paramStrategy<span class="token punctuation">,</span> headerStrategy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="自定义拦截器配置"><a href="#自定义拦截器配置" class="headerlink" title="自定义拦截器配置"></a>自定义拦截器配置</h5><pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span>InterceptorRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>                registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HandlerInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//                        String token = request.getHeader("Authorization");</span><span class="token comment" spellcheck="true">//                        if (ObjectUtils.isEmpty(token)) {</span><span class="token comment" spellcheck="true">//                            request.setAttribute("code",304);</span><span class="token comment" spellcheck="true">//                            response.setStatus(304);</span><span class="token comment" spellcheck="true">//                            return false;</span><span class="token comment" spellcheck="true">//                        }</span>                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>                    <span class="token comment" spellcheck="true">//拦截所有的请求</span>                <span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span>                    <span class="token operator">/</span><span class="token operator">/</span>过滤指定的请求                <span class="token punctuation">.</span><span class="token function">excludePathPatterns</span><span class="token punctuation">(</span><span class="token string">"*/*.png"</span><span class="token punctuation">,</span><span class="token string">"/login"</span><span class="token punctuation">,</span><span class="token string">"/*.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="拦截器原理"><a href="#拦截器原理" class="headerlink" title="拦截器原理"></a>拦截器原理</h5><p><strong>1、</strong>根据当前请求，找到<strong>HandlerExecutionChain【</strong>可以处理请求的handler以及handler的所有 拦截器】</p><p><strong>2、</strong>先来<strong>顺序执行</strong> 所有拦截器的 preHandle方法</p><ul><li>1、如果当前拦截器prehandler返回为true。则执行下一个拦截器的preHandle</li><li>2、如果当前拦截器返回为false。直接   倒序执行所有已经执行了的拦截器的  afterCompletion；</li></ul><p><strong>3、如果任何一个拦截器返回false。直接跳出不执行目标方法</strong></p><p><strong>4、所有拦截器都返回True。执行目标方法</strong></p><p><strong>5、倒序执行所有拦截器的postHandle方法。</strong></p><p><strong>6、前面的步骤有任何异常都会直接倒序触发</strong> afterCompletion</p><p>7、页面成功渲染完成以后，也会倒序触发 afterCompletion</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://i.loli.net/2021/05/26/Q6zN31UZrWRPuGM.png" alt="image.png"></p><h5 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h5><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * MultipartFile 自动封装上传过来的文件     * @param email     * @param username     * @param headerImg     * @param photos     * @return     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">upload</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">)</span> String email<span class="token punctuation">,</span>                         <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span> String username<span class="token punctuation">,</span>                         <span class="token annotation punctuation">@RequestPart</span><span class="token punctuation">(</span><span class="token string">"headerImg"</span><span class="token punctuation">)</span> MultipartFile headerImg<span class="token punctuation">,</span>                         <span class="token annotation punctuation">@RequestPart</span><span class="token punctuation">(</span><span class="token string">"photos"</span><span class="token punctuation">)</span> MultipartFile<span class="token punctuation">[</span><span class="token punctuation">]</span> photos<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"上传的信息：email={}，username={}，headerImg={}，photos={}"</span><span class="token punctuation">,</span>                email<span class="token punctuation">,</span>username<span class="token punctuation">,</span>headerImg<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>photos<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>headerImg<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//保存到文件服务器，OSS服务器</span>            String originalFilename <span class="token operator">=</span> headerImg<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            headerImg<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"H:\\cache\\"</span><span class="token operator">+</span>originalFilename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>photos<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>MultipartFile photo <span class="token operator">:</span> photos<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>photo<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    String originalFilename <span class="token operator">=</span> photo<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    photo<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"H:\\cache\\"</span><span class="token operator">+</span>originalFilename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token string">"main"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">servlet</span><span class="token punctuation">:</span>    <span class="token key atrule">multipart</span><span class="token punctuation">:</span>      <span class="token key atrule">max-file-size</span><span class="token punctuation">:</span> 10MB    <span class="token comment" spellcheck="true">#修改单个文件最大限制为10MB,默认是1MB</span>      <span class="token key atrule">max-request-size</span><span class="token punctuation">:</span> 100MB  <span class="token comment" spellcheck="true"># 修改单次请求最大上传文件的总大小为100MB,默认是10MB</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="文件上传原理"><a href="#文件上传原理" class="headerlink" title="文件上传原理"></a>文件上传原理</h5><p>**文件上传自动配置类-MultipartAutoConfiguration-**<strong>MultipartProperties</strong></p><ul><li><p>自动配置好了 <strong>StandardServletMultipartResolver  【文件上传解析器】</strong></p></li><li><p><strong>原理步骤</strong></p></li><li><p><strong>1、请求进来使用文件上传解析器判断（</strong>isMultipart<strong>）并封装（</strong>resolveMultipart，<strong>返回</strong>MultipartHttpServletRequest<strong>）文件上传请求</strong></p></li><li><p><strong>2、参数解析器来解析请求中的文件内容封装成MultipartFile</strong></p></li><li><p><strong>3、将request中文件信息封装为一个Map；</strong>MultiValueMap&lt;String, MultipartFile&gt;</p></li></ul><p><strong>FileCopyUtils</strong>。实现文件流的拷贝</p><h5 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h5><h6 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h6><ul><li><p>默认情况下，Spring Boot提供<code>/error</code>处理所有错误的映射</p></li><li><p>对于机器客户端，它将生成JSON响应，其中包含错误，HTTP状态和异常消息的详细信息。对于浏览器客户端，响应一个“ whitelabel”错误视图，以HTML格式呈现相同的数据.</p></li><li><p><strong>要对其进行自定义，添加**</strong><code>View</code>**<strong>解析为`error```</strong></p></li><li><p>要完全替换默认行为，可以实现 <code>ErrorController </code>并注册该类型的Bean定义，或添加<code>ErrorAttributes类型的组件</code>以使用现有机制并替换其内容。</p></li><li><p>error/下的4xx，5xx页面会被自动解析；</p></li></ul><h6 id="定制错误处理逻辑"><a href="#定制错误处理逻辑" class="headerlink" title="定制错误处理逻辑"></a>定制错误处理逻辑</h6><ul><li>error/404.html  error/5xx.html；有精确的错误状态码页面就匹配精确，没有就找 4xx.html；如果都没有就触发默认的错误白页</li><li>@ControllerAdvice+@ExceptionHandler处理全局异常；底层是 <strong>ExceptionHandlerExceptionResolver 支持的</strong></li></ul><h5 id="web原生组件servlet-Filter-Listener的注入"><a href="#web原生组件servlet-Filter-Listener的注入" class="headerlink" title="web原生组件servlet,Filter,Listener的注入"></a>web原生组件servlet,Filter,Listener的注入</h5><p>方式一.</p><blockquote><pre><code>在Springboot1Application上添加@ServletComponentScan注解自定义MyServlet类, Filter类,或者Listener类</code></pre></blockquote><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 1.扫描指定包名下的自定义组件</span><span class="token annotation punctuation">@ServletComponentScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">"com.exanple.springboot"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Springboot1Application</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取返回的IOC容器</span>        ConfigurableApplicationContext run <span class="token operator">=</span> SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>Springboot1Application<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//2. 自定义servlet组件</span><span class="token comment" spellcheck="true">//添加注解,并指定访问路径, 该自定义组件不会被拦截器拦截.</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/my"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">doGet</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">doPost</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//自定义过滤器</span><span class="token comment" spellcheck="true">//过滤指定路径下的请求</span><span class="token annotation punctuation">@WebFilter</span><span class="token punctuation">(</span>urlPatterns <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"/css/*"</span><span class="token punctuation">,</span><span class="token string">"/images/*"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>            <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest request<span class="token punctuation">,</span> ServletResponse response<span class="token punctuation">,</span> FilterChain chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//自定义监听器</span><span class="token annotation punctuation">@WebListener</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServletContextListener</span> <span class="token keyword">implements</span> <span class="token class-name">ServletContextListener</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextInitialized</span><span class="token punctuation">(</span>ServletContextEvent sce<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//监听项目初始化</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextDestroyed</span><span class="token punctuation">(</span>ServletContextEvent sce<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//监听项目被正常关闭</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方法二</p><p>使用RegistrationBean,  ServletRegistrationBean/FilterRegistrationBean/ServletListenerRegistrationBean</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//添加注解Configuration, bean注解,同时去掉MyServlet上的WebServlet注解</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyRegistConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> ServletRegistrationBean <span class="token function">myServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        MyServlet myServlet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServletRegistrationBean</span><span class="token punctuation">(</span>myServlet<span class="token punctuation">,</span><span class="token string">"/my"</span><span class="token punctuation">,</span><span class="token string">"/my02"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> FilterRegistrationBean <span class="token function">myFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        MyFilter myFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        return new FilterRegistrationBean(myFilter,myServlet());</span>        FilterRegistrationBean filterRegistrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token punctuation">(</span>myFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>        filterRegistrationBean<span class="token punctuation">.</span><span class="token function">setUrlPatterns</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"/my"</span><span class="token punctuation">,</span><span class="token string">"/css/*"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> filterRegistrationBean<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> ServletListenerRegistrationBean <span class="token function">myListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        MySwervletContextListener mySwervletContextListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MySwervletContextListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServletListenerRegistrationBean</span><span class="token punctuation">(</span>mySwervletContextListener<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="切换嵌入式Servlet容器"><a href="#切换嵌入式Servlet容器" class="headerlink" title="切换嵌入式Servlet容器"></a>切换嵌入式Servlet容器</h5><ul><li>默认支持的webServer<ul><li><code>Tomcat</code>, <code>Jetty</code>,netty,  or <code>Undertow</code></li><li><code>ServletWebServerApplicationContext 容器启动寻找ServletWebServerFactory 并引导创建服务器</code></li></ul></li></ul><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--排除默认的tomcat服务器,然后引入想要支持的web服务器---></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-tomcat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h6><ul><li>SpringBoot应用启动发现当前是Web应用。web场景包-导入tomcat</li><li>web应用会创建一个web版的ioc容器<code>ServletWebServerApplicationContext</code> </li><li><code>ServletWebServerApplicationContext</code>  启动的时候寻找 <strong><code>ServletWebServerFactory</code></strong><code>（Servlet 的web服务器工厂---&gt; Servlet 的web服务器）</code>  </li><li>SpringBoot底层默认有很多的WebServer工厂；<code>TomcatServletWebServerFactory</code>, <code>JettyServletWebServerFactory</code>, or <code>UndertowServletWebServerFactory</code></li><li><code>底层直接会有一个自动配置类。ServletWebServerFactoryAutoConfiguration</code></li><li><code>ServletWebServerFactoryAutoConfiguration导入了ServletWebServerFactoryConfiguration（配置类）</code></li><li><code>ServletWebServerFactoryConfiguration 配置类 根据动态判断系统中到底导入了那个Web服务器的包。（默认是web-starter导入tomcat包），容器中就有 TomcatServletWebServerFactory</code></li><li><code>TomcatServletWebServerFactory 创建出Tomcat服务器并启动；TomcatWebServer 的构造器拥有初始化方法initialize---this.tomcat.start();</code></li><li><code>内嵌服务器，就是手动把启动服务器的代码调用（tomcat核心jar包存在）</code></li></ul><h3 id="数据访问"><a href="#数据访问" class="headerlink" title="数据访问"></a>数据访问</h3><h4 id="使用jdbc数据库连接的配置"><a href="#使用jdbc数据库连接的配置" class="headerlink" title="使用jdbc数据库连接的配置"></a>使用jdbc数据库连接的配置</h4><pre class="line-numbers language-xml"><code class="language-xml">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>     <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/db1     <span class="token key atrule">username</span><span class="token punctuation">:</span> root     <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123</span>     <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="使用Druid数据源"><a href="#使用Druid数据源" class="headerlink" title="使用Druid数据源"></a>使用Druid数据源</h4><p><a href="https://github.com/alibaba/druid">druid官方github地址</a></p><p>集成的2种方式</p><ul><li><p>自定义</p></li><li><p>找官方提供的starer (<strong>推荐</strong>)</p></li></ul><p>具体集成步骤,参照github官方文档.</p><h4 id="整合MyBatis"><a href="#整合MyBatis" class="headerlink" title="整合MyBatis"></a>整合MyBatis</h4><p>参考<a href="https://github.com/mybatis">github地址</a>, <a href="https://mybatis.org/mybatis-3/zh/getting-started.html">官网文档地址</a> 引入依赖</p><pre class="line-numbers language-xml"><code class="language-xml">         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="通过配置文件方式-使用步骤如下"><a href="#通过配置文件方式-使用步骤如下" class="headerlink" title="通过配置文件方式,  使用步骤如下:"></a><strong>通过配置文件方式</strong>,  使用步骤如下:</h6><ul><li>导入mybatis官方starter</li><li>编写mapper接口。标准@Mapper注解</li><li>编写sql映射文件并绑定mapper接口</li><li>在application.yaml中指定Mapper配置文件的位置，以及指定全局配置文件的信息 （建议；<strong>配置在mybatis.configuration中,而不是写在专门的配置文件中</strong>）</li><li>通过service调用mapper接口并返回结果</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//步骤二</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TestMapper</span> <span class="token punctuation">{</span>    Account <span class="token function">getAcc</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--步骤三---></span><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype">&lt;!DOCTYPE mapper        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.springboot1.mapper.TestMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getAcc<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.springboot1.bean.Account<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from t1 where id =#{id}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 步骤四</span><span class="token key atrule">mybatis</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true">#  config-location: classpath:mybatis/mybatis-config.xml  #开启了configuration,则不能指定配置文件,二者只能存在一个.</span>  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mybatis/mapper/*.xml  <span class="token key atrule">configuration</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#mybatis全局配置, 推荐使用</span>    <span class="token key atrule">map-underscore-to-camel-case</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--mybatis全局配置的另外一种方式,不推荐--></span><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype">&lt;!DOCTYPE configuration        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-config.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        开启驼峰命名匹配, 没有提示,建议使用配置文件配置--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mapUnderscoreToCamelCase<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//步骤五</span>    <span class="token annotation punctuation">@Service</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AccService</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@Autowired</span>        TestMapper mTestMapper<span class="token punctuation">;</span>        <span class="token keyword">public</span> Account <span class="token function">getAcc</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> mTestMapper<span class="token punctuation">.</span><span class="token function">getAcc</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//在controller中调用</span>    <span class="token annotation punctuation">@Autowired</span>    AccService mAccService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/acc/{id}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Account <span class="token function">getAcc</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Account acc <span class="token operator">=</span> mAccService<span class="token punctuation">.</span><span class="token function">getAcc</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> acc<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="通过注解整合Mybatis"><a href="#通过注解整合Mybatis" class="headerlink" title="通过注解整合Mybatis"></a>通过注解整合Mybatis</h6><p>步骤与上面一样,唯一区别是第四步中的mapper映射文件使用了注解替代.</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TestMapper</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//需要xml配置映射文件,以及对应的sql语句</span>    Account <span class="token function">getAcc</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//通过注解直接配置,推荐使用.</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * form t1 where id=#{id}"</span><span class="token punctuation">)</span>    Account <span class="token function">getAccount</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="最佳实战："><a href="#最佳实战：" class="headerlink" title="最佳实战："></a><strong>最佳实战：</strong></h6><ul><li>引入mybatis-starter</li><li><strong>配置application.yaml中，配置configration</strong></li><li>编写Mapper接口并标注@Mapper注解</li><li>简单方法直接注解方式</li><li>复杂方法编写mapper.xml进行绑定映射</li><li><em>在主程序入口标注@MapperScan(“com.atguigu.admin.mapper”) 简化，其他的接口就可以不用标注@Mapper注解</em></li></ul><h4 id="整合-MyBatis-Plus-完成CRUD"><a href="#整合-MyBatis-Plus-完成CRUD" class="headerlink" title="整合 MyBatis-Plus 完成CRUD"></a>整合 MyBatis-Plus 完成CRUD</h4><p><a href="https://github.com/baomidou/mybatis-plus">MyBatis-Plus</a>（简称 MP）是一个 <a href="http://www.mybatis.org/mybatis-3/">MyBatis</a> 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><p><a href="https://baomidou.com/">mybatis plus 官网</a></p><p>优点:   只需要我们的Mapper继承 BaseMapper 就可以拥有crud能力,而无需手写sql语句.</p><h4 id="整合Redis"><a href="#整合Redis" class="headerlink" title="整合Redis"></a>整合Redis</h4><p>Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、<strong>缓存</strong>和消息中间件。 它支持多种类型的数据结构，如 <a href="http://www.redis.cn/topics/data-types-intro.html#strings">字符串（strings）</a>， <a href="http://www.redis.cn/topics/data-types-intro.html#hashes">散列（hashes）</a>， <a href="http://www.redis.cn/topics/data-types-intro.html#lists">列表（lists）</a>， <a href="http://www.redis.cn/topics/data-types-intro.html#sets">集合（sets）</a>， <a href="http://www.redis.cn/topics/data-types-intro.html#sorted-sets">有序集合（sorted sets）</a> 与范围查询， <a href="http://www.redis.cn/topics/data-types-intro.html#bitmaps">bitmaps</a>， <a href="http://www.redis.cn/topics/data-types-intro.html#hyperloglogs">hyperloglogs</a> 和 <a href="http://www.redis.cn/commands/geoadd.html">地理空间（geospatial）</a> 索引半径查询。 Redis 内置了 <a href="http://www.redis.cn/topics/replication.html">复制（replication）</a>，<a href="http://www.redis.cn/commands/eval.html">LUA脚本（Lua scripting）</a>， <a href="http://www.redis.cn/topics/lru-cache.html">LRU驱动事件（LRU eviction）</a>，<a href="http://www.redis.cn/topics/transactions.html">事务（transactions）</a> 和不同级别的 <a href="http://www.redis.cn/topics/persistence.html">磁盘持久化（persistence）</a>， 并通过 <a href="http://www.redis.cn/topics/sentinel.html">Redis哨兵（Sentinel）</a>和自动 <a href="http://www.redis.cn/topics/cluster-tutorial.html">分区（Cluster）</a>提供高可用性（high availability）。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!---引入依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="redis环境搭建"><a href="#redis环境搭建" class="headerlink" title="redis环境搭建"></a>redis环境搭建</h6><p>1、阿里云按量付费redis。经典网络</p><p>2、申请redis的公网连接地址</p><p>3、修改白名单  允许0.0.0.0/0 访问</p><h3 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h3><h5 id="JUnit5的变化"><a href="#JUnit5的变化" class="headerlink" title="JUnit5的变化"></a>JUnit5的变化</h5><p>JUnit5与之前版本的Junit框架有很大的不同。由三个不同子项目的几个不同模块组成。<strong>JUnit 5 = JUnit Platform + JUnit Jupiter + JUnit Vintage</strong></p><ul><li><p><strong>JUnit Platform</strong>: 是在jvm上启动测试框架的基础,不仅支持junit自制的测试引擎,其它测试引擎也都可以接入.</p></li><li><p><strong>JUnit Juptiter</strong>: 提供Junit5的新的编程模型,是Junit5新特性的核心,内部包含了一个测试引擎,用于在Junit Platform上运行.</p></li><li><p><strong>Junit Vintage:</strong> 提供兼容Junit4.x, 3.x老版本的测试引擎.</p></li></ul><p>SpringBoot 2.4+版本默认移除了对Vintage的依赖,如果需要兼容,则需要手动添加依赖</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.junit.vintage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit-vintage-engine<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.hamcrest<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hamcrest-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="junit5的集成"><a href="#junit5的集成" class="headerlink" title="junit5的集成"></a>junit5的集成</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="JUnit5常用注解"><a href="#JUnit5常用注解" class="headerlink" title="JUnit5常用注解"></a>JUnit5常用注解</h5><ul><li>@Test : 表示为测试方法.与JUnit4中的Test不一样的是,它不能声明任何属性,拓展的测试将会由Jupiter提供额外测试.</li><li>@parameterizedTest: 参数化测试</li><li>@RepeatedTest: 表示方法可重复执行</li><li>@DisplayName: 为测试类或者测试方法设置别名</li><li>BeforeEach: 表示在每个单元测试之前执行</li><li>AfterEach: 表示在每个单元测试之后执行</li><li>BeforeAll: 表示在所有单元测试之前执行</li><li>AfterAll : 表示在所有单元测试之后执行</li><li>@Tag: 表示单元测试中的类别,类似于Junit4中的@Categories</li><li>@Disabled: 表示测试类和测试方法不执行, 类似于Junit4中的ignore</li><li>@Timeout: 表示测试方法运行超过了指定时间会返回错误</li><li>@ExtendWith: 为测试类或者方法提供扩展类引用.</li></ul><h5 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h5><p>用于对测试中需要满足的条件进行验证.</p><ul><li>简单断言: 用于对单个值进行简单的验证;</li></ul><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>assertEquals</td><td>判断两个对象或两个原始类型是否相等</td></tr><tr><td>assertNotEquals</td><td>判断两个对象或两个原始类型是否不相等</td></tr><tr><td>assertSame</td><td>判断两个对象引用是否指向同一个对象</td></tr><tr><td>assertNotSame</td><td>判断两个对象引用是否指向不同的对象</td></tr><tr><td>assertTrue</td><td>判断给定的布尔值是否为 true</td></tr><tr><td>assertFalse</td><td>判断给定的布尔值是否为 false</td></tr><tr><td>assertNull</td><td>判断给定的对象引用是否为 null</td></tr><tr><td>assertNotNull</td><td>判断给定的对象引用是否不为 null</td></tr></tbody></table><ul><li><p>复杂断言: 用于判断2个对象或者原始类型的数组是否合理.</p></li><li><p>组合断言: assertAll 方法接受多个 org.junit.jupiter.api.Executable 函数式接口的实例作为要验证的断言，可以通过 lambda 表达式很容易的提供这些断言</p></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"assert all"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">assertAll</span><span class="token punctuation">(</span><span class="token string">"Math"</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">assertTrue</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>异常断言: 抛出异常</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"异常测试"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exceptionTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ArithmeticException exception <span class="token operator">=</span> Assertions<span class="token punctuation">.</span><span class="token function">assertThrows</span><span class="token punctuation">(</span>           <span class="token comment" spellcheck="true">//扔出断言异常</span>            ArithmeticException<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">%</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>超时断言</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"超时测试"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">timeoutTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//如果测试方法时间超过1s将会异常</span>    Assertions<span class="token punctuation">.</span><span class="token function">assertTimeout</span><span class="token punctuation">(</span>Duration<span class="token punctuation">.</span><span class="token function">ofMillis</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h5><p>当条件为真时,执行后面的语句,否则不予执行..</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"前置条件"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AssumptionsTest</span> <span class="token punctuation">{</span> <span class="token keyword">private</span> <span class="token keyword">final</span> String environment <span class="token operator">=</span> <span class="token string">"DEV"</span><span class="token punctuation">;</span>  <span class="token annotation punctuation">@Test</span> <span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"simple"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">simpleAssume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">assumeTrue</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>environment<span class="token punctuation">,</span> <span class="token string">"DEV"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">assumeFalse</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Objects<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>environment<span class="token punctuation">,</span> <span class="token string">"PROD"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>     <span class="token comment" spellcheck="true">//ssumingThat 的参数是表示条件的布尔值和对应的 Executable 接口的实现对象。只有条件满足时，Executable 对象才会被执行；当条件不满足时，测试执行并不会终止。</span> <span class="token annotation punctuation">@Test</span> <span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"assume then do"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">assumeThenDo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">assumingThat</span><span class="token punctuation">(</span>       Objects<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>environment<span class="token punctuation">,</span> <span class="token string">"DEV"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"In DEV"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="嵌套测试"><a href="#嵌套测试" class="headerlink" title="嵌套测试"></a>嵌套测试</h5><p>通过 Java 中的内部类和@Nested 注解实现嵌套测试，从而可以更好的把相关的测试方法组织在一起。在内部类中可以使用@BeforeEach 和@AfterEach 注解，而且嵌套的层次没有限制。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"A stack"</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">TestingAStackDemo</span> <span class="token punctuation">{</span>    Stack<span class="token operator">&lt;</span>Object<span class="token operator">></span> stack<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"is instantiated with new Stack()"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">isInstantiatedWithNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Nested</span>    <span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"when new"</span><span class="token punctuation">)</span>    <span class="token keyword">class</span> <span class="token class-name">WhenNew</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@BeforeEach</span>        <span class="token keyword">void</span> <span class="token function">createNewStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token annotation punctuation">@Test</span>        <span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"is empty"</span><span class="token punctuation">)</span>        <span class="token keyword">void</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">assertTrue</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token annotation punctuation">@Test</span>        <span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"throws EmptyStackException when popped"</span><span class="token punctuation">)</span>        <span class="token keyword">void</span> <span class="token function">throwsExceptionWhenPopped</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">assertThrows</span><span class="token punctuation">(</span>EmptyStackException<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> stack<span class="token operator">:</span><span class="token operator">:</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token annotation punctuation">@Test</span>        <span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"throws EmptyStackException when peeked"</span><span class="token punctuation">)</span>        <span class="token keyword">void</span> <span class="token function">throwsExceptionWhenPeeked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">assertThrows</span><span class="token punctuation">(</span>EmptyStackException<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> stack<span class="token operator">:</span><span class="token operator">:</span>peek<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token annotation punctuation">@Nested</span>        <span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"after pushing an element"</span><span class="token punctuation">)</span>        <span class="token keyword">class</span> <span class="token class-name">AfterPushing</span> <span class="token punctuation">{</span>            String anElement <span class="token operator">=</span> <span class="token string">"an element"</span><span class="token punctuation">;</span>            <span class="token annotation punctuation">@BeforeEach</span>            <span class="token keyword">void</span> <span class="token function">pushAnElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>anElement<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Test</span>            <span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"it is no longer empty"</span><span class="token punctuation">)</span>            <span class="token keyword">void</span> <span class="token function">isNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">assertFalse</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Test</span>            <span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"returns the element when popped and is empty"</span><span class="token punctuation">)</span>            <span class="token keyword">void</span> <span class="token function">returnElementWhenPopped</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">assertEquals</span><span class="token punctuation">(</span>anElement<span class="token punctuation">,</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">assertTrue</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Test</span>            <span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"returns the element when peeked but remains not empty"</span><span class="token punctuation">)</span>            <span class="token keyword">void</span> <span class="token function">returnElementWhenPeeked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">assertEquals</span><span class="token punctuation">(</span>anElement<span class="token punctuation">,</span> stack<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">assertFalse</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结论: 外部类不能访问内部类,而内部类可以访问外部类.</p><h5 id="参数化测试"><a href="#参数化测试" class="headerlink" title="参数化测试"></a>参数化测试</h5><p><strong>@ValueSource</strong>: 为参数化测试指定入参来源，支持八大基础类以及String类型,Class类型</p><p><strong>@NullSource</strong>: 表示为参数化测试提供一个null的入参</p><p><strong>@EnumSource</strong>: 表示为参数化测试提供一个枚举入参</p><p><strong>@CsvFileSource</strong>：表示读取指定CSV文件内容作为参数化测试入参</p><p><strong>@MethodSource</strong>：表示读取指定方法的返回值作为参数化测试入参(注意方法返回需要是一个流)</p><p>可以支持外部的各类入参, 如:CSV,YML,JSON 文件甚至方法的返回值也可以作为入参。只需要去实现<strong>ArgumentsProvider</strong>接口，任何外部文件都可以作为它的入参。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@ParameterizedTest</span><span class="token annotation punctuation">@ValueSource</span><span class="token punctuation">(</span>strings <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"one"</span><span class="token punctuation">,</span> <span class="token string">"two"</span><span class="token punctuation">,</span> <span class="token string">"three"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"参数化测试1"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">parameterizedTest1</span><span class="token punctuation">(</span>String string<span class="token punctuation">)</span> <span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>    Assertions<span class="token punctuation">.</span><span class="token function">assertTrue</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@ParameterizedTest</span><span class="token annotation punctuation">@MethodSource</span><span class="token punctuation">(</span><span class="token string">"method"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//指定方法名</span><span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">"方法来源参数"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testWithExplicitLocalMethodSource</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    Assertions<span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">static</span> Stream<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> Stream<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">"apple"</span><span class="token punctuation">,</span> <span class="token string">"banana"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="迁移指南"><a href="#迁移指南" class="headerlink" title="迁移指南"></a>迁移指南</h5><ol><li>导入Vintage兼容包</li><li>修改相关注解,具体如下</li></ol><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.junit.vintage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit-vintage-engine<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.hamcrest<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hamcrest-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在进行迁移的时候需要注意如下的变化：</p><ul><li>注解在 org.junit.jupiter.api 包中，断言在 org.junit.jupiter.api.Assertions 类中，前置条件在 org.junit.jupiter.api.Assumptions 类中。</li><li>把@Before 和@After 替换成@BeforeEach 和@AfterEach。</li><li>把@BeforeClass 和@AfterClass 替换成@BeforeAll 和@AfterAll。</li><li>把@Ignore 替换成@Disabled。</li><li>把@Category 替换成@Tag。</li><li>把@RunWith、@Rule 和@ClassRule 替换成@ExtendWith</li></ul><h3 id="指标监控"><a href="#指标监控" class="headerlink" title="指标监控"></a>指标监控</h3><p>未来每一个微服务在云上部署以后，我们都需要对其进行监控、追踪、审计、控制等。SpringBoot就抽取了Actuator场景，使得我们每个微服务快速引用即可获得生产级别的应用监控、审计等功能。</p><h5 id="集成"><a href="#集成" class="headerlink" title="集成"></a>集成</h5><pre class="line-numbers language-xml"><code class="language-xml">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p>自定义配置属性</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">management</span><span class="token punctuation">:</span>  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>    <span class="token key atrule">enabled-by-default</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">#暴露所有端点信息</span>    <span class="token key atrule">web</span><span class="token punctuation">:</span>      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">'*'</span>  <span class="token comment" spellcheck="true">#以web方式暴露,默认是通过jconsole</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问 <a href="http://localhost:8080/actuator/">http://localhost:8080/actuator/</a>**</p><p>最常用的Endpoint</p><ul><li><strong>Health：监控状况</strong></li><li><strong>Metrics：运行时指标</strong></li><li><strong>Loggers：日志记录</strong></li></ul><h5 id="管理Endpoints"><a href="#管理Endpoints" class="headerlink" title="管理Endpoints"></a>管理Endpoints</h5><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">management</span><span class="token punctuation">:</span>  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>    <span class="token key atrule">enabled-by-default</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#设置默认关闭所有</span>  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#手动开启指定的Endpoint</span>    <span class="token key atrule">beans</span><span class="token punctuation">:</span>      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">health</span><span class="token punctuation">:</span>      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="定制-Endpoint"><a href="#定制-Endpoint" class="headerlink" title="定制 Endpoint"></a>定制 Endpoint</h5><h6 id="定制Health"><a href="#定制Health" class="headerlink" title="定制Health"></a>定制Health</h6><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>health<span class="token punctuation">.</span>Health<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>health<span class="token punctuation">.</span>HealthIndicator<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyHealthIndicator</span> <span class="token keyword">implements</span> <span class="token class-name">HealthIndicator</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Health <span class="token function">health</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> errorCode <span class="token operator">=</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// perform some specific health check</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>errorCode <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> Health<span class="token punctuation">.</span><span class="token function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">"Error Code"</span><span class="token punctuation">,</span> errorCode<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> Health<span class="token punctuation">.</span><span class="token function">up</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>构建HealthHealth build <span class="token operator">=</span> Health<span class="token punctuation">.</span><span class="token function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> <span class="token string">"error service"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">,</span> <span class="token string">"500"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withException</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="显示模块详细信息"><a href="#显示模块详细信息" class="headerlink" title="显示模块详细信息"></a>显示模块详细信息</h6><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">management</span><span class="token punctuation">:</span>    <span class="token key atrule">health</span><span class="token punctuation">:</span>      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">show-details</span><span class="token punctuation">:</span> always <span class="token comment" spellcheck="true">#总是显示详细信息。可显示每个模块的状态信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h6 id="定制info"><a href="#定制info" class="headerlink" title="定制info"></a>定制info</h6><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Collections<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>info<span class="token punctuation">.</span>Info<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>info<span class="token punctuation">.</span>InfoContributor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExampleInfoContributor</span> <span class="token keyword">implements</span> <span class="token class-name">InfoContributor</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contribute</span><span class="token punctuation">(</span>Info<span class="token punctuation">.</span>Builder builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>        builder<span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">"example"</span><span class="token punctuation">,</span>                Collections<span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">,</span> <span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">info</span><span class="token punctuation">:</span>  <span class="token key atrule">appName</span><span class="token punctuation">:</span> boot<span class="token punctuation">-</span>admin  <span class="token key atrule">version</span><span class="token punctuation">:</span> 2.0.1  <span class="token key atrule">mavenProjectName</span><span class="token punctuation">:</span> @project.artifactId@  <span class="token comment" spellcheck="true">#使用@@可以获取maven的pom文件值</span>  <span class="token key atrule">mavenProjectVersion</span><span class="token punctuation">:</span> @project.version@<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="定制Metrics信息"><a href="#定制Metrics信息" class="headerlink" title="定制Metrics信息"></a>定制Metrics信息</h6><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">MyService</span><span class="token punctuation">{</span>    Counter counter<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">MyService</span><span class="token punctuation">(</span>MeterRegistry meterRegistry<span class="token punctuation">)</span><span class="token punctuation">{</span>         counter <span class="token operator">=</span> meterRegistry<span class="token punctuation">.</span><span class="token function">counter</span><span class="token punctuation">(</span><span class="token string">"myservice.method.running.counter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        counter<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//也可以使用下面的方式</span><span class="token annotation punctuation">@Bean</span>MeterBinder <span class="token function">queueSize</span><span class="token punctuation">(</span>Queue queue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>registry<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Gauge<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token string">"queueSize"</span><span class="token punctuation">,</span> queue<span class="token operator">:</span><span class="token operator">:</span>size<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="自定义Endpoint"><a href="#自定义Endpoint" class="headerlink" title="自定义Endpoint"></a>自定义Endpoint</h6><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Endpoint</span><span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token string">"container"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DockerEndpoint</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@ReadOperation</span>    <span class="token keyword">public</span> Map <span class="token function">getDockerInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> Collections<span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">"info"</span><span class="token punctuation">,</span><span class="token string">"docker started..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@WriteOperation</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">restartDocker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"docker restarted...."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="第三方可视化界面集成"><a href="#第三方可视化界面集成" class="headerlink" title="第三方可视化界面集成"></a>第三方可视化界面集成</h5><p><a href="https://github.com/codecentric/spring-boot-admin">项目地址</a>, 具体操作可参考官网说明.</p><h3 id="Profile"><a href="#Profile" class="headerlink" title="Profile"></a>Profile</h3><h5 id="配置文件方式"><a href="#配置文件方式" class="headerlink" title="配置文件方式"></a>配置文件方式</h5><ul><li>默认配置文件 application.properties/application.yaml, 任何时候都会加载</li><li>指定环境配置文件 application-{env}.yaml, 环境名字自定义</li><li>激活指定环境</li></ul><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token attr-value">dev</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>默认配置与环境配置同时生效,如果都配置了同一配置项,则指定环境配置优先</p></li><li><p>命令行修改指定配置项,可修改任意值,优先级高于配置文件</p></li></ul><pre><code>java -jar xxx.jar --spring.profiles.active=prod  --person.name=haha</code></pre><h5 id="Profile条件装配功能"><a href="#Profile条件装配功能" class="headerlink" title="@Profile条件装配功能"></a>@Profile条件装配功能</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span><span class="token string">"person"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//指定配置文件中配置项</span><span class="token annotation punctuation">@Profile</span><span class="token punctuation">(</span><span class="token string">"dev"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//指定生效的环境</span><span class="token annotation punctuation">@component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProductionConfiguration</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ...</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="批量加载-profile分组"><a href="#批量加载-profile分组" class="headerlink" title="批量加载 profile分组"></a>批量加载 profile分组</h5><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">spring.profiles.group.production[0]</span><span class="token punctuation">=</span><span class="token attr-value">proddb</span><span class="token attr-name">spring.profiles.group.production[1]</span><span class="token punctuation">=</span><span class="token attr-value">prodmq</span><span class="token attr-name">spring.profiles.group.test[0]</span><span class="token punctuation">=</span><span class="token attr-value">test0</span><span class="token comment" spellcheck="true">#使用：#激活production组</span><span class="token attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token attr-value">production</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="配置文件优先级"><a href="#配置文件优先级" class="headerlink" title="配置文件优先级"></a>配置文件优先级</h5><p>(1) classpath 根路径</p><p>(2) classpath 根路径下config目录</p><p>(3) jar包当前目录</p><p>(4) jar包当前目录的config目录</p><p>(5) /config子目录的直接子目录</p><p>此优先级与逐渐增加, 越后面的优先级越高, 指定环境优先，外部优先，后面的可以覆盖前面的同名配置项</p><h3 id="自定义starter"><a href="#自定义starter" class="headerlink" title="自定义starter"></a>自定义starter</h3><h5 id="starter的启动原理"><a href="#starter的启动原理" class="headerlink" title="starter的启动原理"></a>starter的启动原理</h5><ul><li><p>stater-pom引入autoConfigurer包,</p></li><li><p>autoconfigure包中配置使用 META-INF/spring.factories 中 EnableAutoConfiguration 的值，使得项目启动加载指定的自动配置类</p></li><li><p><strong>编写自动配置类 xxxAutoConfiguration -&gt; xxxxProperties</strong></p><ul><li><strong>@Configuration</strong></li><li><strong>@Conditional</strong></li><li><strong>@EnableConfigurationProperties</strong></li><li><strong>@Bean</strong></li><li>……</li></ul></li></ul><p><strong>引入starter</strong> <strong>— xxxAutoConfiguration — 容器中放入组件 —- 绑定xxxProperties —-</strong> <strong>配置项</strong></p><h5 id="自定义步骤"><a href="#自定义步骤" class="headerlink" title="自定义步骤"></a>自定义步骤</h5><ul><li>新建一个starter工程,命名为xxx–spring-boot-starter</li><li>新建一个xxx–spring-boot-starter-autoconfigure 的module,并让starter依赖它</li><li>编写功能类, 绑定配置文件,并标注生效的条件.</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//绑定配置文件</span><span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span>PersonProperties<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@ConditionalOnBean</span><span class="token punctuation">(</span>PersonService<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Bean</span><span class="token comment" spellcheck="true">//添加组件bean, 方法名=id=组件名, 返回类型=组件类型,返回值=容器中保存的实例</span>    <span class="token keyword">public</span> PersonService <span class="token function">personService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PersonService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span><span class="token string">"com.person"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token comment" spellcheck="true">// lambok的set,get注解</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PersoonProperties</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>创建META-INF/spring.factories ,配置EnableAutoConfiguration 的值,即autoconfiguration的完整类路径.</p></li><li><p>发布到maven仓库.  执行 maven–&gt;install命令</p></li></ul><h3 id="SpringBoot原理解析"><a href="#SpringBoot原理解析" class="headerlink" title="SpringBoot原理解析"></a>SpringBoot原理解析</h3><h4 id="SpringBoot的启动分析"><a href="#SpringBoot的启动分析" class="headerlink" title="SpringBoot的启动分析"></a>SpringBoot的启动分析</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//run方法执行, 先创建后运行</span><span class="token keyword">new</span> <span class="token class-name">SpringApplication</span><span class="token punctuation">(</span>primarySources<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//对象初始化</span><span class="token keyword">public</span> <span class="token function">SpringApplication</span><span class="token punctuation">(</span>ResourceLoader resourceLoader<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> primarySources<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>resourceLoader <span class="token operator">=</span> resourceLoader<span class="token punctuation">;</span>        Assert<span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>primarySources<span class="token punctuation">,</span> <span class="token string">"PrimarySources must not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>primarySources <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>primarySources<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>webApplicationType <span class="token operator">=</span> WebApplicationType<span class="token punctuation">.</span><span class="token function">deduceFromClasspath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>bootstrapRegistryInitializers <span class="token operator">=</span> <span class="token function">getBootstrapRegistryInitializersFromSpringFactories</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setInitializers</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Collection<span class="token punctuation">)</span> <span class="token function">getSpringFactoriesInstances</span><span class="token punctuation">(</span>ApplicationContextInitializer<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setListeners</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Collection<span class="token punctuation">)</span> <span class="token function">getSpringFactoriesInstances</span><span class="token punctuation">(</span>ApplicationListener<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>mainApplicationClass <span class="token operator">=</span> <span class="token function">deduceMainApplicationClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>创建SpringApplication对象<ul><li>初始化一些变量与信息</li><li>判断当前应用的类型(响应式还是原生servlet,根据DispatcherHandler类型判断)</li><li>初始启动引导器<strong>bootstrapRegistryInitializers</strong>, 去spring.factories文件中找 org.springframework.boot.Bootstrapper</li><li>初始化 <strong>initializers</strong>, 去<strong>spring.factories</strong>查找</li><li>初始化<strong>ApplicationListener</strong> ,去<strong>spring.factories</strong>查找</li></ul></li><li>运行SpringApplication</li></ol><ul><li><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> ConfigurableApplicationContext <span class="token function">run</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        StopWatch stopWatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StopWatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//1. 记录应用的启动时间</span>        stopWatch<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//2.创建引导上下文(Context环境), 让之前获取的启动引导bootstrapRegistryInitializers执行initialize方法</span>        DefaultBootstrapContext bootstrapContext <span class="token operator">=</span> <span class="token function">createBootstrapContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ConfigurableApplicationContext context <span class="token operator">=</span> null<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//3.让当前应用进入headless模式.无需显示器也能运行</span>        <span class="token function">configureHeadlessProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//4.去spring.factories找 SpringApplicationRunListener</span>        SpringApplicationRunListeners listeners <span class="token operator">=</span> <span class="token function">getRunListeners</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//5遍历 SpringApplicationRunListener 调用 starting 方法；告诉监听者项目正在启动</span>        listeners<span class="token punctuation">.</span><span class="token function">starting</span><span class="token punctuation">(</span>bootstrapContext<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainApplicationClass<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//6. 保存命令行参数</span>            ApplicationArguments applicationArguments <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultApplicationArguments</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//7 准备运行环境</span>                <span class="token comment" spellcheck="true">//a.根据webApplicationType返回当前应用的运行环境, 默认StandardServletEnvironment</span>                <span class="token comment" spellcheck="true">//b.配置环境信息, 读取所有配置源的属性值</span>                <span class="token comment" spellcheck="true">//c. 绑定环境信息</span>                <span class="token comment" spellcheck="true">//d.监听器调用 listener.environmentPrepared()；通知所有的监听器当前环境准备完成</span>            ConfigurableEnvironment environment <span class="token operator">=</span> <span class="token function">prepareEnvironment</span><span class="token punctuation">(</span>listeners<span class="token punctuation">,</span> bootstrapContext<span class="token punctuation">,</span> applicationArguments<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">configureIgnoreBeanInfo</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//8. 打印banner</span>            Banner printedBanner <span class="token operator">=</span> <span class="token function">printBanner</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//9 创建IOC容器</span>            context <span class="token operator">=</span> <span class="token function">createApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">setApplicationStartup</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationStartup<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//准备ApplicationContext IOC容器的基本信息</span>                <span class="token comment" spellcheck="true">//a.保存环境信息</span>                <span class="token comment" spellcheck="true">//b.IOC容器的后置处理流程。</span>                <span class="token comment" spellcheck="true">//c.应用初始器applyInitializers</span>                <span class="token comment" spellcheck="true">//遍历所有的 ApplicationContextInitializer 。调用 initialize.。来对ioc容器进行初始化扩展功能</span>            `    <span class="token comment" spellcheck="true">//遍历所有的 listener 调用 contextPrepared。EventPublishRunListenr；通知所有的监听器contextPrepared</span>                <span class="token comment" spellcheck="true">//所有的监听器 调用 contextLoaded。通知所有的监听器 contextLoaded；</span>            <span class="token function">prepareContext</span><span class="token punctuation">(</span>bootstrapContext<span class="token punctuation">,</span> context<span class="token punctuation">,</span> environment<span class="token punctuation">,</span> listeners<span class="token punctuation">,</span> applicationArguments<span class="token punctuation">,</span> printedBanner<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//刷新IOC容器。refreshContext,创建容器中的所有组件</span>            <span class="token function">refreshContext</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//通知IOC容器刷新完成</span>            <span class="token function">afterRefresh</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> applicationArguments<span class="token punctuation">)</span><span class="token punctuation">;</span>            stopWatch<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logStartupInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">new</span> <span class="token class-name">StartupInfoLogger</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mainApplicationClass<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">logStarted</span><span class="token punctuation">(</span><span class="token function">getApplicationLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> stopWatch<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//所有监听 器 调用 listeners.started(context); 通知所有的监听器 started</span>            listeners<span class="token punctuation">.</span><span class="token function">started</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//调用所有的runners,比如ApplicationRunner,CommandLineRunner然后合并</span>            <span class="token function">callRunners</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> applicationArguments<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//调用所有 Listener 的 failed；通知所有的监听器 failed</span>            <span class="token function">handleRunFailure</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> ex<span class="token punctuation">,</span> listeners<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//执行run方法</span>            listeners<span class="token punctuation">.</span><span class="token function">running</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">handleRunFailure</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> ex<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> context<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>补充资料: </p><ul><li> <a href="http://jimolonely.github.io/2019/03/26/java/039-java-headless/">Headless模式</a></li><li><a href="https://blog.csdn.net/zzb5682119/article/details/92796522">configureHeadlessProperty()方法</a></li></ul><h4 id="自定义监听器"><a href="#自定义监听器" class="headerlink" title="自定义监听器"></a>自定义监听器</h4><ul><li><p>spring.factories 配置文件配置</p><ul><li>ApplicationContextInitializer</li><li>ApplicationListener</li><li>SpringApplicationRunListener</li></ul></li><li><p>使用@component放置容器中即可</p><ul><li>ApplicationRunner </li><li>CommandLineRunner</li></ul></li></ul><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://i.loli.net/2021/06/09/5USkdeLfapHmOKI.png" alt="image-20210609153803237"><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://i.loli.net/2021/06/09/ZJlcVBCYFWota5K.png" alt="image-20210609153836237"></p>]]></content>
      
      
      <categories>
          
          <category> 开发教程 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小灰灰算法之旅笔记</title>
      <link href="2021/01/15/xiao-hui-de-suan-fa-zhi-lu-bi-ji/"/>
      <url>2021/01/15/xiao-hui-de-suan-fa-zhi-lu-bi-ji/</url>
      
        <content type="html"><![CDATA[<blockquote><p>来源书籍: 小灰的算法之旅</p><p>语言: Java</p></blockquote><h3 id="数据结构与算法"><a href="#数据结构与算法" class="headerlink" title="数据结构与算法"></a>数据结构与算法</h3><h4 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h4><h5 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h5><blockquote><p>数据结构是数据的组织、管理和存储格式包括以下常见的结构</p></blockquote><ul><li>线性结构</li><li>树</li><li>图</li><li>其它数据结构</li></ul><h5 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h5><blockquote><p>算法是一系列程序指令，用于处理特定的运算和逻辑问题。衡量算法优劣的主要标准是时间复杂度和空间复杂度。</p></blockquote><h6 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h6><blockquote><p>若存在函数f(n)，使得当n趋近于无穷大时，T(n)/f(n)的极限值为不等于零的常数，则称f(n)是T(n)的同数量级函数。记作T(n)=O(f(n))，称为O(f(n))，O为算法的渐进时间复杂度，简称为时间复杂度。只保留最高阶项,常数记为1.</p><p>大白话: 程序执行的时间成本</p></blockquote><h6 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h6><blockquote><p>程序占用的空间大小</p></blockquote><h4 id="线性数据结构"><a href="#线性数据结构" class="headerlink" title="线性数据结构"></a>线性数据结构</h4><h5 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h5><blockquote><p>有限个相同类型的变量所组成的有序集合,每个变量被称作为元素.</p></blockquote><h6 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h6><ul><li><p>增: 随机插入(O(n)),尾部插入(O(1)),越界插入(先扩容,再插入,时间复杂度O(n));</p></li><li><p>删:  随机删除(O(n)),尾部删除(O(1))</p></li><li><p>改: 时间复杂度O(1);</p></li><li><p>查: 时间复杂度O(1);</p></li></ul><h6 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h6><p>快速查找,但是写入慢.</p><h5 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h5><h6 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h6><p>在物理上非连续、非顺序的数据结构，由若干节点（node）所组成。</p><h6 id="单向链表"><a href="#单向链表" class="headerlink" title="单向链表"></a>单向链表</h6><p>每一个节点又包含两部分，一部分是存放数据的变量data，另一部分是指向下一个节点的指针next</p><h6 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h6><p>每一个节点除了拥有data和next指针，还拥有指向前置节点的prev 指针</p><h6 id="常用操作-1"><a href="#常用操作-1" class="headerlink" title="常用操作"></a>常用操作</h6><ul><li>增: 时间复杂度O(1),</li><li>删: 时间复杂度O(1),</li><li>改: 不考虑查找时间,单纯更新,时间复杂度O(1)</li><li>查 : 从第一个节点的指针开始遍历下一个节点,直到找到所需要的元素. 时间复杂度O(n)</li></ul><h5 id="栈-stack"><a href="#栈-stack" class="headerlink" title="栈(stack)"></a>栈(stack)</h5><p>一种线性数据结构; 先入后出  （First   In   Last   Out，简称FILO）,既可以用数组来实现，也可以用链表来实现.</p><h6 id="常见操作"><a href="#常见操作" class="headerlink" title="常见操作"></a>常见操作</h6><ul><li>入栈 : 增加一个元素</li><li>出栈 : 将栈顶元素弹出</li></ul><h6 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h6><ul><li><p>回溯方法的调用链。比如递归调用</p></li><li><p>面包屑导航, 返回上一级页面</p></li></ul><h5 id="队列-queue"><a href="#队列-queue" class="headerlink" title="队列(queue)"></a>队列(queue)</h5><p>一种先入先出 （First   InFirst  Out，简称FIFO ）的线性数据结构,出口叫头,入口叫尾(rear). 与栈类似，队列这种数据结构既可以用数组来实现，也可以用链表来实现。</p><h6 id="常见操作-1"><a href="#常见操作-1" class="headerlink" title="常见操作"></a>常见操作</h6><ul><li><p>入队: 是把新元素放入队尾的位置，新元素的下一个位置将会成为新的队尾。</p></li><li><p>出队 : 将队头的元素移出,其下一个元素将成为新的队头.</p></li></ul><h6 id="队列的实现"><a href="#队列的实现" class="headerlink" title="队列的实现"></a>队列的实现</h6><p>定容数组通过循环实现.  队尾指针指向的位置永远空出1位，所以队列最大容量比数组长度小1。</p><p>判断队列是否已满:</p><ul><li>一种是另设一个布尔变量来判断；</li><li>第二种是少用一个元素空间，入队时先测试（(rear+1)%size = front）来测试满了还是还有空间；</li><li>第三种就是用一个计数器记录队列中的元素的总数。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/tadpole145/images/main/image-20210419144504569.png" alt="image-20210419144504569"></p><h6 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h6><ul><li>多线程中，争夺公平锁的等待队列</li><li>网络爬虫实现网站抓取时，也是把待抓取的网站URL存入队列中</li></ul><h5 id="双端队列-Double-ended-queue，简称为Deque"><a href="#双端队列-Double-ended-queue，简称为Deque" class="headerlink" title="双端队列( Double-ended queue，简称为Deque)"></a>双端队列( Double-ended queue，简称为Deque)</h5><p>前端与后端都支持插入和删除操作的队列. </p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/tadpole145/images/main/image-20210419152101714.png" alt="image-20210419152101714"></p><h6 id="应用-2"><a href="#应用-2" class="headerlink" title="应用"></a>应用</h6><p>存储一系列的撤销操作</p><h5 id="优先队列"><a href="#优先队列" class="headerlink" title="优先队列"></a>优先队列</h5><p>谁的优先级最高，谁先出队。基于于二叉堆来实现.</p><h5 id="散列表-哈希表"><a href="#散列表-哈希表" class="headerlink" title="散列表(哈希表 )"></a>散列表(哈希表 )</h5><p>通过key–value键值对来存储查找元素. 其本质也是一个数组,只是通过哈希函数,将Key和数组下标进行转换.不同的语言中,哈希函数的实现是不一样的.每一个对象都有属于自己的hashcode，这个hashcode是区分不同对象的重要标识。无论对象自身的类型是什么，它们的hashcode都是一个整型变量。</p><h6 id="什么是hash"><a href="#什么是hash" class="headerlink" title="什么是hash"></a>什么是hash</h6><p>Hash（哈希），又称“散列”。散列（hash）英文原意是“混杂”、“拼凑”、“重新表述”的意思。在某种程度上，散列是与排序相反的一种操作，排序是将集合中的元素按照某种方式比如字典顺序排列在一起，而散列通过计算哈希值，打破元素之间原有的关系，使集合中的元素按照散列函数的分类进行排列。 散列表可以说是数组和链表的结合</p><p> hashCode() 表示的是对当前对象的唯一标示。计算 hashCode 的过程就称作 哈希。</p><h6 id="为什么要有-Hash"><a href="#为什么要有-Hash" class="headerlink" title="为什么要有 Hash"></a>为什么要有 Hash</h6><p>我们通常使用数组或者链表来存储元素，一旦存储的内容数量特别多，需要占用很大的空间，而且在<strong>查找某个元素</strong>是否存在的过程中，数组和链表都需要挨个循环比较，而通过 哈希 计算，可以大大<strong>减少比较次数</strong>。</p><h6 id="哈希函数"><a href="#哈希函数" class="headerlink" title="哈希函数"></a>哈希函数</h6><p>一种映射关系，根据数据的关键词 key ，通过一定的函数关系，计算出该元素存储位置的函数</p><h6 id="常见的哈希函数构造方法"><a href="#常见的哈希函数构造方法" class="headerlink" title="常见的哈希函数构造方法"></a>常见的哈希函数构造方法</h6><ul><li>直接定址法</li></ul><p>取关键字或关键字的某个线性函数值为散列地址。即 H(key) = key 或 H(key) = a*key + b，其中a和b为常数</p><ul><li>除留余数法</li></ul><p>取关键字被某个不大于散列表长度 m 的数 p 求余，得到的作为散列地址。即 H(key) = key % p, p &lt; m。 </p><ul><li>数字分析法</li></ul><p>当关键字的位数大于地址的位数，对关键字的各位分布进行分析，选出分布均匀的任意几位作为散列地址。仅适用于所有关键字都已知的情况下，根据实际应用确定要选取的部分，尽量避免发生冲突。</p><ul><li>平方取中法</li></ul><p>先计算出关键字值的平方，然后取平方值中间几位作为散列地址。随机分布的关键字，得到的散列地址也是随机分布的。</p><ul><li>折叠法（叠加法）</li></ul><p>将关键字分为位数相同的几部分，然后取这几部分的叠加和（舍去进位）作为散列地址。用于关键字位数较多，并且关键字中每一位上数字分布大致均匀。</p><ul><li>随机数法</li></ul><p>选择一个随机函数，把关键字的随机函数值作为它的哈希值。</p><h6 id="哈希冲突的解决"><a href="#哈希冲突的解决" class="headerlink" title="哈希冲突的解决"></a>哈希冲突的解决</h6><ul><li>链接法（拉链法）</li></ul><p>将所有关键字为同义词的结点链接在同一个单链表中。</p><ul><li>==开放定址法==</li></ul><p>使用某种探查(亦称探测)技术在散列表中寻找下一个空的散列地址，只要散列表足够大，空的散列地址总能找到。在Java中，ThreadLocal所使用的就是开放寻址法。</p><ul><li>==链表法== (java中的hashMap使用此法)</li></ul><p>HashMap数组的每一个元素不仅是一个Entry对象，还是一个链表的头节点。每一个Entry对象通过next指针指向它的下一个Entry节点。当新来的Entry映射到与之冲突的数组位置时，只需要插入到对应的链表中即可。</p><p>当经过多次元素插入，散列表达到一定饱和度时，Key映射位置发生冲突的概率会逐渐提高。大量元素拥挤在相同的数组下标位置，形成很长的链表，对后续插入操作和查询操作的性能都有很大影响。这时就需要对散列表进行扩容.</p><p>对HashMap来说,影响扩容的影子有2个:</p><ul><li>Capacity ，即HashMap的当前长度</li><li>LoadFactor ，即HashMap的负载因子，默认值为0.75f</li></ul><h6 id="如今扩容"><a href="#如今扩容" class="headerlink" title="如今扩容?"></a>如今扩容?</h6><ul><li>创建一个新的Entry空数组，长度是原数组的2倍。</li><li>重新Hash. 遍历原Entry数组，把所有的Entry重新Hash到新数组中。为什么要重新Hash呢？因为长度扩大以后，Hash的规则也随之改变。</li></ul><p>JDK    8和以前的版本有着很大的不同。当多个Entry被Hash到同一个数组下标位置时，为了提升插入和查找的效率，HashMap会把Entry的链表转化为红黑树这种数据结构。</p><h6 id="哈希的应用"><a href="#哈希的应用" class="headerlink" title="哈希的应用"></a>哈希的应用</h6><ul><li>哈希表</li><li>分布式缓存</li></ul><h4 id="树"><a href="#树" class="headerlink" title="树"></a>树</h4><h5 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h5><p>树（tree）是n（n≥0）个节点的有限集。当n=0时，称为空树。</p><p>根节点: 没有父节点的节点</p><p>叶子节点: 没有孩子的节点</p><p>树的高度/深度: 树的最大层级数</p><h5 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h5><p>树的一种特殊形式,每个节点最多有2个孩子节点.</p><p><strong>满二叉树</strong>: 所有非叶子节点都存在左右孩子，并且所有叶子节点都在同一层级上，那么这个树就是满二叉树。<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/tadpole145/images/main/image-20210420170501412.png" alt="image-20210420170501412"></p><p><strong>完全二叉树</strong>:  一棵深度为k的有n个结点的二叉树，对树中的结点按从上至下、从左到右的顺序进行编号，如果编号为i（1≤i≤n）的结点与满二叉树中编号为i的结点在二叉树中的位置相同，则这棵二叉树称为完全二叉树</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/tadpole145/images/main/image-20210420171721108.png" alt="image-20210420171721108"></p><h6 id="二叉树的表达"><a href="#二叉树的表达" class="headerlink" title="二叉树的表达"></a>二叉树的表达</h6><p>其属于逻辑结构,即可用数组来表达,也可以使用链表来表达.</p><h6 id="应用-3"><a href="#应用-3" class="headerlink" title="应用"></a>应用</h6><ul><li><p>进行查找操作</p></li><li><p>维持相对顺序</p></li></ul><p><strong>二叉查找树(二叉排序树):</strong> </p><ul><li>如果左子树不为空，则左子树上所有节点的值均小于根节点的值</li><li>如果右子树不为空，则右子树上所有节点的值均大于根节点的值</li><li>左、右子树也都是二叉查找树</li></ul><p>对于一个节点分布相对均衡  的二叉查找树来说，如果节点总数是n，那么搜索节点的时间复杂度就是O(logn) ，和树的深度是一样的。它和二分查找算法非常相似。</p><h5 id="二叉树的遍历"><a href="#二叉树的遍历" class="headerlink" title="二叉树的遍历"></a>二叉树的遍历</h5><p>遍历本身是一个线性操作。但是二叉树是非线性结构,以不同的方式遍历,遍历顺序也不一样.一般分为以下几种:</p><ul><li>深度优先遍历<ul><li>前序遍历。</li><li>中序遍历。</li><li>后序遍历。</li></ul></li><li>广度优先遍历<ul><li>层序遍历。</li></ul></li></ul><h6 id="前序遍历—-中左右"><a href="#前序遍历—-中左右" class="headerlink" title="前序遍历— 中左右"></a>前序遍历— 中左右</h6><p>从根节点开始遍历,再到左孩子,接着到左孩子的左孩子,如果没有就遍历右孩子,再返回上一层级先左后右依次遍历.</p><h6 id="中序遍历—-左中右"><a href="#中序遍历—-左中右" class="headerlink" title="中序遍历— 左中右"></a>中序遍历— 左中右</h6><p>输出顺序是左子树、根节点、右子树;  首先访问根节点的左孩子，如果这个左孩子还拥有左孩子，则继续深入访问下去，一直找到不再有左孩子的节点，并输出该节点。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/tadpole145/images/main/image-20210421091054369.png" alt="image-20210421091054369"></p><h6 id="后续遍历—左右中"><a href="#后续遍历—左右中" class="headerlink" title="后续遍历—左右中"></a>后续遍历—左右中</h6><p>二叉树的后序遍历，输出顺序是左子树、右子树、根节点。先左右孩子后父亲</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/tadpole145/images/main/image-20210421092234719.png" alt="image-20210421092234719"></p><p>这3种遍历方式的==区别==，仅仅是==根节点输出的执行位置不同==：前序遍历的输出在前，中序遍历的输出在中间，后序遍历的输出在最后。</p><h6 id="遍历实现方式"><a href="#遍历实现方式" class="headerlink" title="遍历实现方式"></a>遍历实现方式</h6><ul><li><p>递归方法</p></li><li><p>栈</p></li></ul><h6 id="广度优先遍历方式—队列"><a href="#广度优先遍历方式—队列" class="headerlink" title="广度优先遍历方式—队列"></a>广度优先遍历方式—队列</h6><p>从根节点开始,先入队,后出队, 左孩子右孩子接着入队,如此循环直到结束.</p><h5 id="二叉堆"><a href="#二叉堆" class="headerlink" title="二叉堆"></a>二叉堆</h5><p>本质上是一种完全二叉树,分为</p><ul><li>最大堆: 最大堆的任何一个父节点的值，都大于或等于它左、右孩子节点的值。堆顶是整个堆中的最大元素</li><li>最小堆: 最小堆的任何一个父节点的值，都小于或等于它左、右孩子节点的值。堆顶是整个堆中的最小元素 。</li></ul><h6 id="二叉堆的构建"><a href="#二叉堆的构建" class="headerlink" title="二叉堆的构建"></a>二叉堆的构建</h6><ul><li>二叉堆插入节点: 将不符合的新节点与其父节点交换位置,直到符合为止.</li><li>二叉堆删除节点: 使用完全二叉树最底下的一个叶子节点替代被删除的节点,然后与其左右孩子进行比较后交换位置,直到符合要求为止.</li><li>非二叉堆构建二叉堆:  首先，从最后一个非叶子节点开始,与其左右孩子交换位置,逐层从右到左的进行动态交换,直到整棵树符合要求.</li></ul><h6 id="二叉堆的代码实现"><a href="#二叉堆的代码实现" class="headerlink" title="二叉堆的代码实现"></a>二叉堆的代码实现</h6><p>二叉堆虽然是一个完全二叉树，但它的存储方式并不是链式存储，而是顺序存储。二叉堆的所有节点都存储在数组中。</p><p>假设父节点的下标是parent，那么它的左孩子下标就是 2×parent+1 ；右孩子下标就是2×parent+2 。</p><h6 id="应用-4"><a href="#应用-4" class="headerlink" title="应用"></a>应用</h6><p> 二叉堆是实现堆排序  及优先队列的基础。</p><h5 id="优先队列-1"><a href="#优先队列-1" class="headerlink" title="优先队列"></a>优先队列</h5><ul><li>最大优先队列:  无论入队顺序如何，都是当前最大的元素优先出队</li><li>最小优先队列，无论入队顺序如何，都是当前最小的元素优先出队</li></ul><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><h6 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h6><p> <strong>按时间复杂度划分</strong></p><ul><li><p>时间复杂度O(n^2  )的排序算法</p><ul><li>冒泡排序</li><li>选择排序</li><li>插入排序</li><li>希尔排序</li></ul></li><li><p>时间复杂度O(nlogn)的排序算法</p><ul><li>快速排序</li><li>归并排序</li><li>堆排序</li></ul></li><li><p>时间复杂度为线性的排序算法</p><ul><li>计数排序</li><li>桶排序</li><li>基数排序</li></ul></li></ul><p><strong>按稳定性划分</strong></p><p>稳定排序: 排序前后,顺序保持不变.</p><h5 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h5><p>思想:循环遍历比较相邻元素,大的右移, 排序后相同的值顺序不变,属于稳定排序.</p><h6 id="冒泡排序的优化"><a href="#冒泡排序的优化" class="headerlink" title="冒泡排序的优化"></a>冒泡排序的优化</h6><ul><li>设置是否有序的flag,如果有序了,则直接跳出循环,遍历结束.</li><li>记录最后一次元素交换的位置,即为无序数列的边界,后面就是有序数列,无需排序.</li></ul><h5 id="鸡尾酒排序"><a href="#鸡尾酒排序" class="headerlink" title="鸡尾酒排序"></a>鸡尾酒排序</h5><p>思路: 第一轮从左到右,第二轮从右到左,如此循环直到有序,代码外层的大循环控制着所有排序回合，大循环内包含2个小循环，第1个小循环从左向右比较并交换元素，第2个小循环从右向左比较并交换元素。</p><ul><li>优点: 能够在特定条件下，减少排序的回合数；</li><li>缺点: 代码量几乎增加了1倍。</li></ul><p>它能发挥出优势的场景，是大部分元素已经有序的情况。</p><h5 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h5><h6 id="思想"><a href="#思想" class="headerlink" title="思想"></a>思想</h6><p>在每一轮挑选一个基准元素，并让其他比它大的元素移动到数列一边，比它小的元素移动到数列的另一边，从而把数列拆解成两个部分。</p><h6 id="基准元素的选取"><a href="#基准元素的选取" class="headerlink" title="基准元素的选取"></a>基准元素的选取</h6><ul><li>选择第一个元素</li><li>随机选一个元素, 和第一个元素交换位置</li></ul><h6 id="元素交换"><a href="#元素交换" class="headerlink" title="元素交换"></a>元素交换</h6><ul><li>双边循环法</li></ul><blockquote><p>设置left和right 2个指针,指向数列的最左和最右2个元素,第一次循环,从right指针开始,如果≥基准元素pivot,则指针向左移动一位直到条件不满足,否则停止移动,切换到left指针, 如果left≤pivot,则右移一位,否则停止移动.这时,让左右指针的元素交换.然后右指针左移一位,左指针右移一位,接着进入第二轮的循环重复第一轮步骤.直到左右指针重合,然后交换重合指针的元素与基准元素的位置,使之成为新的基准元素.</p><p>实现方式: 递归</p></blockquote><ul><li>单边循环法</li></ul><blockquote><p>选定第一个作为基准元素, 同时设置第一个元素为mark指针,它代表小于基准元素的区域边界.然后开始遍历,如果＞pivot,则继续遍历,如果＜pivot,则mark指针右移一位,然后让新遍历到的元素和mark指针处的元素交换位置,遍历完成后把pivot的元素和mark指针元素交换位置,第一轮结束. 然后以同样的方法,分别遍历刚刚分割好的2部分.</p><p>实现方式: 递归或者栈</p></blockquote><h5 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h5><h6 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h6><ol><li> 把无序数组构建成二叉堆。需要从小到大排序，则构建成最大堆；需要从大到小排序，则构建成最小堆。</li><li>循环删除堆顶元素，替换到二叉堆的末尾，调整堆产生新的堆顶。</li></ol><h6 id="快排与堆排序对比"><a href="#快排与堆排序对比" class="headerlink" title="快排与堆排序对比"></a>快排与堆排序对比</h6><table><thead><tr><th align="center"></th><th align="center">快排</th><th align="center">堆排</th></tr></thead><tbody><tr><td align="center">平均时间复杂度</td><td align="center">O(nlogn)</td><td align="center">O(nlogn)</td></tr><tr><td align="center">最坏时间复杂度</td><td align="center">O(n  2  )</td><td align="center">O(nlogn)</td></tr><tr><td align="center">空间复杂度</td><td align="center">O(logn)</td><td align="center">O(1)</td></tr><tr><td align="center">稳定性</td><td align="center">不稳定</td><td align="center">不稳定</td></tr></tbody></table><h5 id="线性时间排序"><a href="#线性时间排序" class="headerlink" title="线性时间排序"></a>线性时间排序</h5><h5 id="计数排序"><a href="#计数排序" class="headerlink" title="计数排序"></a>计数排序</h5><h6 id="实现思路-1"><a href="#实现思路-1" class="headerlink" title="实现思路"></a>实现思路</h6><p>以元素值为数组下标,以出现的次数为数组的元素.顺序遍历数组,没遍历一个元素则在与之对应的下标处的元素+1, 最后遍历新数组,按元素次数输出对应的下标.</p><p>它适用于一定范围内的整数排序。在取值范围不是很大的情况下，它的性<br>能甚至快过那些时间复杂度为O(nlogn)的排序。</p><h5 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h5><h6 id="实现思路-2"><a href="#实现思路-2" class="headerlink" title="实现思路"></a>实现思路</h6><ol><li>创建与数列等个数的桶;</li><li>确定每个桶的区间,最后一个桶只包含数列最大值外，前面各个桶的区间按照比例来确定, 区间跨度 = （最大值-最小值）/ （桶的数量 - 1）</li><li>对桶内部进行排序</li><li>遍历所有桶并输出</li></ol><h5 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/tadpole145/images/main/image-20210423102653611.png" alt="image-20210423102653611"></p><h4 id="面试关键算法问题"><a href="#面试关键算法问题" class="headerlink" title="面试关键算法问题"></a>面试关键算法问题</h4><h5 id="判断链表是否有环"><a href="#判断链表是否有环" class="headerlink" title="判断链表是否有环"></a>判断链表是否有环</h5><p>双指针方法: 数学上的追及问题,保证2个指针速度不一致,只要有环就可以追上.</p><table><thead><tr><th align="center"></th><th align="center">双层循环判断</th><th align="center">采用hashMap记录</th><th align="center">双指针方法</th></tr></thead><tbody><tr><td align="center">时间复杂度</td><td align="center">O(n^2)</td><td align="center">O(n)</td><td align="center">O(n)</td></tr><tr><td align="center">空间复杂度</td><td align="center">O(1)</td><td align="center">O(n)</td><td align="center">O(1)</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h5 id="如何求出环长"><a href="#如何求出环长" class="headerlink" title="如何求出环长"></a>如何求出环长</h5><p>数学的追及问题, 第一次相遇后,继续前行,第二次相遇,统计出的步长=环长, 因为二指针的速度是1倍的关系,当速度慢的走一圈,速度快的恰好走了2圈了.</p><h5 id="如何求入环点"><a href="#如何求入环点" class="headerlink" title="如何求入环点"></a>如何求入环点</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/tadpole145/images/main/image-20210425175232254.png" alt="image-20210425175232254"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/tadpole145/images/main/image-20210425175355372.png" alt="image-20210425175355372"></p><p>只要把其中一个指针放回到头节点位置，另一个指针保持在首次相遇点，两个指针都是每次向前走1步。那么，它们最终相遇的节点，就是入环节点。</p><h5 id="实现一个包含出栈（pop）、入栈（push）、取最小元素（getMin）3个方法时间复杂度为O-1-的栈"><a href="#实现一个包含出栈（pop）、入栈（push）、取最小元素（getMin）3个方法时间复杂度为O-1-的栈" class="headerlink" title="实现一个包含出栈（pop）、入栈（push）、取最小元素（getMin）3个方法时间复杂度为O(1)的栈."></a>实现一个包含出栈（pop）、入栈（push）、取最小元素（getMin）3个方法时间复杂度为O(1)的栈.</h5><p>思路: 创建2个栈,A为普通栈, B为辅助栈, 第一个元素,AB栈均入栈,第二个元素,A正常入栈,B则查看是否小于B的栈顶元素,＜则入栈,否则放弃, 当A出栈时,检查该元素是否是B中的最小,如果是则出栈,这样B一直存放的是A中的最小元素.</p><h5 id="求最大公约数"><a href="#求最大公约数" class="headerlink" title="求最大公约数"></a>求最大公约数</h5><p><strong>欧几里得算法</strong>: 两个正整数a和b（a&gt;b），它们的最大公约数等于a除以b的余数c和b之间的最大公约数。如果C=0,则b为公约数,否则通过递归,不断求取余数,直到最后为1.此时对应的被除数即为最大公约数.  </p><p><strong>缺点</strong>: 整数较大的时候,性能比较差</p><p><strong>更相减损术</strong>: 两个正整数a和b（a&gt;b），它们的最大公约数等于a-b的差值c和较小数b的最大公约数。如果c=0 ,那边b就为最大公约数,否则递归下去直到c=0</p><p><strong>缺点</strong>:  运算次数比取模多</p><p>最优解法: 结合欧几里得算法与更相减损法,采用偶数位运算的方法.直到最后a=b.</p><ul><li>当a和b均为偶数时，gcd(a,b) = 2×gcd(a/2, b/2) = 2×gcd(a&gt;&gt;1,b&gt;&gt;1)。</li><li>当a为偶数，b为奇数时，gcd(a,b) = gcd(a/2,b) = gcd(a&gt;&gt;1,b)。</li><li>当a为奇数，b为偶数时，gcd(a,b) = gcd(a,b/2) = gcd(a,b&gt;&gt;1)。</li><li>当a和b均为奇数时，先利用更相减损术运算一次，gcd(a,b)    =    gcd(b,a-<br>b)，此时a-b必然是偶数，然后又可以继续进行移位运算。</li></ul><p>如果(a&amp;1)==0，则说明整数a是偶数；如果(a&amp;1)!=0，则说明整数a是奇数.</p><h5 id="判断2的整数次幂"><a href="#判断2的整数次幂" class="headerlink" title="判断2的整数次幂"></a>判断2的整数次幂</h5><p>思路:  凡是2的整数次幂的数,其二进制都是最高位1,其余位0,如果将这个数-1, 其二进制数字全部变为1,这时候使用位与运算n&amp;(n-1),结果必为0,否则不是2的整数幂.</p><h5 id="求无序数组的任意2个相邻元素的最大差值"><a href="#求无序数组的任意2个相邻元素的最大差值" class="headerlink" title="求无序数组的任意2个相邻元素的最大差值"></a>求无序数组的任意2个相邻元素的最大差值</h5><ul><li><p>通过计数排序的思想,求出原数组的最大值与最小值,然后计算区间并创立新数组,遍历原数组,把新数组对应下标的元素+1,遍历结束后, 遍历新数组,统计最大连续出现0值的次数,其下标差值即为最大相邻差.</p><p><strong>缺点</strong>: 当原数组元素最大最小值差距很大的时候,会大大增加其时间与空间复杂度</p></li><li><p>采用桶排序思想,创建与原数组等个数的桶,跨度为（max-min）/（n-1）。遍历后插入对应的桶中,记录桶的最大最小值.然后遍历所有的桶,统计每个桶的最大值与右侧非空桶的最小值的差,求取最大差值.</p></li></ul><h5 id="如何使用栈实现队列"><a href="#如何使用栈实现队列" class="headerlink" title="如何使用栈实现队列"></a>如何使用栈实现队列</h5><p>栈: 先入后出, 队列: 先入先出. 在学习数学时,一个数如果倒一次是倒数,倒2次就是自己本身了,同样道理,栈第一次是先入后出,再按出栈顺序添加到另外一个栈中,后入A栈的就变成先入B栈了,这样执行2次进栈,顺序就变成先进先出了.</p><h5 id="寻找全排列的下一个数"><a href="#寻找全排列的下一个数" class="headerlink" title="寻找全排列的下一个数"></a>寻找全排列的下一个数</h5><p>思路: 字典序算法; </p><ol><li>从后向前查看逆序区域,找到逆序区域的前一位,就是数字置换的边界;</li><li>让逆序区域的前一位和逆序区域中大于它的最小的数字交换位置;</li><li>把原来的逆序区域额转为顺序状态;</li></ol><h5 id="删去k个数字后的最小值"><a href="#删去k个数字后的最小值" class="headerlink" title="删去k个数字后的最小值"></a>删去k个数字后的最小值</h5><p>思路: 贪心算法</p><p>从左向右遍历，找到比自己右侧数字大的数字并删除; 如果没有找到要删除的数字，则删除最后一个数字, 然后清除整数左侧的数字0</p><p>优化:  采用出入栈的方式更节省时间与空间. 从前往后遍历,先入栈,然后比较当前栈与下一个数字的大小,如果逆序则栈顶出栈(代表删除),新数组入栈.重复出入栈K次即可</p><h5 id="如何实现大整数相加"><a href="#如何实现大整数相加" class="headerlink" title="如何实现大整数相加"></a>如何实现大整数相加</h5><p>把大整数拆成int 或者long类型范围内的数组,然后遍历数组相加减.参考BigDecimal底层实现的算法.</p><h5 id="如何求解金矿问题"><a href="#如何求解金矿问题" class="headerlink" title="如何求解金矿问题"></a>如何求解金矿问题</h5><p>思路: 动态规划, 确定全局最优解与最优子结构之间的关系,以及问题的边界.</p>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven的介绍与使用</title>
      <link href="2020/12/25/maven/"/>
      <url>2020/12/25/maven/</url>
      
        <content type="html"><![CDATA[<h3 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h3><p>一款服务于java平台的自动化构建工具</p><h4 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h4><p><a href="https://maven.apache.org/download.cgi">官网下载页面</a></p><p>自定义安装,过程比较简单,此处略.</p><h4 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h4><ul><li><p>配置环境变量MAVEN_HOME</p></li><li><p>配置setting文件(安装目录\conf\settings.xml)</p><ul><li>配置本地默认仓库,可选<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210810110344.png" alt="image-20210810110334997"></li><li>配置远程仓库镜像, 由于国外网站访问慢,推荐使用<a href="https://maven.aliyun.com/mvn/guide">阿里云镜像</a></li></ul><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 必须放在&lt;mirrors> &lt;/mirrors>节点内.--></span><span class="token comment" spellcheck="true">&lt;!--mirrorOf: 被拦截的仓库的id,被拦截后将从镜像库获取依赖。* 模糊匹配, 默认拦截所有仓库。--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>aliyunmaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>阿里云公共仓库<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://maven.aliyun.com/repository/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>配置jdk编译工具信息</li></ul><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- java版本,用于统一管理编译的jdk版本;  必须放置在&lt;profiles>&lt;/profiles>节点内 --></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>jdk-1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdk</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdk</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.compilerVersion</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.compilerVersion</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><p>查看版本:  mvn -v</p><p>==与构建过程相关的maven命令,必须进入pom.xml所在的目录==</p><ul><li>清理 mvn clean</li><li>编译 mvn compile</li><li>编译测试程序 mvn test-compile</li><li>执行测试: mvn test</li><li>打包:  mvn package</li><li>安装 mvn install , 在待安装工程目录下,执行此命令</li><li>生成站点: mvn site</li></ul><h3 id="IDEA集成maven"><a href="#IDEA集成maven" class="headerlink" title="IDEA集成maven"></a>IDEA集成maven</h3><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210810113206.png" alt="image-20210810113206465"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210810113718.png" alt="image-20210810113718471"></p><h4 id="POM详解"><a href="#POM详解" class="headerlink" title="POM详解"></a>POM详解</h4><p>Project Object Model 项目对象模型, maven工程的核心配置文件.当编译项目时Maven读取该文件，并从仓库中下载相应的Jar包。</p><p>直接右键可以出来maven命令快捷方式</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0http://maven.apache.org/maven-v4_0_0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。 坐标包括group ID，artifact ID和 version。--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>     <span class="token comment" spellcheck="true">&lt;!--被继承的父项目的构件标识符--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">/></span></span>      <span class="token comment" spellcheck="true">&lt;!--被继承的父项目的全球唯一标识符--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">/></span></span>      <span class="token comment" spellcheck="true">&lt;!--被继承的父项目的版本--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。并且构建时生成的路径也是由此生成， 如com.mycompany.app生成的相对路径为：/com/mycompany/app--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.missbe.web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 构件的标识符，它和group ID一起唯一标识一个构件。换句话说，你不能有两个不同的项目拥有同样的artifact ID和groupID；在某个 特定的group ID下，artifact ID也必须是唯一的。构件是项目产生的或使用的一个东西，Maven为项目产生的构件包括：JARs，源码，二进制发布和WARs等。--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>search-resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>war<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--项目的名称, Maven产生的文档用--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>search-resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--项目主页的URL, Maven产生的文档用--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://www.missbe.cn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 项目的详细描述, Maven 产生的文档用。  当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，就可以包含HTML标 签）， 不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的索引页文件，而不是调整这里的文档。--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>A maven project to study maven.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--描述了这个项目构建环境中的前提条件。--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prerequisites</span><span class="token punctuation">></span></span>     <span class="token comment" spellcheck="true">&lt;!--构建该项目或使用该插件所需要的Maven的最低版本--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven</span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prerequisites</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--构建项目需要的信息--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>     <span class="token comment" spellcheck="true">&lt;!--该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sourceDirectory</span><span class="token punctuation">/></span></span>      <span class="token comment" spellcheck="true">&lt;!--该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容 会被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scriptSourceDirectory</span><span class="token punctuation">/></span></span>      <span class="token comment" spellcheck="true">&lt;!--该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testSourceDirectory</span><span class="token punctuation">/></span></span>      <span class="token comment" spellcheck="true">&lt;!--被编译过的应用程序class文件存放的目录。--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>outputDirectory</span><span class="token punctuation">/></span></span>      <span class="token comment" spellcheck="true">&lt;!--被编译过的测试class文件存放的目录。--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testOutputDirectory</span><span class="token punctuation">/></span></span>      <span class="token comment" spellcheck="true">&lt;!--使用来自该项目的一系列构建扩展--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extensions</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!--描述使用到的构建扩展。--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extension</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!--构建扩展的groupId--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">/></span></span>          <span class="token comment" spellcheck="true">&lt;!--构建扩展的artifactId--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">/></span></span>          <span class="token comment" spellcheck="true">&lt;!--构建扩展的版本--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">/></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extension</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extensions</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!--这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!--这个元素描述了项目相关或测试相关的所有资源路径--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- 描述了资源的目标路径。该路径相对target/classes目录（例如${project.build.outputDirectory}）。举个例 子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为org/apache/maven /messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">/></span></span>          <span class="token comment" spellcheck="true">&lt;!--是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素里列出。--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">/></span></span>          <span class="token comment" spellcheck="true">&lt;!--描述存放资源的目录，该路径相对POM路径--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">/></span></span>          <span class="token comment" spellcheck="true">&lt;!--包含的模式列表，例如**/*.xml.--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">/></span></span>          <span class="token comment" spellcheck="true">&lt;!--排除的模式列表，例如**/*.xml--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">/></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!--这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testResources</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!--这个元素描述了测试相关的所有资源路径，参见build/resources/resource元素的说明--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testResource</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">/></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testResource</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testResources</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!--构建产生的所有文件存放的目录--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">/></span></span>      <span class="token comment" spellcheck="true">&lt;!--产生的构件的文件名，默认值是${artifactId}-${version}。--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">/></span></span>      <span class="token comment" spellcheck="true">&lt;!--当filtering开关打开时，使用到的过滤器属性文件列表--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filters</span><span class="token punctuation">/></span></span>      <span class="token comment" spellcheck="true">&lt;!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginManagement</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!--使用的插件列表 。--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!--plugin元素包含描述插件所需要的信息。--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>           <span class="token comment" spellcheck="true">&lt;!--插件在仓库里的group ID--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">/></span></span>            <span class="token comment" spellcheck="true">&lt;!--插件在仓库里的artifact ID--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">/></span></span>            <span class="token comment" spellcheck="true">&lt;!--被使用的插件的版本（或版本范围）--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">/></span></span>            <span class="token comment" spellcheck="true">&lt;!--是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该元素才被设置成enabled。--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extensions</span><span class="token punctuation">/></span></span>            <span class="token comment" spellcheck="true">&lt;!--在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span>             <span class="token comment" spellcheck="true">&lt;!--execution元素包含了插件执行需要的信息--></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span>               <span class="token comment" spellcheck="true">&lt;!--执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">/></span></span>                <span class="token comment" spellcheck="true">&lt;!--绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">/></span></span>                <span class="token comment" spellcheck="true">&lt;!--配置的执行目标--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">/></span></span>                <span class="token comment" spellcheck="true">&lt;!--配置是否被传播到子POM--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inherited</span><span class="token punctuation">/></span></span>                <span class="token comment" spellcheck="true">&lt;!--作为DOM对象的配置--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">/></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--项目引入插件所需要的额外依赖--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>             <span class="token comment" spellcheck="true">&lt;!--参见dependencies/dependency元素--></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--任何配置是否被传播到子项目--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inherited</span><span class="token punctuation">/></span></span>            <span class="token comment" spellcheck="true">&lt;!--作为DOM对象的配置--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">/></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginManagement</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!--使用的插件列表--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!--参见build/pluginManagement/plugins/plugin元素--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extensions</span><span class="token punctuation">/></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inherited</span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">/></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>           <span class="token comment" spellcheck="true">&lt;!--参见dependencies/dependency元素--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inherited</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">/></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--发现依赖和扩展的远程仓库列表。--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span>     <span class="token comment" spellcheck="true">&lt;!--包含需要连接到远程仓库的信息--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!--如何处理远程仓库里发布版本的下载--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">/></span></span>          <span class="token comment" spellcheck="true">&lt;!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updatePolicy</span><span class="token punctuation">/></span></span>          <span class="token comment" spellcheck="true">&lt;!--当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>checksumPolicy</span><span class="token punctuation">/></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，为每种类型的构件采取不同的 策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updatePolicy</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>checksumPolicy</span><span class="token punctuation">/></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--远程仓库唯一标识符。可以用来匹配在settings.xml文件里配置的远程仓库--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>banseon-repository-proxy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--远程仓库名称--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>banseon-repository-proxy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--远程仓库URL，按protocol://hostname/path形式--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://192.168.1.169:9999/repository/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认的布局；然 而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span><span class="token punctuation">></span></span>default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--发现插件的远程仓库列表，这些插件用于构建和报表--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepositories</span><span class="token punctuation">></span></span>     <span class="token comment" spellcheck="true">&lt;!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span>......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepositories</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!--依赖的group ID--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--依赖的artifact ID--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-artifact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。类型经常和使用的打包方式对应， 尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。如果设置extensions为 true，就可以在 plugin里定义新的类型。所以前面的类型的例子不完整。--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，如果你想要构建两个单独的构件成 JAR，一个使用Java 1.4编译器，另一个使用Java 6编译器，你就可以使用分类器来生成两个单独的JAR构件。--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>classifier</span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。                    - compile ：默认范围，用于编译                      - provided：类似于编译，但支持你期待jdk或者容器提供，类似于classpath                      - runtime: 在执行时需要使用                      - test:    用于test任务时使用                      - system: 需要外在提供相应的元素。通过systemPath来取得                      - systemPath: 仅用于范围为system。提供相应的路径                      - optional:   当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--仅供system范围使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如${java.home}。--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>systemPath</span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的依赖。此元素主要用于解决版本冲突问题--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。可选依赖阻断依赖的传递性。--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖（必须描述group ID和 artifact ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过group ID和artifact ID 匹配到这里的依赖，并使用这里的依赖信息。--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!--参见dependencies/dependency元素--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者把构件部署到远程仓库。--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>distributionManagement</span><span class="token punctuation">></span></span>     <span class="token comment" spellcheck="true">&lt;!--部署项目产生的构件到远程仓库需要的信息--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!--是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见repositories/repository元素--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uniqueVersion</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>banseon-maven2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>banseon maven2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>file://${basedir}/target/deploy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span><span class="token punctuation">/></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!--构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见distributionManagement/repository元素--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshotRepository</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uniqueVersion</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>banseon-maven2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Banseon-maven2 Snapshot Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>scp://svn.baidu.com/banseon:/usr/local/maven-snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span><span class="token punctuation">/></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshotRepository</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!--部署项目的网站需要的信息--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>site</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!--部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>banseon-site<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--部署位置的名称--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>business api website<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--部署位置的URL，按protocol://hostname/path形式--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>scp://svn.baidu.com/banseon:/var/www/localhost/banseon-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>site</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!--项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位那些不在仓库里的构件（由于license限制）。--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>downloadUrl</span><span class="token punctuation">/></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值有：none（默认），converted（仓库管理员从 Maven 1 POM转换过来），partner（直接从伙伴Maven 2仓库同步过来），deployed（从Maven 2实例部 署），verified（被核实时正确的和最终的）。--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>status</span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>distributionManagement</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里activation元素的说明）。格式是&lt;name>value&lt;/name>。--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="gav坐标"><a href="#gav坐标" class="headerlink" title="gav坐标"></a>gav坐标</h5><p>Maven中，坐标是Jar包的唯一标识，Maven通过坐标在仓库中找到项目所需的Jar包。</p><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>     <span class="token comment" spellcheck="true">&lt;!-- 所需Jar包的项目名--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!-- 所需Jar包的模块名--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 所需Jar包的版本号--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.16.18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="传递依赖-与-排除依赖"><a href="#传递依赖-与-排除依赖" class="headerlink" title="传递依赖 与 排除依赖"></a>传递依赖 与 排除依赖</h5><p>传递依赖：如果我们的项目引用了一个Jar包，而该Jar包又引用了其他Jar包，那么在默认情况下项目编译时，Maven会把直接引用和简洁引用的Jar包都下载到本地。</p><p>排除依赖：如果我们只想下载直接引用的Jar包，那么需要在pom.xml中做如下配置：(将需要排除的Jar包的坐标写在中)</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.missbe.web.search<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>resource-search<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="依赖范围scope"><a href="#依赖范围scope" class="headerlink" title="依赖范围scope"></a>依赖范围scope</h5><ul><li>compile ：默认范围，用于编译      </li><li>provided：只在编译阶段生效，不需要打入包中    </li><li>runtime: 在执行时需要使用      </li><li>test:    用于test任务时使用      </li><li>system: 需要外在提供相应的元素。通过systemPath来取得      </li><li>systemPath: 仅用于范围为system。提供相应的路径      </li><li>optional:   当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用</li></ul><h5 id="依赖冲突"><a href="#依赖冲突" class="headerlink" title="依赖冲突"></a>依赖冲突</h5><p>若项目中多个Jar同时引用了相同的Jar时，会产生依赖冲突，但Maven采用了两种避免冲突的策略，因此在Maven中是不存在依赖冲突的。</p><ul><li>短路优先</li></ul><pre class="line-numbers language-xml"><code class="language-xml">本项目——>A.jar——>B.jar——>X.jar本项目——>C.jar——>X.jar<span class="token comment" spellcheck="true">&lt;!--此时，Maven只会引用引用路径最短的Jar。--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p>声明优先</p><p>  若引用路径长度相同时，在pom.xml中谁先被声明，就使用谁。</p></li></ul><h5 id="聚合"><a href="#聚合" class="headerlink" title="聚合"></a>聚合</h5><p>将多个项目同时运行就称为聚合。</p><h6 id="实现聚合"><a href="#实现聚合" class="headerlink" title="实现聚合"></a>实现聚合</h6><p>方法一:  新建/导入module, 会自动在pom添加module配置</p><p>方法二:  手动添加module</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">></span></span>web-connection-pool<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">></span></span>web-java-crawler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h5><p>在聚合多个项目时，如果这些被聚合的项目中需要引入相同的Jar，那么可以将这些Jar写入父pom中，各个子项目继承该pom即可。</p><h6 id="如何继承"><a href="#如何继承" class="headerlink" title="如何继承"></a>如何继承</h6><ol><li>父pom配置：将需要继承的Jar包的坐标放入标签即可</li></ol><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token comment" spellcheck="true">&lt;!--只声明依赖,并不实现引入, 子模块实现了对应的依赖,无需指定版本号,默认使用父工程的版本 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!--spring boot 2.2.2--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.2.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>子pom配置：</li></ol><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>父pom所在项目的groupId<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>父pom所在项目的artifactId<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>父pom所在项目的版本号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="构建Web项目"><a href="#构建Web项目" class="headerlink" title="构建Web项目"></a>构建Web项目</h5><ol><li>New Maven项目：选择WebApp</li><li>若使用JSP，需添加Servlet依赖</li></ol><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 只在编译和测试时运行 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>在Bulid Path中设置resource输出目录</li><li>勾选：Dynamic Web Module</li><li>删掉测试目录</li><li>在pom中加入jetty的插件，并设置JDK版本</li></ol><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.eclipse.jetty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jetty-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>9.3.10.v20160621<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">></span></span>package<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="7"><li>运行项目, 输入jetty:run  , 访问127.0.0.1:8080.</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA介绍与使用</title>
      <link href="2020/12/23/idea-jiao-cheng/"/>
      <url>2020/12/23/idea-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h3 id="IDEA介绍与使用"><a href="#IDEA介绍与使用" class="headerlink" title="IDEA介绍与使用"></a>IDEA介绍与使用</h3><p>==强烈建议看如下列举的参考文章,我记录的只是我遇到的或者我觉得有用的, 我使用的IDEA版本为 2020.1版本.==</p><p><a href="https://jadyer.cn/2016/04/20/idea-config/">IDEA配置小结</a></p><p><a href="https://hub.fastgit.org/judasn/IntelliJ-IDEA-Tutorial">github教程1</a></p><p><a href="https://hub.fastgit.org/guobinhit/intellij-idea-tutorial">github教程2</a></p><p><a href="https://github.com/xiaoxiunique/awesome-IntelliJ-IDEA">idea综合教程</a></p><h4 id="设置入口"><a href="#设置入口" class="headerlink" title="设置入口"></a>设置入口</h4><p>之前使用IDEA时,经常发现,打开项目后,在设置Settings里面配置好了某些配置,比如File Encoding,  Maven配置后,后面再次新建项目时候,这些设置又都变成了默认设置,经过查阅才发现,IDEA打开项目后,更改的是本项目设置,如果要更改默认设置,有2个入口,如下所示:</p><p>==所以, 第一次配置的时候,千万别在File–&gt;settings(ctrl+Alt+s)里面配置,那个是针对当前项目的配置.==</p><ol><li>IDEA启动界面</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210810145835.png" alt="idea配置入口"></p><ol start="2"><li>打开项目后,File–&gt; New Project Settings</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210810144915.png" alt="image-20210810144915178"></p><h4 id="配置文件目录"><a href="#配置文件目录" class="headerlink" title="配置文件目录"></a>配置文件目录</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//与以前不一样了,新安装的软件都在appData目录下,也可以手动修改</span>C<span class="token operator">:</span>\Users\admin\AppData\Roaming\JetBrains\IntelliJIdea2020<span class="token number">.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="打包java项目"><a href="#打包java项目" class="headerlink" title="打包java项目"></a>打包java项目</h4><p>File–&gt;Project Structure–&gt;artifacts–&gt;add–&gt;选择自己想打的包,然后build–&gt;build artifacts, 在项目目录的output里面能找到该jar包.</p><h4 id="常用快捷键与代码模板"><a href="#常用快捷键与代码模板" class="headerlink" title="常用快捷键与代码模板"></a>常用快捷键与代码模板</h4><pre><code>方法模板psvm :  mainsout: 打印日志</code></pre><h4 id="设置参数修改"><a href="#设置参数修改" class="headerlink" title="设置参数修改"></a>设置参数修改</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//设置搜索关键字,由于idea版本不一致,导致设置的地方可能有更改,直接提供关键之搜索更有效</span>字体设置<span class="token operator">:</span> font鼠标调字体大小<span class="token operator">:</span>  mouse control鼠标悬浮获取类<span class="token operator">/</span>方法提示<span class="token operator">:</span> quick documentation自动导包<span class="token operator">:</span> auto <span class="token keyword">import</span>行号<span class="token operator">:</span> show line numbers方法间隔符<span class="token operator">:</span> show method separators忽略大小写<span class="token operator">:</span> match <span class="token keyword">case</span>tabs多行显示<span class="token operator">:</span> show tabs in one row编码设置<span class="token operator">:</span>  file encodings<span class="token punctuation">,</span> 全部设置为utf<span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span>并勾选<span class="token keyword">native</span><span class="token operator">-</span>to<span class="token operator">-</span>ASCII自动编译<span class="token operator">:</span> compiler快捷键<span class="token operator">:</span> keymap打开idea手动选择项目<span class="token operator">:</span> reopen last project on star显示内存使用<span class="token operator">:</span> 双击shift<span class="token operator">--</span><span class="token operator">></span>show memory或者setting<span class="token operator">:</span>show memory空闲时候自动保存<span class="token operator">:</span> save file自动更新<span class="token operator">:</span> auto update设定折叠或展开的代码类型<span class="token operator">:</span> Code Folding星号标识编辑过的文件<span class="token operator">:</span> Mark modified快捷键自动生成变量使用自定义前后缀<span class="token operator">:</span> Code Generation日志多行打印<span class="token operator">:</span> use soft wraps in console<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><pre><code>//此处只列举我觉得有用的查看自定义代码模板: ctrl+j格式化: ctrl+alt+L查看最近修改的代码: ctrl+E方法参数提示: ctrl+P包裹选中代码: ctrl+alt+T复制一行: ctrl+D删除行: ctrl+Y自动选中: ctrl+W反选中: ctrl+shift+W大小写: ctrl+shitf+U查找类文件: 双击shift查找: ctrl+F替换: ctrl+R全局修改: shift+F6撤回: ctrl+Z反撤回: ctrl+shift+z单行注释: ctrl+/多行注释: ctrl+shift+/修改文件模板: file and code Templates.后缀自动补全代码: postfix completion显示文档: ctrl+Q当前方法的父类的方法 / 接口定义: ctrl+U光标所在的方法/变量的接口或是定义处: ctrl+B/ctrl+鼠标左键版本控制提交项目: ctrl+K版本控制更新项目: ctrl+T当前类的层次结构: ctrl+h当前类可重写的方法: ctrl+O可继承的方法: ctrl+I格式化代码: ctrl+shift+L快速提取常量: ctrl+shift+C快速提取方法: ctrl+shift+f大小写切换: ctrl+shift+u对当前类生成单元测试类: ctrl+shift+T弹出缓存的最近拷贝的内容管理器弹出层; ctrl+shift+v自动结束代码，行末自动添加分号: ctrl+shift+enter</code></pre><h4 id="自定义代码模板"><a href="#自定义代码模板" class="headerlink" title="自定义代码模板"></a>自定义代码模板</h4><ol><li>设置(ctrl+Alt+S)–&gt; Editor–&gt;Live Templates;</li><li>选择要添加的项目</li><li>右上角添加templates</li><li>输入自己的示例,并选择生效的语言,如果有默认值可以设置默认值,再保存</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/tadpole145/images/main/image-20210203161416270.png" alt="image-20210203161416270"></p><h4 id="使用界面介绍"><a href="#使用界面介绍" class="headerlink" title="使用界面介绍"></a>使用界面介绍</h4><pre><code>显示toolBar: view--&gt;appearance--&gt;toolbar</code></pre><h4 id="常用插件推荐"><a href="#常用插件推荐" class="headerlink" title="常用插件推荐"></a>常用插件推荐</h4><h5 id="easy-javadoc"><a href="#easy-javadoc" class="headerlink" title="easy_javadoc"></a>easy_javadoc</h5><h6 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h6><p>一个可以快速为<code>Java</code>的类、方法、属性加注释的插件，还支持自定义注释样式.</p><p>在为类、方法、属性加注释时，不仅会生成注释，还是会将对应变量、类、方法翻译成中文名，不过翻译的怎么样还要取决于你的命名水平。</p><h6 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h6><p>单个注释: 选中需要注释的对象(类,属性,方法), 快捷键 ctrl+\</p><p>全部注释:  选中类, 快捷键 ctrl+shift+ \</p><p><strong>tips</strong>:  该快捷键为<strong>win</strong>系统使用, 如果是mac系统,则参考<a href="https://github.com/starcwang/easy_javadoc">easy_javadoc插件github官方说明文档</a></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210907161806.webp" alt="v2-466acecd4b2b12e43482c9722c603cc8_720w"></p><h5 id="Easy-Code"><a href="#Easy-Code" class="headerlink" title="Easy Code"></a><a href="https://plugins.jetbrains.com/plugin/10954-easy-code">Easy Code</a></h5><h6 id="功能介绍-1"><a href="#功能介绍-1" class="headerlink" title="功能介绍"></a>功能介绍</h6><ul><li>基于IntelliJ IDEA开发的代码生成插件，支持自定义任意模板（Java，html，js，xml）。</li><li>只要是与数据库相关的代码都可以通过自定义模板来生成。支持数据库类型与java类型映射关系配置。</li><li>支持同时生成生成多张表的代码。每张表有独立的配置信息。完全的个性化定义，规则由你设置。</li></ul><h6 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h6><p>由于功能强大, 建议参考<a href="https://github.com/makejavas/EasyCode">官方文档</a></p><p>MybatisPlus也可以生成模板代码,还可以搭配Lombok设置生成策略, 如果习惯使用Lombok的用户,建议还是使用MybatisPlus推荐的代码生成</p><h6 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h6><ul><li><p>使用mysql8.0+时,使用database连接mysql,需要添加serverTimezone=Asia/Shanghai参数</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210907170841.png" alt="image-20210907170658568"></p></li><li><p>需要指定连接的数据库名</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210907170821.png" alt="image-20210907170821018"></p><h5 id="RestfulToolkit"><a href="#RestfulToolkit" class="headerlink" title="RestfulToolkit"></a><a href="https://plugins.jetbrains.com/plugin/10292-restfultoolkit">RestfulToolkit</a></h5><ol><li>根据 URL 直接跳转到对应的方法定义 ( Ctrl \ or <strong>Ctrl Alt N</strong> );</li><li>提供了一个 Services tree 的显示窗口;</li><li>一个简单的 http 请求工具;</li><li>在**请求方法(选中,右键)**上添加了有用功能: 复制生成 URL;,复制方法参数…</li><li>其他功能: **java 类(选中,右键)**上添加 Convert to JSON 功能，格式化 json 数据 ( Windows: Ctrl + Enter; Mac: Command + Enter )。</li></ol><p>搜索定位controller,复制url, 根据类生成json,这些功能都是很实用的.</p><h5 id="String-Manipulation"><a href="#String-Manipulation" class="headerlink" title="String Manipulation"></a>String Manipulation</h5><h6 id="功能介绍-2"><a href="#功能介绍-2" class="headerlink" title="功能介绍"></a>功能介绍</h6><p>一个比较实用的字符串转换工具，比如我们平时的变量命名可以一键转换驼峰等格式，还支持对字符串的各种加、解密（MD5、Base64等）操作</p><h6 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h6><ul><li><p>选中字段名, 右键, 选中加密方式,即可变为加密后的字符串,</p></li><li><p>alt+M, 也可以出来功能选项,不过功能不如右键全面</p></li><li><p>转换大小写:  选中, alt+enter</p></li></ul><h5 id="Translation"><a href="#Translation" class="headerlink" title="Translation"></a><a href="https://github.com/YiiGuxing/TranslationPlugin">Translation</a></h5><h6 id="功能介绍-3"><a href="#功能介绍-3" class="headerlink" title="功能介绍"></a>功能介绍</h6><p>一个很方便的翻译插件，比如选中代码、控制台的报错信息可直接翻译。</p><h6 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h6><p>翻译指定单词或者句子:</p><ul><li>选择文本 &gt; 单击鼠标右键 &gt; 翻译</li><li>选中文本,按快捷键ctrl+shift+Y</li></ul><p>显示显示翻译对话框: Ctrl + Shift + O  (win)</p><p>翻译文档注释: 光标在文档注释块内时,右键–&gt;翻译文档</p><p>更多使用方式,详见<a href="https://yiiguxing.gitee.io/translation-plugin/start.html">官方文档</a></p><h5 id="Vcs-Auto-Update-Git-Auto-Pull"><a href="#Vcs-Auto-Update-Git-Auto-Pull" class="headerlink" title="Vcs Auto Update(Git Auto Pull)"></a>Vcs Auto Update(Git Auto Pull)</h5><p>团队多人开发项目时，由于频繁提交代码，等我在<code>commit</code>本地代码的时必须先进行<code>pull</code>，否则就会代码冲突产生<code>merge</code>记录。</p><p><code>GitAutoPull</code>插件帮我们在<code>push</code>前先进行<code>pull</code>，避免了不必要的代码冲突。</p><h5 id="GenerateAllSetter"><a href="#GenerateAllSetter" class="headerlink" title="GenerateAllSetter"></a>GenerateAllSetter</h5><p>实际的开发中，可能会经常为某个对象中多个属性进行 <code>set</code> 赋值，尽管可以用<code>BeanUtil.copyProperties()</code>方式批量赋值，但这种方式有一些弊端，存在属性值覆盖的问题，所以不少场景还是需要手动 <code>set</code>。如果一个对象属性太多 <code>set</code> 起来也很痛苦，<code>GenerateAllSetter</code>可以一键将对象属性都 <code>set</code> 出来。</p><h6 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h6><p>光标放在new的对象这行代码任意位置,   快捷键：Alt+Enter</p><h5 id="Alibaba-Java-Coding-Guidelines"><a href="#Alibaba-Java-Coding-Guidelines" class="headerlink" title="Alibaba Java Coding Guidelines"></a>Alibaba Java Coding Guidelines</h5><p>阿里定义的java编码规范, 当你的代码出现了不符合规范的时候,ide会自动给出提示.</p><h5 id="GsonFormat-GsonFormatPlus"><a href="#GsonFormat-GsonFormatPlus" class="headerlink" title="GsonFormat\GsonFormatPlus"></a>GsonFormat\GsonFormatPlus</h5><p>将<code>JSON</code>字符串自动转换成<code>Java</code>实体类的工具</p><p>快捷键：<code>Alt+ S</code></p><h5 id="Maven-Helper"><a href="#Maven-Helper" class="headerlink" title="Maven Helper"></a>Maven Helper</h5><p><code>Maven Helper</code> 是解决<code>Maven</code>依赖冲突的利器，可以快速查找项目中的依赖冲突。安装后打开<code>pom</code>文件，底部有 <code>Dependency Analyzer</code>视图。显示红色表示存在依赖冲突，点进去直接在包上右键<code>Exclude</code>排除，<code>pom</code>文件中会做出相应排除包的操作。</p><ul><li>Conflicts(冲突)</li><li>All Dependencies as List(列表形式查看所有依赖)</li><li>All Dependencies as Tree(树结构查看所有依赖)，并且这个页面还支持搜索。</li></ul><h5 id="MyBatisX"><a href="#MyBatisX" class="headerlink" title="MyBatisX"></a>MyBatisX</h5><h6 id="功能介绍-4"><a href="#功能介绍-4" class="headerlink" title="功能介绍"></a>功能介绍</h6><p>安装后,mapper中的接口文件和xml左侧会出现小鸟标志,点击可以互相跳转</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210910161525.gif" alt="Screenshot 1"></p><h5 id="MybatisLogFormat"><a href="#MybatisLogFormat" class="headerlink" title="MybatisLogFormat"></a><a href="https://plugins.jetbrains.com/plugin/14292-mybatislogformat">MybatisLogFormat</a></h5><p>将mybatis的执行语句转换成sql语句</p><h5 id="ConvertYamlAndProperties"><a href="#ConvertYamlAndProperties" class="headerlink" title="ConvertYamlAndProperties"></a>ConvertYamlAndProperties</h5><p>配置文件properties和yaml互相转换, 建议转换之前做好备份哦.</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210910162037.gif" alt="show.gif"></p><h5 id="Lombok"><a href="#Lombok" class="headerlink" title="Lombok"></a>Lombok</h5><p>通过注解,设置JavaBean的构造方法,set,get方法等.</p><h5 id="Grep-Console"><a href="#Grep-Console" class="headerlink" title="Grep Console"></a><a href="https://plugins.jetbrains.com/plugin/7125-grep-console">Grep Console</a></h5><p>通过关键词过滤,高亮指定文本等,创建新的控制台窗口, 用于控制台分析日志.</p><h4 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h4><h5 id="Plugins-连不上、打不开"><a href="#Plugins-连不上、打不开" class="headerlink" title="Plugins 连不上、打不开"></a>Plugins 连不上、打不开</h5><p>一、设置 http proxy—&gt;勾上Auto-detect proxy setting,参照下图，加上地址 <a href="http://127.0.0.1:1080/">http://127.0.0.1:1080</a> (未测试)或者<a href="https://plugins.jetbrains.com/">https://plugins.jetbrains.com/</a> (已测试成功), 然后重启即可</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img.jbzj.com/file_images/article/202006/2020062511464535.jpg" alt="img"></p><h5 id="plugins下载连接超时"><a href="#plugins下载连接超时" class="headerlink" title="plugins下载连接超时"></a>plugins下载连接超时</h5><p>查询ip,修改host. 参考<a href="https://blog.csdn.net/daiqi5527153/article/details/109347095">一分钟解决IDEA下载插件超时问题的解决</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git使用详解</title>
      <link href="2020/12/14/gitcmd/"/>
      <url>2020/12/14/gitcmd/</url>
      
        <content type="html"><![CDATA[<h2 id="Git-Github使用以及在IDEA中的集成"><a href="#Git-Github使用以及在IDEA中的集成" class="headerlink" title="Git, Github使用以及在IDEA中的集成"></a>Git, Github使用以及在IDEA中的集成</h2><h4 id="git命令"><a href="#git命令" class="headerlink" title="git命令"></a>git命令</h4><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210804182459.png" alt="git命令"></p><h5 id="查看与升级"><a href="#查看与升级" class="headerlink" title="查看与升级"></a>查看与升级</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//查看可配置的功能列表</span>git config<span class="token comment" spellcheck="true">//查看自己已经配置的参数</span>git config <span class="token operator">--</span>list<span class="token comment" spellcheck="true">//查看帮助</span>git config <span class="token operator">--</span>help<span class="token comment" spellcheck="true">//查看版本</span>git version<span class="token comment" spellcheck="true">//升级版本,由于网络原因,特别慢,建议通过镜像下载客户端,手动覆盖安装新版</span>git update<span class="token operator">-</span>git<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">-</span>windows<span class="token comment" spellcheck="true">//查看状态</span>git status<span class="token comment" spellcheck="true">//查看所有提交的完整日志 </span>git log <span class="token comment" spellcheck="true">//查看所有版本id</span>git reflog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="设置账户和密码"><a href="#设置账户和密码" class="headerlink" title="设置账户和密码"></a>设置账户和密码</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//保存账号密码,执行后,输入一次即可</span>git config <span class="token operator">--</span>global credential<span class="token punctuation">.</span>helper store<span class="token comment" spellcheck="true">//清除保存的账号密码</span>git config <span class="token operator">--</span>global credential<span class="token punctuation">.</span>helper reset<span class="token comment" spellcheck="true">//全局账户(电脑上所有的git仓库起作用)</span>git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>name  <span class="token string">"yourname"</span>  git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>email  <span class="token string">"your email"</span><span class="token comment" spellcheck="true">//当前账户(只对当前仓库起作用)</span>git config  user<span class="token punctuation">.</span>name  <span class="token string">"username"</span>  git config  user<span class="token punctuation">.</span>email  <span class="token string">"email"</span><span class="token comment" spellcheck="true">//局部变量覆盖全局变量,局部优先,没有设置才会去使用全局的.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="修改账户密码"><a href="#修改账户密码" class="headerlink" title="修改账户密码"></a>修改账户密码</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//方法1,使用上面的设置命令重新设置一遍</span><span class="token comment" spellcheck="true">//方法2使用替换命令进行替换</span>git config <span class="token operator">--</span>replace<span class="token operator">-</span>all user<span class="token punctuation">.</span>name <span class="token string">"name"</span>git config <span class="token operator">--</span>replace<span class="token operator">-</span>all user<span class="token punctuation">.</span>email <span class="token string">"123@qq.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="检出仓库"><a href="#检出仓库" class="headerlink" title="检出仓库"></a>检出仓库</h5><pre><code>git clone 仓库地址</code></pre><h5 id="创建本地仓库"><a href="#创建本地仓库" class="headerlink" title="创建本地仓库"></a>创建本地仓库</h5><p>在本地文件目录下,输入命令</p><pre class="line-numbers language-java"><code class="language-java">git init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="添加与提交"><a href="#添加与提交" class="headerlink" title="添加与提交"></a>添加与提交</h5><pre class="line-numbers language-java"><code class="language-java">git add <span class="token operator">&lt;</span>filename<span class="token operator">></span>   <span class="token comment" spellcheck="true">//添加单个文件</span>git add <span class="token operator">*</span>         <span class="token comment" spellcheck="true">//添加所有文件</span><span class="token comment" spellcheck="true">//提交</span>git commit <span class="token operator">-</span>m <span class="token string">"代码提交信息"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//删除暂存区指定文件名的文件</span>git rm <span class="token operator">--</span>cached xxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//创建分支</span>git branch 分支名称<span class="token comment" spellcheck="true">//查看分支版本</span>git branch <span class="token operator">-</span>v<span class="token comment" spellcheck="true">//切换分支</span>git checkout 分支名<span class="token comment" spellcheck="true">//合并其他分支到你的当前分支 </span>git merge 分支名<span class="token comment" spellcheck="true">//创建并切换到指定分支(2步合并)    </span>git checkout <span class="token operator">-</span>b 分支名<span class="token comment" spellcheck="true">//删除分支</span>git branch <span class="token operator">-</span>d 分支名<span class="token comment" spellcheck="true">//推送到指定分支</span>git push 别名 分支名<span class="token comment" spellcheck="true">//切换到指定版本ID，此时本地修改文件也会被还原到指定commitid版本，如果还未提交,请提交或者注意做好备份再切换</span>git reset <span class="token operator">--</span>hard commitId <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//查看完整提交日志</span>git log <span class="token comment" spellcheck="true">//查看7位版本号</span>git reflog<span class="token comment" spellcheck="true">//1b2e1d63ff 是你想要标记的提交 ID 的前 10 位字符。你也可以用该提交 ID 的少一些的前几位，只要它是唯一的。</span>git tag <span class="token number">1.0</span><span class="token punctuation">.</span><span class="token number">0</span> 1b2e1d63ff<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="替换本地改动"><a href="#替换本地改动" class="headerlink" title="替换本地改动"></a>替换本地改动</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//获取服务器指定文件</span>git checkout <span class="token operator">--</span> <span class="token operator">&lt;</span>filename<span class="token operator">></span> <span class="token comment" spellcheck="true">//丢弃所有的本地改动与提交，可以到服务器上获取最新的版本并将你本地主分支指向到它</span>git fetch origin <span class="token comment" spellcheck="true">//回滚到本地指定版本</span>git reset <span class="token operator">--</span>hard origin<span class="token operator">/</span>master <span class="token comment" spellcheck="true">//git只是撤销本地的commit，并不会撤销本地文件</span>git reset HEAD<span class="token operator">~</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="其它命令"><a href="#其它命令" class="headerlink" title="其它命令"></a>其它命令</h5><pre><code>//彩色的 git 输出：git config color.ui true//内建的图形化 git：gitk</code></pre><h4 id="github使用"><a href="#github使用" class="headerlink" title="github使用"></a>github使用</h4><h5 id="推送远程仓库"><a href="#推送远程仓库" class="headerlink" title="推送远程仓库"></a>推送远程仓库</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//默认推送到默认分支,适用于非第一次push</span>git push <span class="token comment" spellcheck="true">//推送到指定分支</span>git push origin 分支名     <span class="token comment" spellcheck="true">//查看当前所有远程地址别名 </span>git remote <span class="token operator">-</span>v <span class="token comment" spellcheck="true">//起别名 </span>git remote add 别名 远程地址<span class="token comment" spellcheck="true">//推送本地分支上的内容到远程仓库    </span>git push  别名  分支git push 仓库地址 分支<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="情景一-本地有文件-无远程仓库-推送到远程仓库"><a href="#情景一-本地有文件-无远程仓库-推送到远程仓库" class="headerlink" title="情景一:   本地有文件,无远程仓库,推送到远程仓库"></a>情景一:   本地有文件,无远程仓库,推送到远程仓库</h6><ol><li>本地文件目录先git init, 然后add, commit</li><li>创建github远程仓库</li><li>给远程仓库地址起别名,然后推送到指定分支, 或者直接使用地址</li></ol><p>tips: 如果不带分支会提示错误,按照错误提示设置后,下次推送可以免掉仓库地址/别名  分支了.<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210802172947.png" alt="image-20210802172939711"></p><h6 id="情景二-本地无文件-远程仓库存在-拉取后修改并推送"><a href="#情景二-本地无文件-远程仓库存在-拉取后修改并推送" class="headerlink" title="情景二:  本地无文件,远程仓库存在,拉取后修改并推送"></a>情景二:  本地无文件,远程仓库存在,拉取后修改并推送</h6><ol><li>本地目录终端输入 git clone 远程仓库地址</li><li>修改后,正常add, commit,然后git push. </li></ol><p>tips: clone远端仓库,会给默认起个别名叫origin.可以通过git remote -v命令查看.</p><h5 id="拉取远程仓库最新代码"><a href="#拉取远程仓库最新代码" class="headerlink" title="拉取远程仓库最新代码"></a>拉取远程仓库最新代码</h5><pre class="line-numbers language-java"><code class="language-java">git pullgit pull 别名 分支名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="github使用SSH免密登录"><a href="#github使用SSH免密登录" class="headerlink" title="github使用SSH免密登录"></a>github使用SSH免密登录</h5><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803093556.png" alt="image-20210803093556221" style="zoom: 50%;"><p>如果C:\Users\admin\ .ssh文件夹不存在,则会提示你需要添加一个公钥才可以使用ssh免密登录.如果有,则可以省略掉生成公钥这一步,直接配置就好了.    步骤如下:</p><ol><li><p>进入C:\Users\admin目录下,打开git bash终端, 输入命令</p><pre><code>ssh-keygen -t rsa -C github用户名</code></pre><p> 然后连续敲3次回车键,可以看到C:\Users\admin目录下已经生成了.ssh文件夹,包含如下几个文件,然后使用文本打开id_rsa.pub,复制里面的公钥.<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803094239.png" alt="image-20210803094239163"></p></li><li><p>打开github账户,点击设置,然后点击SSH侧边栏,添加SSH keys,将之前复制的公钥复制进去.名字随便取<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803102938.png" alt="image-20210803102938052"></p></li></ol><ol start="3"><li><p>使用ssh进行推送与拉取… </p><pre class="line-numbers language-java"><code class="language-java">git push git<span class="token annotation punctuation">@github</span><span class="token punctuation">.</span>com<span class="token operator">:</span>tadpole145<span class="token operator">/</span>test<span class="token punctuation">.</span>git maingit pull git<span class="token annotation punctuation">@github</span><span class="token punctuation">.</span>com<span class="token operator">:</span>tadpole145<span class="token operator">/</span>test<span class="token punctuation">.</span>git main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h5 id="github向第三方开源库贡献代码"><a href="#github向第三方开源库贡献代码" class="headerlink" title="github向第三方开源库贡献代码"></a>github向第三方开源库贡献代码</h5><ol><li>登录自己github账户,fork人家的代码</li><li>checkout到本地进行修改</li><li>add, commit ,push到自己github仓库</li><li>点击仓库的pull requests, 创建一个新的请求,根据提示填写具体内容,然后提交.<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803112534.png" alt="image-20210803112534636"></li><li>原开源作者会收到你推送的内容,会决定是否合并你提交的代码.一旦接受,你就称为了贡献者.</li></ol><h4 id="IDEA集成Git"><a href="#IDEA集成Git" class="headerlink" title="IDEA集成Git"></a>IDEA集成Git</h4><h5 id="配置git忽略文件"><a href="#配置git忽略文件" class="headerlink" title="配置git忽略文件"></a>配置git忽略文件</h5><h6 id="有哪些文件应该忽略"><a href="#有哪些文件应该忽略" class="headerlink" title="有哪些文件应该忽略"></a>有哪些文件应该忽略</h6><ul><li>项目运行生成的中间文件</li><li>系统环境差异生成的配置文件</li><li>一些与项目实际功能无关,不参与服务器部署运行的文件.</li></ul><h6 id="如何忽略"><a href="#如何忽略" class="headerlink" title="如何忽略"></a>如何忽略</h6><ol><li><p>创建忽略规则文件xxx.ignore,一般建议是git.ignore.存放路径随意,一般建议在用户目录C:\Users\用户名下,与gitconfig 文件在一起.</p></li><li><p>忽略内容, 除以下外,可以根据需求自定义添加</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true"># Compiled class file </span><span class="token attr-name">*.class</span> <span class="token comment" spellcheck="true"># Log file </span><span class="token attr-name">*.log</span>  <span class="token comment" spellcheck="true"># BlueJ files </span><span class="token attr-name">*.ctxt</span>  <span class="token comment" spellcheck="true"># Mobile Tools for Java (J2ME) </span><span class="token attr-name">.mtj.tmp/</span>  <span class="token comment" spellcheck="true"># Package Files # </span><span class="token attr-name">*.jar</span> <span class="token attr-name">*.war</span> <span class="token attr-name">*.nar</span> <span class="token attr-name">*.ear</span> <span class="token attr-name">*.zip</span> <span class="token attr-name">*.tar.gz</span> <span class="token attr-name">*.rar</span>  <span class="token comment" spellcheck="true">#virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml </span><span class="token attr-name">hs_err_pid*</span>  <span class="token attr-name">.classpath</span> <span class="token attr-name">.project</span> <span class="token attr-name">.settings</span> <span class="token attr-name">target</span> <span class="token attr-name">.idea</span> <span class="token attr-name">*.iml</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>在C:\Users\用户名目录下找到.gitconfig , 然后引用忽略配置文件.<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803115507.png" alt="image-20210803115507534"></li></ol></li></ol><h5 id="IDEA集成Git-1"><a href="#IDEA集成Git-1" class="headerlink" title="IDEA集成Git"></a>IDEA集成Git</h5><p>在IDEA的Setting–version Control–&gt;Git中, 关联自己本地的Git客户端.<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803141109.png" alt="image-20210803141109187"></p><h5 id="使用IDEA管理项目版本"><a href="#使用IDEA管理项目版本" class="headerlink" title="使用IDEA管理项目版本"></a>使用IDEA管理项目版本</h5><ol><li>使用idea打开项目后,点击菜单栏VCS–&gt;import into Version Control—&gt;Git, 然后选择要管理的项目.</li><li><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803141634.png" alt="image-20210803141634287"></li></ol><ol start="2"><li>选择项目名,右键–&gt;Git–&gt;add, 将所有文件添加到暂存区</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803142221.png" alt="image-20210803142221322"></p><ol start="3"><li>添加完成后,重复上面的步骤, 在Git选项中, 选择Commit Directory.</li></ol><h6 id="版本切换"><a href="#版本切换" class="headerlink" title="版本切换"></a>版本切换</h6><p> 点击底部的Git菜单,然后选择想要的版本,右键弹出菜单,选择checkout即可切换到指定版本</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803145928.png" alt="image-20210803145928023"></p><h6 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h6><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803154451.png" alt="image-20210803154450935"></p><p>当然,还可以从当前版本创建分支,比如直接点击4,也可以创建.但是从示意图这个可以选择历史版本创建分支,我认为是最方便自由的.</p><h6 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h6><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803155259.png" alt="image-20210803155259241"></p><h6 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h6><p><strong>方法一, 选择项目,右键, 步骤如下图所示.</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803161152.png" alt="image-20210803161152562"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803161515.png" alt="image-20210803161515447"></p><p><strong>方法二, 从底部分支入口合并</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803161657.png" alt="image-20210803161657456"></p><p>Tips:  方法二,点击合并会直接合并,不会向方法一提供日志功能, 使用哪种根据自己喜好来决定.</p><h4 id="IDEA集成Github"><a href="#IDEA集成Github" class="headerlink" title="IDEA集成Github"></a>IDEA集成Github</h4><h5 id="登录github账号"><a href="#登录github账号" class="headerlink" title="登录github账号"></a>登录github账号</h5><ol><li>IDEA设置中的pluign中查看是否有github插件, 如果没有则安装</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803165233.png" alt="image-20210803165233852"></p><ol start="2"><li>在设置中的github 添加账号</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803165613.png" alt="image-20210803165613499"></p><p>由于账号密码登录经常显示404, 下面介绍通过token的登录方式</p><h6 id="获取登录Token"><a href="#获取登录Token" class="headerlink" title="获取登录Token"></a>获取登录Token</h6><ol><li>github账号—&gt;setting—&gt;developer settings</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803170909.png" alt="image-20210803170909429"></p><ol start="2"><li>选择Personal access tokens—&gt;create new token,当然如果有,就没必要再次生成了.记住就好了.</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803171435.png" alt="image-20210803171435492"></p><ol start="3"><li>添加token,开放权限与有效期均自定义选择</li><li>将生成的token复制到idea中,成功后会显示自己的账号.</li></ol><h5 id="分享项目到github"><a href="#分享项目到github" class="headerlink" title="分享项目到github"></a>分享项目到github</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803180338.png" alt="image-20210803180338200"></p><h5 id="推送与拉取"><a href="#推送与拉取" class="headerlink" title="推送与拉取"></a>推送与拉取</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803180949.png" alt="image-20210803180949319"></p><h5 id="IDEA-克隆仓库代码"><a href="#IDEA-克隆仓库代码" class="headerlink" title="IDEA 克隆仓库代码"></a>IDEA 克隆仓库代码</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803182139.png" alt="image-20210803182139413"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210803182255.png" alt="image-20210803182255727"></p><h4 id="Gitee使用"><a href="#Gitee使用" class="headerlink" title="Gitee使用"></a>Gitee使用</h4><h5 id="结合git客户端"><a href="#结合git客户端" class="headerlink" title="结合git客户端"></a>结合git客户端</h5><p>在gitee上创建一个新仓库,就会出现如下图所示的入门教程.</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210804112726.png" alt="image-20210804112726723"></p><h5 id="IDEA集成Gitee"><a href="#IDEA集成Gitee" class="headerlink" title="IDEA集成Gitee"></a>IDEA集成Gitee</h5><ol><li>idea中安装gitee插件</li><li>操作参见github, 同样是add文件,commit,share…</li><li>pull,push,clone 与github一致…</li></ol><h5 id="gitee-迁移github项目"><a href="#gitee-迁移github项目" class="headerlink" title="gitee 迁移github项目"></a>gitee 迁移github项目</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210804114505.png" alt="image-20210804114505544"></p><h4 id="git常见问题"><a href="#git常见问题" class="headerlink" title="git常见问题"></a>git常见问题</h4><h5 id="Q-使用gitee-clone仓库-输入账号密码错误后-如何修改"><a href="#Q-使用gitee-clone仓库-输入账号密码错误后-如何修改" class="headerlink" title="Q: 使用gitee clone仓库,输入账号密码错误后,如何修改?"></a>Q: 使用gitee clone仓库,输入账号密码错误后,如何修改?</h5><blockquote><p>电脑的控制面板–&gt;用户账户–&gt;管理Windows凭据, 找到gitee,重新输入正确的账号密码</p></blockquote><h5 id="查看人家的项目时-ReadMe文档中的图片无法显示"><a href="#查看人家的项目时-ReadMe文档中的图片无法显示" class="headerlink" title="查看人家的项目时,ReadMe文档中的图片无法显示"></a>查看人家的项目时,ReadMe文档中的图片无法显示</h5><blockquote><p>由于ip被墙导致国内经常无法连接github的ip地址, 可以在win系统下, 修改hosts文件  C:\Windows\System32\drivers\etc\hosts</p></blockquote><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true"># GitHub520 Host Start  每小时更新,请自行参考官方开源库设置</span><span class="token attr-name">140.82.113.25</span> <span class="token attr-value">                alive.github.com</span><span class="token attr-name">140.82.112.25</span> <span class="token attr-value">                live.github.com</span><span class="token attr-name">185.199.108.154</span> <span class="token attr-value">              github.githubassets.com</span><span class="token attr-name">140.82.114.21</span> <span class="token attr-value">                central.github.com</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              desktop.githubusercontent.com</span><span class="token attr-name">185.199.108.153</span> <span class="token attr-value">              assets-cdn.github.com</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              camo.githubusercontent.com</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              github.map.fastly.net</span><span class="token attr-name">199.232.5.194</span> <span class="token attr-value">                github.global.ssl.fastly.net</span><span class="token attr-name">140.82.112.3</span> <span class="token attr-value">                 gist.github.com</span><span class="token attr-name">185.199.108.153</span> <span class="token attr-value">              github.io</span><span class="token attr-name">140.82.114.4</span> <span class="token attr-value">                 github.com</span><span class="token attr-name">192.0.66.2</span> <span class="token attr-value">                   github.blog</span><span class="token attr-name">140.82.112.6</span> <span class="token attr-value">                 api.github.com</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              raw.githubusercontent.com</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              user-images.githubusercontent.com</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              favicons.githubusercontent.com</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              avatars5.githubusercontent.com</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              avatars4.githubusercontent.com</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              avatars3.githubusercontent.com</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              avatars2.githubusercontent.com</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              avatars1.githubusercontent.com</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              avatars0.githubusercontent.com</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              avatars.githubusercontent.com</span><span class="token attr-name">140.82.113.10</span> <span class="token attr-value">                codeload.github.com</span><span class="token attr-name">52.217.135.113</span> <span class="token attr-value">               github-cloud.s3.amazonaws.com</span><span class="token attr-name">52.217.74.20</span> <span class="token attr-value">                 github-com.s3.amazonaws.com</span><span class="token attr-name">52.217.0.11</span> <span class="token attr-value">                  github-production-release-asset-2e65be.s3.amazonaws.com</span><span class="token attr-name">52.216.250.204</span> <span class="token attr-value">               github-production-user-asset-6210df.s3.amazonaws.com</span><span class="token attr-name">52.217.74.124</span> <span class="token attr-value">                github-production-repository-file-5c1aeb.s3.amazonaws.com</span><span class="token attr-name">185.199.108.153</span> <span class="token attr-value">              githubstatus.com</span><span class="token attr-name">64.71.144.202</span> <span class="token attr-value">                github.community</span><span class="token attr-name">185.199.108.133</span> <span class="token attr-value">              media.githubusercontent.com</span><span class="token comment" spellcheck="true"># Update time: 2021-08-04T10:15:00+08:00</span><span class="token comment" spellcheck="true"># Update url: https://raw.hellogithub.com/hosts</span><span class="token comment" spellcheck="true"># Star me: https://github.com/521xueweihan/GitHub520</span><span class="token comment" spellcheck="true"># GitHub520 Host End</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="我想clone人家项目-但是很慢-怎么样提速"><a href="#我想clone人家项目-但是很慢-怎么样提速" class="headerlink" title="我想clone人家项目,但是很慢,怎么样提速?"></a>我想clone人家项目,但是很慢,怎么样提速?</h5><blockquote><p>主流的方法有三个:</p><ol><li>修改host文件  (参考上面的开源库) ;</li><li>使用gitee克隆,然后去gitee下载  (推荐指数: ★★★);</li><li>使用gitclone命令 (推荐指数: ★★★★★), 使用教程参考<a href="https://www.gitclone.com/">官网</a>,推荐方法一,方法二在push项目时候出错.</li><li>使用github镜像下载, <a href="https://github.com.cnpmjs.org/">镜像一</a>, <a href="https://hub.fastgit.org/">镜像二</a> (推荐指数: ★★★★★);</li></ol></blockquote><h5 id="我push我的项目-每次push都需要输入账号密码-怎么解决"><a href="#我push我的项目-每次push都需要输入账号密码-怎么解决" class="headerlink" title="我push我的项目,每次push都需要输入账号密码,怎么解决?"></a>我push我的项目,每次push都需要输入账号密码,怎么解决?</h5><blockquote><p>参考上面git命令的设置账号密码,设置如下指令即可达到主需要输入一次性账号密码</p></blockquote><pre><code>//保存账号密码,执行后,输入一次即可git config --global credential.helper store//清除保存的账号密码git config --global credential.helper reset</code></pre>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL知识详解</title>
      <link href="2020/10/28/mysql/"/>
      <url>2020/10/28/mysql/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a><a href="https://www.mysql.com/">MySQL</a></h2><p>mysql是一款免费的关系型数据库,它沿用了Linux的理念, 一切皆是文件, mysql底层其实也是文件,通过文件记录着各个数据. 另外,mysql跟linux一样, 对用户权限控制粒度划分很细,需要严格控制好root权限哦.</p><h3 id="下载与安装配置"><a href="#下载与安装配置" class="headerlink" title="下载与安装配置"></a>下载与安装配置</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>官网地址:  <a href="https://www.mysql.com/">https://www.mysql.com/</a></p><p> 本人使用win系统,因此使用win版本的mysql记录下载教程,其余系统操作步骤一样,只是最后一步,切换系统,选择对应的mysql即可.</p><p>现在windows几乎都是64位操作系统,如果你使用的32位,直接第三步选择32位安装文件即可,此处以64位操作系统讲解</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210926134159.png" alt="mysql下载"></p><h5 id="mysql的版本说明"><a href="#mysql的版本说明" class="headerlink" title="mysql的版本说明"></a>mysql的版本说明</h5><ol><li> MySQL Community Server 社区版本，开源免费，但不提供官方技术支持。</li><li>MySQL Enterprise Edition 企业版本，需付费，可以试用30天。</li><li>MySQL Cluster 集群版，开源免费。可将几个MySQL Server封装成一个Server。</li><li>MySQL Cluster CGE 高级集群版，需付费。</li><li>MySQL Workbench（GUITOOL）一款专为MySQL设计的ER/数据库建模工具。它是著名的数据库设计工具DBDesigner4的继任者。MySQLWorkbench又分为两个版本，分别是社区版（MySQL Workbench OSS）、商用版（MySQL WorkbenchSE）。</li></ol><p>Generally Available（GA）Release 是指软件的通用版本，一般指正式发布的版本。</p><p>由于mysql8不再提供win64的msi安装包,故此处以5+版本做说明</p><ul><li>mysql-5.5.19-win32.msi，windows安装包，msi安装包是用msiexec安装完成的。windows下双击, 然后根据向导安装即可，跟安装微信一样简单方便。</li><li>mysql-5.5.19.zip，这个是windows源文件，需要编译。不建议使用 </li><li>mysql-5.5.19-win32.zip，这个文件解包后即可使用，是编译好的windows32位MySQL。需要手工配置, 32位,64位win系统都可以使用</li><li>mysql-5.5.19-win64.zip , 64位win系统专用的文件压缩包,需要手工配置, 一般我们下载此版本</li></ul><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="MSI文件安装配置"><a href="#MSI文件安装配置" class="headerlink" title="MSI文件安装配置"></a>MSI文件安装配置</h5><p>如果是下载的MSI安装文件, 跟着安装向导,一步步选择配置即可</p><h5 id="zip文件安装与配置"><a href="#zip文件安装与配置" class="headerlink" title="zip文件安装与配置"></a>zip文件安装与配置</h5><p>此处以C盘安装配置做讲解,实际工作中,建议安装在非系统盘,本人一般习惯在D盘新建一个dev目录,安装开发用到的各种软件.</p><p>5+版本和8+版本手动安装配置操作一样, 步骤如下:  </p><ol><li>将加压后的mysql文件目录放在指定文件夹,此处的解压文件目录实际上就是安装目录.</li><li>以管理员身份运行命令行窗口</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210926141131.jpg" alt="1727568-20190915194138600-1666145922"></p><ol start="3"><li>切换路径到mysql的bin目录下</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210926141228.jpg" alt="1727568-20190915194319422-1269147823"></p><ol start="4"><li>安装mysql的服务：mysqld –install</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210926141949.jpg" alt="1727568-20190915194355509-621408710"></p><ol start="5"><li>初始化mysql，在这里，初始化会产生一个随机密码,如下图框框所示，记住这个密码，后面会用到(mysqld –initialize –console)</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210926142057.jpg" alt="1727568-20190915194537624-1288770126"></p><ol start="6"><li>开启mysql的服务(net start mysql)</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210926142138.jpg" alt="1727568-20190915194809019-447378790"></p><ol start="7"><li>登录验证，mysql是否安装成功！(要注意上面产生的随机密码，不包括前面符号前面的空格，否则会登陆失败)，如果和下图所示一样，则说明你的mysql已经安装成功！注意，，一定要先开启服务，不然会登陆失败，出现拒绝访问的提示符！！！</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210926142644.jpg" alt="1727568-20190915194855594-1799062186"></p><ol start="8"><li>修改密码. 由于初始化产生的随机密码太复杂，，不便于我们登录mysql</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210926142741.jpg" alt="1727568-20190915195232011-1164270181"></p><ol start="9"><li>配置全局变量, 建议配置在用户环境变量,而非系统环境变量</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210926143040.jpg" alt="1727568-20190915195658938-215279743"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210926143149.jpg" alt="1727568-20190915195808186-1920486822"></p><ol start="10"><li>指定mysql存放数据的目录地址, 一般我建议就在当前安装目录下或者平级目录下新建一个mysqlData文件夹.</li><li>创建mysql的配置文件;  在mysql目录下创建一个ini或cnf配置文件，在这里我创建的是ini配置文件，里面写的代码是mysql的一些基本配置</li></ol><pre class="line-numbers language-ini"><code class="language-ini"><span class="token selector">[mysqld]</span># 设置3306端口<span class="token constant">port</span><span class="token attr-value"><span class="token punctuation">=</span>3306</span># 设置mysql的安装目录<span class="token constant">basedir</span><span class="token attr-value"><span class="token punctuation">=</span>D:\mysql\mysql-8.0.17-winx64</span># 设置mysql数据库的数据的存放目录, 根据第10步你创建的目录名字一样<span class="token constant">datadir</span><span class="token attr-value"><span class="token punctuation">=</span>D:\mysql\mysql-8.0.17-winx64\mysqlData</span># 允许最大连接数<span class="token constant">max_connections</span><span class="token attr-value"><span class="token punctuation">=</span>200</span># 允许连接失败的次数。<span class="token constant">max_connect_errors</span><span class="token attr-value"><span class="token punctuation">=</span>10</span># 服务端使用的字符集默认为utf8mb4<span class="token constant">character-set-server</span><span class="token attr-value"><span class="token punctuation">=</span>utf8mb4</span># 创建新表时将使用的默认存储引擎<span class="token constant">default-storage-engine</span><span class="token attr-value"><span class="token punctuation">=</span>INNODB</span># 默认使用“mysql_native_password”插件认证#mysql_native_password<span class="token constant">default_authentication_plugin</span><span class="token attr-value"><span class="token punctuation">=</span>mysql_native_password</span><span class="token selector">[mysql]</span># 设置mysql客户端默认字符集<span class="token constant">default-character-set</span><span class="token attr-value"><span class="token punctuation">=</span>utf8mb4</span><span class="token selector">[client]</span># 设置mysql客户端连接服务端时默认使用的端口<span class="token constant">port</span><span class="token attr-value"><span class="token punctuation">=</span>3306</span><span class="token constant">default-character-set</span><span class="token attr-value"><span class="token punctuation">=</span>utf8mb4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210926144929.png" alt="image-20210926144929477"></p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 1. 安装服务</span>mysqld --install<span class="token comment" spellcheck="true"># 2. 初始化</span>mysqld --initialize --console<span class="token comment" spellcheck="true"># 3. 开启服务</span>net start mysql<span class="token comment" spellcheck="true"># 4. 关闭服务</span>net stop mysql<span class="token comment" spellcheck="true"># 5. 删除服务</span>sc delete mysql<span class="token comment" spellcheck="true"># 6.登录</span>mysql -u root -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="图形化界面工具"><a href="#图形化界面工具" class="headerlink" title="图形化界面工具"></a>图形化界面工具</h3><h4 id="Navicat"><a href="#Navicat" class="headerlink" title="Navicat"></a>Navicat</h4><p>一款收费的数据库视图工具.</p><p>建议使用之前,看下基本教程,此处教程略</p><h4 id="sqlyog"><a href="#sqlyog" class="headerlink" title="sqlyog"></a>sqlyog</h4><p>一款免费的数据库视图工具,提供免费的社区版和收费的专业版, 访问<a href="https://www.webyog.com/">官网</a>地址即可下载.</p><p>建议使用之前,看下基本教程,此处教程略</p><h3 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h3><p>mysql基础知识主要是了解相关基础概念与学会简单使用, 详细原理参考下面的进阶.</p><h4 id="数据库操作-create-R-read-U-update-D-delete"><a href="#数据库操作-create-R-read-U-update-D-delete" class="headerlink" title="数据库操作 [create]R[read]U[update]D[delete]"></a>数据库操作 [create]R[read]U[update]D[delete]</h4><h5 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h5><p>mysql -u 账号 -p</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210913154342.png" alt="image-20210913154342947"></p><h5 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h5><h6 id="图形化创建"><a href="#图形化创建" class="headerlink" title="图形化创建"></a>图形化创建</h6><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210913140543.png" alt="image-20210913140536761"></p><h6 id="sql语句创建表"><a href="#sql语句创建表" class="headerlink" title="sql语句创建表"></a>sql语句创建表</h6><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> db_name <span class="token punctuation">[</span>create_specification  create_specification<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>示例: </p><pre class="line-numbers language-sql"><code class="language-sql"> <span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span>  <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token number">db2</span> <span class="token keyword">CHARACTER SET</span> utf8mb4 <span class="token keyword">COLLATE</span> utf8mb4_general_ci<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>[ xxx] 代表该参数可选,非必输入项;</li><li>IF NOT EXISTS ,如果不添加, 当存在该数据库时候会报错,添加该语句后,如果存在,就不创建,也不会报错.</li><li>db_name最好使用<code>xxx</code>, 使用反引号(win系统中的tab上面的那个键)能让表名更安全, 特别是涉及到关键字的时候,如果不使用反引号,是会报错的.</li><li>create_specification是创建数据库的参数,对应图形化创建中的字符集与数据排序规则;<ul><li>CHARACTER SET xxx<ul><li>默认字符集为utf8, 一般指定为utf8mb4, 它支持表情,是utf8的增强版</li></ul></li><li>COLLATE  xxx<ul><li>默认utf8_bin, 区分大小写,当切换字符集后,一般选择utf8mb4_general_ci, 它不区分大小写.</li></ul></li></ul></li></ul><h5 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h5><ul><li>查看所有的数据库:  show databases;       注意,结尾带分号.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210913154519.png" alt="image-20210913154519443"></p><ul><li>查看已经创建的数据库的定义信息:  show create database db_name</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210913154103.png" alt="image-20210913154103173"></p><h5 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h5><pre class="line-numbers language-mysql"><code class="language-mysql"># 使用db2020这个数据库use db2020;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h5><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token punctuation">[</span><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">]</span> xxx<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">#注意,结尾带分号.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210913154702.png" alt="image-20210913154702914"></p><h4 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h4><h5 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h5><p>在指定数据库中,执行如下命令:</p><pre class="line-numbers language-mysql"><code class="language-mysql">create table xx (field dataType, field dataType,...,field dataType) character set 字符集 collate 校对规则 engine 引擎<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>field,字段名,也就是列名, 有多种数据格式可选;</li><li>character set ,默认使用所在数据库的字符集, 一般不会在表里面指定;</li><li>校对规则也是默认使用所在数据库的校对规则,一般不需要指定</li><li>engine, 存在多种选项,默认是innodb.后面会详细介绍.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210913170929.png" alt="image-20210913170929920"></p><h6 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h6><p>comment, 解释字段</p><pre class="line-numbers language-mysql"><code class="language-mysql">create table tb_01(    `id` bigint(20) not null unique auto_increment comment '编号',    `user_name` varchar(20) not null default '' comment '用户名') comment ='用户表'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="字段数据类型"><a href="#字段数据类型" class="headerlink" title="字段数据类型"></a>字段数据类型</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210913171831.png" alt="image-20210913171831012"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210914101253.png" alt="image-20210914101253462"></p><h6 id="符号整数"><a href="#符号整数" class="headerlink" title="符号整数"></a>符号整数</h6><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#默认有符号</span><span class="token keyword">create</span> <span class="token keyword">table</span> t1 <span class="token punctuation">(</span>param <span class="token keyword">tinyint</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#unsigned 无符号</span><span class="token keyword">create</span> <span class="token keyword">table</span> t1 <span class="token punctuation">(</span>param <span class="token keyword">tinyint</span> unsigned<span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h6 id="位类型bit-M"><a href="#位类型bit-M" class="headerlink" title="位类型bit[M]"></a>位类型bit[M]</h6><ul><li>bit字段显示时, 按照位的方式显示;</li><li>如果只有0,1,可以考虑使用bit(1), 以节约空间</li><li>M指位数,默认1, 最多64位.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210914105131.png" alt="image-20210914105131428"></p><h6 id="Decimal-M-D-类型"><a href="#Decimal-M-D-类型" class="headerlink" title="Decimal[M,D]类型"></a>Decimal[M,D]类型</h6><p>表示列可以存储<code>D</code>位小数的<code>M</code>位数。</p><ul><li><p>可以支持更加精确的小数位, M是总精度位数, D是小数点的位数,</p></li><li><p>M最大65, 默认是10,  D最大30 ,默认是0;</p><p>  示例:</p><pre class="line-numbers language-sql"><code class="language-sql">amount <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># amount列最多可以存储6位数字，小数位数为2位; 因此，amount列的范围是从-9999.99到9999.99。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h6 id="字符串的基本使用"><a href="#字符串的基本使用" class="headerlink" title="字符串的基本使用"></a>字符串的基本使用</h6><ul><li>char(N)<ul><li>存储空间固定,最大为255==字符==(非字节)</li><li>N指存储的==字符==个数</li><li>长度不够时内部存储使用<strong>空格</strong>填充。</li><li>若字段本身末尾存在空格，检索出来自动截断末尾空格</li><li>若字段本身前端存在空格，是不会截断的。</li><li>当输入的字符长度超过指定长度时，char会截取超出的字符。并发出warning警告</li><li>适用于固定长度的存储, 比如手机号,身份证号等</li></ul></li></ul><p>示例:  char(4), 指可以存储4个字符(中英文,数字,符号都算1个字符), 你存一个0,和存储”你好中国”占用的存储空间是一致的,因为存储空间在指定的时候就固定了.</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210914113418.png" alt="image-20210914113418121"></p><p>关于char最大255长度是字符还是字节, 翻了一些资料,有人说是字节有人说是字符,最后只好自己亲自测试了. 最终确认是可以存储255个字符.</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210914133653.png" alt="image-20210914133653731"></p><ul><li><p>vechar(N)</p><ul><li>存储空间不固定，根据字段长度动态决定。</li><li>N指存储的字符数, 数字字母中文符号均当做一个字符</li><li>当指定字段长度后, 实际存储长度不足时,会根据实际位数分配位数.</li><li>最大长度为 65535 字节, N代表存储的字符数,最大存储字符个数需要根据编码来确定</li><li>最大长度 = 字符长度 + [长度记录：(1~3) B] + [null标志位：1B]</li><li>需要额外的1~3个字节记录字符串的长度，字符串长度小于255字节使用1个字节，否则使用2个。</li></ul><p>  例如： 当定义一个字段类型为 varchar(5)，表示最大支持存储5个字符串,存储时,数字字母汉字符号均被当做一个字符串, 同样是一个字符串, “a”, 和字符串”中”, 占用的存储空间是不一致的.</p><p>  当插入的值为”abc”这一字符串时，那么实际存储大小为3个字节，除此之外，varchar还需要使用1个额外字节（因为‘abc’字节数＜255）来记录字符串的长度。而当插入”abc中国”时, 如果是gbk编码(1汉字=2字节), 则中国占用4字节,总字节数是3+4+1=8字节,如果是utf8(1汉字=3字节),则”中国”占用6字节,总共占用3+6+1=10字节</p><p>  <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210914114243.png" alt="image-20210914114243447"></p></li></ul><h6 id="添加自动更新当前时间"><a href="#添加自动更新当前时间" class="headerlink" title="添加自动更新当前时间"></a>添加自动更新当前时间</h6><pre class="line-numbers language-sql"><code class="language-sql">login_time <span class="token keyword">TIMESTAMP</span>  <span class="token comment" spellcheck="true">#字段名</span><span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h5><h6 id="增加指定位置的列"><a href="#增加指定位置的列" class="headerlink" title="增加指定位置的列"></a>增加指定位置的列</h6><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true"># 在emp表的resume列后面增加imgae列</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> emp <span class="token keyword">ADD</span> image <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">AFTER</span> <span class="token punctuation">`</span>resume<span class="token punctuation">`</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="修改列宽度"><a href="#修改列宽度" class="headerlink" title="修改列宽度"></a>修改列宽度</h6><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#将name的宽度从20修改到100,并设置默认值</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> emp <span class="token keyword">MODIFY</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="修改列名"><a href="#修改列名" class="headerlink" title="修改列名"></a>修改列名</h6><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE emp1 CHANGE `name` user_name VARCHAR(50) NOT NULL DEFAULT ''<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h6><pre class="line-numbers language-mysql"><code class="language-mysql">RENAME TABLE emp TO emp1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="改变表字符集"><a href="#改变表字符集" class="headerlink" title="改变表字符集"></a>改变表字符集</h6><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE emp1 CHARSET utf8mb4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h5><pre class="line-numbers language-mysql"><code class="language-mysql">#查看表结构, 表名为empDESC  emp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><h6 id="删除指定列"><a href="#删除指定列" class="headerlink" title="删除指定列"></a>删除指定列</h6><pre class="line-numbers language-mysql"><code class="language-mysql">#示例: 删除emp表中的job列ALTER TABLE emp DROP job<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h6><pre class="line-numbers language-mysql"><code class="language-mysql"># drop 是直接删除表信息，速度最快，但是无法找回数据drop table user;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="删除表数据"><a href="#删除表数据" class="headerlink" title="删除表数据"></a>删除表数据</h6><pre class="line-numbers language-mysql"><code class="language-mysql"># truncate 是删除表数据，不删除表的结构，速度排第二，但不能与where一起使用truncate table user;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="删除表指定行"><a href="#删除表指定行" class="headerlink" title="删除表指定行"></a>删除表指定行</h6><pre class="line-numbers language-mysql"><code class="language-mysql">#delete 是删除表中的数据，不删除表结构，速度最慢，但可以与where连用，可以删除指定的行delete from user where user_id = 1;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h6><ul><li><p>语句类型：delete语句是数据库操作语言（DML），truncate，drop是数据库定义语言（DDL）；</p></li><li><p>效率：一般来说 drop &gt; truncate&gt; delete；</p></li><li><p>是否删除表结构：truncate和delete 只删除数据不删除表结构，truncate 删除后将重建索引（新插入数据后id从0开始记起），而 delete不会删除索引 （新插入的数据将在删除数据的索引后继续增加），drop语句将删除表的结构包括依赖的约束，触发器，索引等；</p></li><li><p>安全性：drop和truncate删除时不记录MySQL日志，不能回滚，delete删除会记录MySQL日志，可以回滚；</p></li><li><p>返回值：delete 操作后返回删除的记录数，而 truncate 返回的是0或者-1（成功则返回0，失败返回-1）；</p></li></ul><h5 id="表复制"><a href="#表复制" class="headerlink" title="表复制"></a>表复制</h5><h6 id="表数据复制"><a href="#表数据复制" class="headerlink" title="表数据复制"></a>表数据复制</h6><p>指将一个表中的数据,插入自己或者另外一张表的过程,</p><pre class="line-numbers language-mysql"><code class="language-mysql">-- 演示表之间复制, 将emp表中的五列数据复制到tab01中去INSERT INTO tab01(id, `name`, sal, job,deptno)SELECT empno, ename, sal, job, deptno FROM emp;-- 表的自我复制, 将tab01的数据复制一份插入自身表INSERT INTO tab01SELECT * FROM tab01;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="表结构复制"><a href="#表结构复制" class="headerlink" title="表结构复制"></a>表结构复制</h6><p>指把一个表的结构复制到另外一张表.</p><pre class="line-numbers language-mysql"><code class="language-mysql">-- 复制emp表的结构  create table tab2 like emp;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>示例:  删除一个表中重复的数据</p><pre class="line-numbers language-mysql"><code class="language-mysql">-- 方法有多种,此处举例一种我测试验证通过的-- 人为增加重复数据INSERT INTO dept SELECT * FROM dept-- 1.创建临时表CREATE TABLE temp LIKE dept-- 2.通过distinct查询,将dept的数据复制到tempINSERT INTO temp SELECT DISTINCT *  FROM dept-- 3 删除原dept表DROP TABLE dept-- 4 将temp表改名为deptRENAME TABLE temp TO dept<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="行操作"><a href="#行操作" class="headerlink" title="行操作"></a>行操作</h4><h5 id="插入行数据"><a href="#插入行数据" class="headerlink" title="插入行数据"></a>插入行数据</h5><pre class="line-numbers language-mysql"><code class="language-mysql"># 插入一条记录INSERT INTO emp1(id, user_name,sex, salary, `resume`) VALUES(8,'阿宝','女',8000,'会计');#插入多条记录INSERT INTO emp1(id, user_name,sex, salary, `resume`) VALUES(10,'小王','女',7000,'人事'),(9,'小张','男',9000,'开发');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>注意事项</p><ul><li>插入的数据类型应与对应字段类型一致</li><li>数据长度应在列规定的范围内</li><li>values中的数据位置应与需要插入的列一一对应;</li><li>字符和日期类型数据应该包含在单引号中;</li><li>如果列未指定非空,则可以插入null</li><li>给表中所有字段添加内容,则可以不写前面的字段名;</li><li>一次插入多行数据时,只需要以逗号分隔,添加一份新数据即可.</li></ul><h5 id="更新行操作"><a href="#更新行操作" class="headerlink" title="更新行操作"></a>更新行操作</h5><pre class="line-numbers language-mysql"><code class="language-mysql">update tb_name set col_name=expr1[, col_name2=expr2] [where condition]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>示例:</p><pre class="line-numbers language-mysql"><code class="language-mysql">-- 1. 更新指定列的所有行  (一列)UPDATE emp1 SET salary =5000-- 2. 更新小王的薪水为8000 (一行)UPDATE emp1 SET salary = 8000 WHERE user_name="小王"-- 更新小张的生日为"1990-1-1", 薪水在原来的基础上加1K (多列一行)UPDATE emp1 SET birthday="1990-1-1", salary=salary+1000 WHERE user_name="小张"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意事项</p><ul><li>update可以更新指定列的所有行, 要慎用, 一般带着指定条件更新;</li><li>如果需要修改多个列,则可以通过字段set col1 =exp1, col2=expr2来指定;</li></ul><h5 id="删除行"><a href="#删除行" class="headerlink" title="删除行"></a>删除行</h5><pre class="line-numbers language-mysql"><code class="language-mysql">delete from tb_name [where condition]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>示例:</p><pre class="line-numbers language-mysql"><code class="language-mysql">-- 1. 删除指定行DELETE FROM emp1 WHERE user_name='阿宝'-- 2. 删除表所有的行DELETE FROM emp1  等价于  truncate table emp1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>注意事项:</p><ul><li>删除语句应该带where条件,不然会删除整个表的数据</li><li>当删除表的所有数据时候, 不会删除表结构, 如果需要删除整表,参考表删除操作.</li></ul><h5 id="查询语句"><a href="#查询语句" class="headerlink" title="查询语句"></a>查询语句</h5><pre class="line-numbers language-mysql"><code class="language-mysql">-- 指定列名select [distinct] *|[column1, column2, column3....] from tb_name-- 通过表达式查询并排序select * |[column1 | expr1 [as] col1, column2 | expr2 as col2...] from tb_name where conditions order by col_name asc|desc   -- 别名的使用, as可省略, 别名如果出现空格,需要双引号SELECT id,`name` user_name FROM tb2SELECT id, `name` AS "User Name" FROM tb2SELECT id, `name`   "User Name" FROM tb2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意事项:</p><ul><li>distinct, 除重, *代表所有列</li><li>column指定列名,可以一次查询1或者多列;</li><li>可以通过表达式计算得出虚拟列;</li><li>可以通过as关键字自定义列的别名;</li><li>可以通过where进行条件过滤查询;</li><li>asc(ascend )代表升序,默认不写, desc(descend)代表降序;</li><li>group by为分组函数, 用于对查询结果进行分组统计, having可选, 代表使用子句对分组后的结果进行过滤.</li><li>dual 是mysql中的亚元表,当没有表时,可以使用它替代.</li><li>as 别名, 其中as可忽略, 别名如果是多个单词组成,则需要双引号括起来.</li></ul><h6 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h6><ul><li><p>使用统计函数</p></li><li><p>求和函数</p></li><li><p>平均函数</p></li><li><p>分组函数</p></li></ul><pre class="line-numbers language-mysql"><code class="language-mysql">-- 使用统计函数select count(*)| count(列名) from student where conditions-- 求和函数SELECT SUM(math)[, sum(chinese),sum(english)...] FROM student;-- 平均函数SELECT AVG(math) FROM student;-- 最大/最小函数SELECT MAX(math) AS math_high_socre, MIN(math)   AS math_low_socreFROM student;-- 分组函数select col1, col2,col3.. from tb_name group by colname [having conditions]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>字符串函数</li></ul><p> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210922144132.png" alt="image-20210922132135301"></p><ul><li>数学函数</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210922144558.png" alt="image-20210922144558443"></p><ul><li> 时间日期函数</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210922145816.png" alt="image-20210922145816130"></p><ul><li> 加密函数</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210922171522.png" alt="image-20210922171522816"></p><blockquote><p>user(), 显示结果为:  用户@IP 地址, 可以查看用户名, ip</p></blockquote><ul><li> 流程控制函数</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210922171756.png" alt="image-20210922171755993"></p><p>部分示例</p><pre class="line-numbers language-mysql"><code class="language-mysql">--  统计每个学生的总分SELECT `name`, (chinese+english+math) FROM student;--  在所有学生总分加 10 分的情况SELECT `name`, (chinese + english + math + 10) FROM student;--  使用别名表示学生分数。SELECT `name` AS '名字', (chinese + english + math + 10) AS total_scoreFROM student;-- 查询学生表中韩xx名字, 总分, 并以总分升序排列,SELECT `name`, (chinese + english + math) AS total_score FROM studentWHERE `name` LIKE '韩%'ORDER BY total_score asc;-- 显示每个部门的平均工资和最高工资SELECT MAX(sal), AVG(sal),deptno FROM emp GROUP BY deptno-- 显示每个部门每种岗位的平均工资与最低工资SELECT MAX(sal), AVG(sal),deptno, job FROM emp GROUP BY deptno,job-- 显示平均工资低于 2000 的部门号和它的平均工资 SELECT AVG(sal) AS avg_sal, deptno FROM emp GROUP BY deptno HAVING avg_sal <2000-- 以首字母小写的方式显示所有员工emp表的姓名-- 思路:  获取ename, 截取第一个字符转小写, 拼接后面的字符.SELECT CONCAT(LCASE(SUBSTRING(ename,1,1)),   SUBSTRING(ename,2)) AS new_name FROM emp;SELECT CONCAT(LCASE(LEFT(ename,1)),   SUBSTRING(ename,2)) AS new_nameFROM emp;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 where 子句中经常使用的运算符</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210922101218.png" alt="image-20210922101218801"></p><h6 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h6><p>使用like操作符</p><ul><li>%: 匹配多个字符</li><li>_ :匹配单个字符</li></ul><p>示例</p><pre class="line-numbers language-mysql"><code class="language-mysql">--   如何显示首字符为 S 的员工姓名和工资?SELECT ename, sal FROM emp WHERE ename LIKE 'S%'--   如何显示第三个字符为大写 O 的所有员工的姓名和工资?SELECT ename, sal FROM emp WHERE ename LIKE '__O%'--    如何显示没有上级的雇员的情况SELECT * FROM emp WHERE mgr IS NULL;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h6><pre class="line-numbers language-mysql"><code class="language-mysql">select ... limit start,rows-- 表示从start+1开始,往后查询rows行数据..  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>示例</p><pre class="line-numbers language-mysql"><code class="language-mysql"> -- 按雇员的 id 号升序取出，  每页显示 3 条记录，请显示  第 1  页SELECT * FROM emp ORDER BY empno LIMIT 0, 3;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h6><p>语法:</p><pre class="line-numbers language-mysql"><code class="language-mysql">select * from tb_name group by col1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意事项</p><ul><li>如果select语句同时包含group by, having, order by, limit , 那么它们之间的顺序是group by–&gt;having–&gt; order by–&gt;limit , 如果顺序错乱会导致查询出错.</li></ul><p>示例</p><pre class="line-numbers language-mysql"><code class="language-mysql">-- (1)  显示每种岗位的雇员总数、平均工资。SELECT COUNT(*) as emp_total, AVG(sal) as avg_sal, job FROM emp GROUP BY job;-- (2)  显示雇员总数，以及获得补助的雇员数。SELECT COUNT(*), COUNT(comm) FROM emp-- (3) 统计没有获得补助的雇员数SELECT COUNT(*), COUNT(IF(comm IS NULL, 1, NULL))FROM empSELECT COUNT(*), COUNT(*) - COUNT(comm) FROM emp-- (4)综合案例:  请统计各个部门的平均工资， 并且是大于 1000 ，并且按照平均工资从高到低排序然后取出前2条SELECT deptno, AVG(sal) AS avg_sal FROM emp GROUP BY deptno HAVING   avg_sal > 1000 ORDER BY avg_sal DESC LIMIT 0,2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h6><p>笛卡尔集: 多个表之间,由于查询条件的缺乏,导致每张表的每条数据都是对其它整表的映射. 比如A表有8条数据, B表5条, 如果没有任何条件限制,去查询</p><pre class="line-numbers language-mysql"><code class="language-mysql">select * from tableA, tableB;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样会导致查询出来的数据有8*5=40条, 这就是所谓的笛卡尔集.</p><p>当涉及多表查询时, 查询条件不应该少于(表个数-1)个条件. 这样才能避免出现笛卡尔集.</p><p>示例</p><pre class="line-numbers language-mysql"><code class="language-mysql">-- 显示各个员工的姓名，工资，及其工资的级别select ename, sal, grade from emp , salgrade where sal between losal and hisal;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>自连接</strong></p><blockquote><p>同一张表的连接查询.(把一张表当做2张表)</p></blockquote><p>示例</p><pre class="line-numbers language-mysql"><code class="language-mysql">-- 显示公司员工名字和他的上级的名字SELECT worker.ename AS '职员名' ,   boss.ename AS '上级名' FROM emp worker, emp boss WHERE worker.mgr = boss.empno;# 表取别名不需要as, 列取别名才需要.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h6 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h6><ul><li><p>子查询:   指嵌入在其它 sql 语句中的 select 语句,也叫嵌套查询</p></li><li><p>单行单列子查询: 指只返回一行数据的子查询语句;</p></li><li><p>多行单列子查询:  指返回多行数据的子查询     使用关键字  in, all, any</p></li><li><p>临时表查询(多行多列)</p></li><li><p>一行多列子查询</p></li></ul><p>示例</p><pre class="line-numbers language-mysql"><code class="language-mysql">-- (单行示例) 如何显示与 SMITH 同一部门的所有员工?-- 1. 查询出smith所在的部门编号;  2. 根据编号查询所有的员工SELECT * FROM empWHERE deptno = (    SELECT deptno    FROM emp    WHERE ename = 'SMITH')-- (多行示例) :如何查询和部门 10 的工作相同的雇员的名字、岗位、工资、部门号,  但是不含 10 号部门自己的雇员.-- 思考:  1.查出10号部门的工种;  2. 查出指定列中工种IN 步骤一中的数据,  3. 排除10号部门select ename, job, sal, deptnofrom empwhere job in (    SELECT DISTINCT job    FROM emp    WHERE deptno = 10) and deptno != 10# DISTINCT去重--  查询scshop中各个类别中,价格最高的商品信息(id,类别,价格,商品名).# 思路: 1.查询各个类别中价格最高的表;  2 查询商品信息表,  3,把步骤1,2得到的表当做临时表,用于匹配步骤2的表临时表的信息,取交集select goods_id, ecs_goods.cat_id, goods_name,shop_price form (    select cat_id , max(shop_price) as max_price     from ecs_goods group by cat_id)where temp.cat_id = ecs_goods.cat_id and temp.max_price =ecs_goods.shop_price-- 显示工资比部门 30 的所有员工的工资高的员工的姓名、工资和部门号-- 思考:  1, 求出30部门的所有员工工资, 2 使用all操作符SELECT ename, sal, deptnoFROM empWHERE sal > ALL(    SELECT sal    FROM emp        WHERE deptno = 30)-- 方法二,  1,查出30部门的最高工资, 2, 查出大于最高工资即可.SELECT ename, sal, deptnoFROM empWHERE sal > (    SELECT MAX(sal)    FROM emp    WHERE deptno = 30)-- 如何显示工资比部门 30 的其中一个员工的工资高的员工的姓名、工资和部门号-- 与上面一样, all关键字改为any即可, 或者求出部门30的工资的最小值-- 一行多列, 多个列值相等--  如何查询与 allen 的部门和岗位完全相同的所有雇员(并且不含 allen 本人)SELECT *FROM empWHERE (deptno , job) = (        SELECT deptno , job        FROM emp        WHERE ename = 'ALLEN') AND ename != 'ALLEN'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="合并查询"><a href="#合并查询" class="headerlink" title="合并查询"></a>合并查询</h5><p>主要用于where条件不太好写的时候, 使用不太多.</p><p>union all  : 不去重</p><p>union : 去重</p><pre class="line-numbers language-mysql"><code class="language-mysql">-- 示例SELECT ename,sal,job FROM emp WHERE sal>2500 UNION ALLSELECT ename,sal,job FROM emp WHERE job='MANAGER'  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="表外连接"><a href="#表外连接" class="headerlink" title="表外连接"></a>表外连接</h5><p>左外连接:  左侧表完全显示,就称之为左外连接;</p><p>右外连接:  右侧表完全显示, 就称之为右外连接;</p><pre class="line-numbers language-mysql"><code class="language-mysql">-- 语法如下select... from table1 left join table2 on conditions-- 示例,显示所有人的成绩，如果没有成绩，也要显示该人的姓名和 id 号,成绩显示为空SELECT `name`, stu.id, gradeFROM stu LEFT JOIN examON stu.id = exam.id;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h4><p>用于确保数据库中的数据满足特定的商业规则,主要包括:</p><ul><li>not null</li><li>unique</li><li>primary key</li><li>foreign key</li><li>check</li></ul><h5 id="primary-key约束"><a href="#primary-key约束" class="headerlink" title="primary key约束"></a>primary key约束</h5><p>语法:    字段名  字段类型  primary key</p><p>用于标识唯一的行数据, 方便提升查询效率</p><ul><li>当定义为主键后, 该字段不能为空,也不能重复;</li><li>一张表最多只能有一个主键, 可以是复合主键</li></ul><pre class="line-numbers language-mysql"><code class="language-mysql">-- 示例-- 1. 单一主键id int primary key-- 或者id int,primary key(id)  --  2. 复合主键create table t1(    id int,    user_name varchar(32),    email varchar(32),    primary key(id,user_name))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="not-null约束"><a href="#not-null约束" class="headerlink" title="not null约束"></a>not null约束</h5><p>非空,没啥知识点,</p><h5 id="unique-约束"><a href="#unique-约束" class="headerlink" title="unique 约束"></a>unique 约束</h5><p>唯一,  代表不能重复,  但是null不是具体的值, 可以插入多个null.</p><p> unique not null  使用效果类似  primary key, 区别在于unique可以有多个, 但是一张表只能有一个primary key.</p><h5 id="foreign-key-外键"><a href="#foreign-key-外键" class="headerlink" title="foreign key(外键)"></a>foreign key(外键)</h5><p>用于定义主表和从表之间的约束关系, 外键约束定义在从表上</p><pre class="line-numbers language-mysql"><code class="language-mysql">-- 语法foreign key(本表字段名) references 主表(字段名)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>主表的主键必须是primary key 或者unique ;</li><li>表的引擎必须是Innodb才行;</li><li>外键字段类型应该与主键字段类型一致.</li><li>外键字段类型的值必须在主键中出现或者为null(前提是主键可为null);</li><li>一旦建立主外键关系,数据就不可随意删除了.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210923173423.png" alt="image-20210923173423424"></p><h5 id="check约束"><a href="#check约束" class="headerlink" title="check约束"></a>check约束</h5><p>用于强制行数据必须满足的条件, mysql8.0.16以前只支持check语法, 并不会生效, 8.0.16版本后完全支持check约束.</p><pre class="line-numbers language-mysql"><code class="language-mysql">-- 示例--  测试CREATE TABLE t23 (id INT PRIMARY KEY,`name` VARCHAR(32) ,sex VARCHAR(6) CHECK (sex IN('man','woman')),sal DOUBLE CHECK ( sal > 1000 AND sal < 2000));--  添加数据INSERT INTO t23VALUES(1, 'jack', 'mid', 1);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="自增长"><a href="#自增长" class="headerlink" title="自增长"></a>自增长</h4><pre class="line-numbers language-mysql"><code class="language-mysql">-- 语法id int primary key auto_increment-- 添加自增长字段的几种方式, 假设id字段自增长insert into xxx(id, col2...) values (null, v2...)insert into xxx(col2,col3....) values (v2, v3...)insert into xxx values (null ,v2,v3....)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意事项:</p><ul><li>一般自增长和primary key/ unique搭配使用;</li><li>自增长修饰的字段为整形, 虽然小数类型也可,但是很少这样使用;</li><li>自增默认初始值为1, 也可以指定默认初始值</li><li>添加数据时, 如果指定了自增字段的值,则以指定值为准, 后面的数据在指定值基础上加1</li></ul><pre class="line-numbers language-mysql"><code class="language-mysql">-- 指定自增初始值示例CREATE TABLE t24(id INT PRIMARY KEY AUTO_INCREMENT ,`name` VARCHAR(32)NOT NULL DEFAULT '') AUTO_INCREMENT=100--  修改默认的自增长开始值ALTER TABLE t24 AUTO_INCREMENT = 10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h4><p>给数据库的字段增加索引,会导致文件存储空间增加,但是会大大提高数据的查询效率. 因为数据查询是使用最多最频繁的操作.提升搜索效率有助于缓解服务器压力.</p><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><p>没有索引的搜索是全表扫描,会挨个对比,找到所需要的结果.使用索引后,会形成一个索引的二叉树(会增加存储空间), 搜索效率变成了$\log_2n$, 但是也会降低删除操作的效率.</p><h5 id="索引类型"><a href="#索引类型" class="headerlink" title="索引类型"></a>索引类型</h5><ol><li>主键索引, primary key</li><li>唯一索引,  unique</li><li>普通索引 index</li><li>全文索引 (适用于引擎为MyISAM), 开发中一般使用Solr和ElasticSearch框架</li></ol><h5 id="索引使用"><a href="#索引使用" class="headerlink" title="索引使用"></a>索引使用</h5><pre class="line-numbers language-mysql"><code class="language-mysql">--  添加索引create [unique] index idx_name on tab_name(col_name[(length)]) [asc|desc]alter table tab_name add index [idx_name] (col_name) #添加普通索引alter table tab_name add primary key(col_name) #添加主键索引-- 示例create unique index id_idx on tab25(id)CREATE TABLE t26 (id INT ,`name` VARCHAR(32));ALTER TABLE t26 ADD PRIMARY KEY(id)-- 删除索引-- 删除普通索引drop index idx_name on table tab_namealter table tab_name drop index idx_name-- 删除主键索引, 因为一张表最多只有一个主键索引alter table tab_name drop primary key  -- 修改索引 1. 删除原索引2. 增加新索引-- 查询索引show index from tab_nameshow indexes from tab_nameshow keys from tab_namedesc tab_name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意事项</p><ul><li>较频繁的作为条件查询字段应该创建索引,不会出现在条件查询中的字段不该创建索引</li><li>唯一性太差的字段不适合单独创建索引</li><li>更新频繁的字段不适合创建索引</li></ul><h4 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h4><p>事务是用于保证数据的一致性, 它由一组相关的dml(增删改)语句组成,该组操作要么全部成功,要么全部失败.</p><p>mysql数据库控制台事务的几个操作</p><pre class="line-numbers language-mysql"><code class="language-mysql">start transaction 或者 set autocommit = off  #开启一个事务savepoint pointName  #设置备份点rollback to pointName  #回滚到指定备份点rollback   #回滚到开启事务点commit  #提交事务, 也是结束事务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 注意事项:</p><ul><li>如果不开启事务,默认情况下, dml操作是自动提交,不能回滚;</li><li>开启事务后, 在提交之前,可以指定回滚点, 不指定就默认回滚到开启事务的状态;</li><li>回滚只能向前,不能向后.  比如开启事务后,先后创建了A,B 二个备份点, 第一次回滚到A后, 是不能再次回滚到B的,因为在回滚到A时,已经把A后的数据给清除了.</li><li>mysql的事务机制需要innodb的存储引擎才可以使用.</li></ul><h5 id="事务的隔离级别"><a href="#事务的隔离级别" class="headerlink" title="事务的隔离级别"></a>事务的隔离级别</h5><p>多个连接开启各自事务操作的数据库中的数据时,数据库系统要负责隔离操作, 以保证各个连接在获取数据时候的准确性.  如果不考虑隔离性,可能会产生脏读, 不可重复读, 幻读.</p><ul><li>脏读</li></ul><blockquote><p>当一个事务读到了另外一个事务尚未提交的数据时,产生脏读.</p><p>大白话解释:  你看到了你不该看的东西,就是脏东西.</p></blockquote><ul><li>不可重复读</li></ul><blockquote><p>同一次查询在同一事务中多次进行,由于其它事务提交事务所做的修改或者删除,导致每次查询的结果不可重复</p></blockquote><ul><li>幻读</li></ul><blockquote><p>同一次查询在同一事务中多次进行,由于其它事务提交事务所做的插入操作,每次返回不同的结果集,此时发生幻读.</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210924161409.png" alt="image-20210924161409695"></p><h5 id="隔离级别的设置"><a href="#隔离级别的设置" class="headerlink" title="隔离级别的设置"></a>隔离级别的设置</h5><pre class="line-numbers language-mysql"><code class="language-mysql">-- 1.查询当前会话隔离级别select @@tx_isolation-- 2. 查看系统当前隔离级别select @@global.tx_isolation-- 3. 设置当前会话隔离级别, xxx代表上图4种级别set session transaction isolation level xxx-- 4. 设置全局会话隔离级别, xxx代表上图4种级别set global transaction isolation level xxx-- 5, 修改全局级别,也可以在mysql的安装目录的ini文件中添加设置transaction-isolation =xxx-- 6 repeatable read为mysql的默认级别,一般没必要修改<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="事务ACID"><a href="#事务ACID" class="headerlink" title="事务ACID"></a>事务ACID</h5><ul><li>原子性Atomicity : 指事务是一个不可分割的单位, 要么全部成功,要么全部失败;</li><li>一致性Consistency:  事务必须使数据库从一个一致性状态变动到另一个一致性状态;</li><li>隔离性Isolation:  多个用户并发访问数据库时,为了防止当前会话不被其他会话操作干扰;</li><li>持久性Durability: 事务一旦被提交,对数据库中的数据的改变就是永久性的.</li></ul><h4 id="表类型与存储引擎"><a href="#表类型与存储引擎" class="headerlink" title="表类型与存储引擎"></a>表类型与存储引擎</h4><p>mysql表类型由存储引擎决定, 总共有6种</p><ul><li>csv</li><li>memory</li><li>archive</li><li>mrg_myisam</li><li>myisam</li><li>innodb</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210924174541.png" alt="image-20210924174541539"></p><p>注意事项:</p><ul><li>MyISAM不支持事务+外键,但是访问与插入速度快;</li><li>InNoDB支持事务安全,插入效率比较低, 对比与MYISAM,由于其支持B+树索引,导致存储空间相对较大,但是查询效率很高.</li><li>MEMORY在内存中创建表,访问速度非常快, 默认使用hash索引,但是一旦mysql服务关掉,其数据也会丢失, 表结构还在.</li></ul><p>如何选择合适的引擎</p><ol><li>如果应用无需事务,优先选择MYISAM,速度快, 否则选择InNoDB;</li><li>Memory在内存中,无I/O等待, 适合存储变化频繁的不重要数据, 比如用户在线状态.</li></ol><h5 id="修改引擎"><a href="#修改引擎" class="headerlink" title="修改引擎"></a>修改引擎</h5><pre class="line-numbers language-mysql"><code class="language-mysql">alter table tbName engine = engineName<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h4><p>视图是一个虚拟表,其内容来自于真实的表(基表),目的是为了控制访问权限. 比如某类角色只能访问用户表中的部分列字段.</p><ul><li><p>视图不会生成一个新的表,只会生成一个对应的视图结构文件;</p></li><li><p>视图可以修改基表, 基表的变化也会引起视图的变化.</p></li><li><p>视图也可以再创建视图.</p></li></ul><h5 id="视图的使用"><a href="#视图的使用" class="headerlink" title="视图的使用"></a>视图的使用</h5><pre class="line-numbers language-mysql"><code class="language-mysql">-- 视图的增删改查create view view_name as select语句alter view view_name as select语句show create view view_namedrop view view_name1, view_name2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="视图的优点"><a href="#视图的优点" class="headerlink" title="视图的优点"></a>视图的优点</h5><ul><li>安全.  视图可以隔离原基表的指定列数据,给予不同的权限的人,查看不同的字段.</li><li>性能.  关系数据库经常分表存储,如果使用外键建立这些表之间的关系,这样做比较麻烦而且查询效率比较低, 通过视图可以快速进行查询.</li><li>灵活. 系统中如果有旧表,由于存在设计缺陷即将被废弃,但是生产上有些地方使用到了这些表,不能轻易修改,此时可以新建视图将其映射到那么即将废弃的表,就可以安全的升级数据库.</li></ul><h4 id="mysql权限管理"><a href="#mysql权限管理" class="headerlink" title="mysql权限管理"></a>mysql权限管理</h4><h5 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h5><pre class="line-numbers language-mysql"><code class="language-mysql">-- 创建用户,并指定可登录的ipcreate user '用户名'@'允许登录的ip' identified by 'password'-- 示例:-- 1.只允许本机登录CREATE USER 'jack'@'localhost' IDENTIFIED BY '123456'-- 2.只允许某个指定的ip或者ip点登录, %代表通配符CREATE USER 'lancy'@'192.168.%.%' IDENTIFIED BY '123456'-- 3.任意ip登录,  CREATE USER 'tom' IDENTIFIED BY '123456'CREATE USER 'tom'@'%' IDENTIFIED BY '123456'-- 删除某个用户, 注意删除必须与创建用户的ip一致drop user '用户名'@'ip'-- 1. 删除本机用户jackdrop user 'jack'@'localhost'-- 2. 删除全网用户tomdrop user 'tom'-- 用户密码修改-- 1. 修改自己密码set password = password('new password')-- 2. 修改他人密码(需要有修改权限)set password for '用户名'@'ip' = password('new pwd')<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="权限列表"><a href="#权限列表" class="headerlink" title="权限列表"></a>权限列表</h5><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210926105419.png" alt="image-20210926105419382"></p><h5 id="授予用户指定权限"><a href="#授予用户指定权限" class="headerlink" title="授予用户指定权限"></a>授予用户指定权限</h5><pre class="line-numbers language-mysql"><code class="language-mysql">-- 授予权限基本语法, 对象包含表,视图,存储过程等grant 权限 on 数据库.对象 to '用户名'@'ip' [identified by '用户密码']  -- 1. 多个权限,使用逗号分隔  grant select[, delete,create...] on....  -- 2. 授予所有权限, 使用all   grant all on ...  -- 3 *代表通配符, *.*代表本系统中所有数据库的所有对象, 库.*代表该库的所有对象      -- 回收用户授权  revoke 权限列表 on 库.对象 from '用户名'@'ip'  -- 5.7以后版本权限立马生效, 在早期版本,权限执行后,并没有立马生效,可以执行指令   flush privileges   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="备份与恢复"><a href="#备份与恢复" class="headerlink" title="备份与恢复"></a>备份与恢复</h4><p>介绍下命令行操作, 图形化操作比较简单, 备份的时候,选中数据库,导出即可, 恢复的时候,执行备份sql即可,</p><h5 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h5><h6 id="数据库备份"><a href="#数据库备份" class="headerlink" title="数据库备份"></a>数据库备份</h6><p>在==dos==执行命令:  </p><pre class="line-numbers language-bash"><code class="language-bash">mysqldump -u 用户名 -p -B 数据库1 数据库2 数据库n <span class="token operator">></span> 文件名绝对地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>示例如下: </p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210913160856.png" alt="image-20210913160856354"></p><h6 id="表备份"><a href="#表备份" class="headerlink" title="表备份"></a>表备份</h6><p>在dos命令窗口输入命令: </p><pre class="line-numbers language-bash"><code class="language-bash">mysqldump -u 用户名 -p 数据库 表1 表2 表n <span class="token operator">></span> 备份文件绝对地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>示例如下</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210913161520.png" alt="image-20210913161520210"></p><h5 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h5><p>数据库与表恢复操作一样</p><p>进入mysql后,再执行如下命令:  </p><pre class="line-numbers language-mysql"><code class="language-mysql">source 备份sql绝对路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/tadpole145/images/raw/main/20210913162628.png" alt="image-20210913162628250"></p><h4 id="连接配置"><a href="#连接配置" class="headerlink" title="连接配置"></a>连接配置</h4><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true">#mysql数据库连接-------驱动依赖为8+版本</span><span class="token attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.cj.jdbc.Driver</span><span class="token attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/数据库名?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8</span><span class="token attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token attr-value">密码</span><span class="token comment" spellcheck="true"># mysql驱动的依赖的版本为5+版本</span><span class="token attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.jdbc.Driver</span><span class="token attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/数据库名?characterEncoding=utf-8&amp;useSSL=true</span><span class="token attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token attr-value">密码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="mysql进阶"><a href="#mysql进阶" class="headerlink" title="mysql进阶"></a>mysql进阶</h3><p>进阶部分,介绍mysql原理性的东西以及实现方法.</p><h4 id="mysql的索引"><a href="#mysql的索引" class="headerlink" title="mysql的索引"></a>mysql的索引</h4><p>索引的本质是数据结构,目的是为了高效的获取数据.</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机基础知识</title>
      <link href="2020/10/08/ji-suan-ji-ji-chu/"/>
      <url>2020/10/08/ji-suan-ji-ji-chu/</url>
      
        <content type="html"><![CDATA[<h4 id="机器语言"><a href="#机器语言" class="headerlink" title="机器语言"></a>机器语言</h4><p>计算机能识别的语言,只有0,1</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/tadpole145/images/main/image-20210322172227360.png" alt="image-20210322172227360"></p><h4 id="编码规则"><a href="#编码规则" class="headerlink" title="编码规则"></a>编码规则</h4><h6 id="有符号数的编码规则-最高位为符号位-0正1负"><a href="#有符号数的编码规则-最高位为符号位-0正1负" class="headerlink" title="有符号数的编码规则(最高位为符号位,0正1负)"></a>有符号数的编码规则(最高位为符号位,0正1负)</h6><p>原码: 最高位为符号位,对齐它的为进行本身绝对值即可.</p><p>反码: </p><ul><li>正数: 反码与原码相同;</li><li>负数: 符号位一定是1,其余位对原码取反.</li></ul><p>补码: </p><ul><li>正数: 补码与原码相同</li><li>负数: 最高位为1,其余位数为反码+1</li></ul><h6 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h6><p> 正数:  原码=反码=补码</p><p>负数:  最高位为1,符号位, 反码为原码取反,补码为反码+1</p><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><p>与: &amp; , and  全部为true则结果为true</p><p>或运算: or,|| 有一个为true则为true</p><p>异或运算: ^ , xor, 不一样就是1(false)</p><p>位运算: </p><ul><li>左移(shl, &lt;&lt;)x2,  高位丢弃,其余左移,低位补0</li><li>右移(shr, &gt;&gt;)/2, 低位丢弃,整体右移,高位根据符号决定补0或1</li></ul><h4 id="计算机运算的本质"><a href="#计算机运算的本质" class="headerlink" title="计算机运算的本质"></a>计算机运算的本质</h4><p>抛弃十进制思想,把自己当做计算机去学习计算机的运算步骤</p><h6 id="加法规则"><a href="#加法规则" class="headerlink" title="加法规则"></a>加法规则</h6><p> 如果两数相加, a+b,计算步骤如下: </p><ul><li>a^b –&gt; c</li><li>a&amp;b –&gt; d</li><li>d中有1则左位移进位得到 e</li><li>c^e–&gt;f</li><li>c &amp;e –&gt; g</li></ul><p>如此循环下去,直到最后一次的==与运算全部为0==,则上一步的异或运算为最终结果.</p><p>示例: 4+5</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/tadpole145/images/main/image-20210323092442115.png" alt="image-20210323092442115"></p><h6 id="减法规则"><a href="#减法规则" class="headerlink" title="减法规则"></a>减法规则</h6><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/tadpole145/images/main/image-20210323094254448.png" alt="image-20210323094254448"></p><h6 id="乘除法运算"><a href="#乘除法运算" class="headerlink" title="乘除法运算"></a>乘除法运算</h6><p>乘法: x*y, 本质就是y个x相加;</p><p>除法: x/y, 本质就是减法, x能减去多少个y,得到商和余数.</p><h6 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h6><p>由于减法也是加法,归根到底,计算机中的加减乘除运算,本质上都是加法运算.</p><h4 id="汇编语言"><a href="#汇编语言" class="headerlink" title="汇编语言"></a>汇编语言</h4><p>对常用机器语言的标记,方便人类理解,通过编译器翻译成机器语言</p><pre><code>加 INC  --&gt;编译器翻译成机器语言减 DEC乘 MUL除 DIV</code></pre><p>需要的 辅助工具</p><ul><li>vc6</li><li>OD </li><li>抓包工具</li><li>加密解密工具</li></ul>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node详解</title>
      <link href="2020/09/18/node/"/>
      <url>2020/09/18/node/</url>
      
        <content type="html"><![CDATA[<p><a href="https://nodejs.org/zh-cn/">官网</a>,  <a href="http://nodejs.cn/">中文网</a></p><h4 id="概念-What"><a href="#概念-What" class="headerlink" title="概念(What)"></a>概念(What)</h4><p>Node.js 是一个能在服务器端运行的js开放源代码运行环境. 它采用Google开发的V8引擎运行js代码,使用事件驱动,非阻塞,和异步I/O模型等技术来提高性能,可优化程序的传输量与规模.</p><p>它是用于web服务器开发的,对比使用java开发服务端可方便初学者更好理解.</p><table><thead><tr><th>开发语言</th><th>构建,包管理器</th><th>运行平台</th><th>运行环境</th></tr></thead><tbody><tr><td>java</td><td>maven</td><td>java虚拟机</td><td>JRE</td></tr><tr><td>JavaScript</td><td>npm</td><td>v8引擎</td><td>node.js</td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><p>注: <em>运行时环境</em> 是一种旨在运行其他软件的软件。作为Java的运行时环境，JRE包含Java类库，Java类加载器和Java虚拟机。</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>Node.js 应用程序运行于单个进程中，无需为每个请求创建新的线程。 Node.js 在其标准库中提供了一组异步的 I/O 原生功能（用以防止 JavaScript 代码被阻塞）</p><h4 id="创立的技术背景-Why"><a href="#创立的技术背景-Why" class="headerlink" title="创立的技术背景(Why)"></a>创立的技术背景(Why)</h4><p>Node.js之父Ryan Dahl的工作是用C/C++写高性能Web服务,但是用C/C++写就太痛苦了。于是他开始设想用高级语言开发Web服务,虽然很多语言同时提供同步IO和异步IO,但是开发人员一旦使用同步IO,就懒得使用异步IO了,而JavaScript是单线程执行，根本不能进行同步IO操作，所以Ryan Dahl选择了它作为开发语言.而对于运行时引擎, Ryan选择了google刚开源的v8引擎,2009年，Ryan正式推出了基于JavaScript语言和V8引擎的开源Web服务器项目，命名为Node.js.</p><p>Node为什么会火起来呢？</p><ul><li>最大的优势是借助JavaScript天生的事件驱动机制加V8高性能引擎，使编写高性能Web服务轻而易举。在它上面做的每一件事，每一个独立的调用和操作，都是一系列的异步回调.</li><li>js是web开发者熟知的语言,大家不用学习额外的后端语言就可以直接使用js去开发服务端.</li><li>支持对象数据库,比如MongoDB等.</li><li>因为js的广泛流行,有强大的开发者基础与IDE工具,此外开发出的web服务可随处托管.</li></ul><h4 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h4><p>一个js文件就是一个模块, 通过require(“模块路径”)函数引入外部的模块.返回值即为该模块对象</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> md<span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./test.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>模块中的变量和函数在其它模块中是无法访问的,如果需要访问,则要通过==exports== 或者==module.exports==对外暴露, 暴露对象的时候使用==module.exports==</p><pre class="line-numbers language-js"><code class="language-js">exports<span class="token punctuation">.</span>x<span class="token operator">=</span><span class="token string">"我是变量"</span><span class="token punctuation">;</span>exports<span class="token punctuation">.</span>fun<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>核心模块的引入, 直接require(“模块名”)</p><p>node中有个全局对象global,作用于网页中的window类似,全局变量都会作为global的属性保存,而全局中创建的函数则会作为global的方法保存</p><pre class="line-numbers language-js"><code class="language-js">a <span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//没有变量var 声明</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>global<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>证明模块是封装在一个函数里面执行,由node.js引擎调用</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//执行</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>callee <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//结果</span><span class="token keyword">function</span> <span class="token punctuation">(</span>exports<span class="token punctuation">,</span> require<span class="token punctuation">,</span> module<span class="token punctuation">,</span> __filename<span class="token punctuation">,</span> __dirname<span class="token punctuation">)</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>callee <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="包"><a href="#包" class="headerlink" title="包"></a>包</h4><p>包实际上就是一个压缩文件,主要由以下2部分构成</p><ul><li>包结构</li><li>包描述文件</li></ul><p>解压后应当包含如下文件</p><pre><code>-package.json 描述文件  *必须要-bin 可执行二进制文件-lib js代码-doc 文档-test 单元测试</code></pre><h4 id="NPM-Node-Package-Manager"><a href="#NPM-Node-Package-Manager" class="headerlink" title="NPM (Node Package Manager)"></a>NPM (Node Package Manager)</h4><p>类比于Maven, NPM用于第三方模块的发布,安装,依赖等.借助于NPM,Node与第三方模块之间形成了一个很好的生态系统.</p><h5 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h5><pre><code>查看版本 npm -v / npm version搜索包名  npm search 包名下载当前项目所依赖的所有包: npm install安装: npm install/i 包名初始化,创建包描述文件: npm init全局安装: npm install 包名 -g全局并添加依赖: npm install/i 包名 --save删除包: npm remove/r 包名更新次版本以及补丁版本: npm update运行任务: npm run &lt;task-name&gt;查看全局位置: npm root -g查看npm安装包列表: npm list查看npm全局安装包列表: npm list -g查看指定包的最新版本: npm view 包名 version查看指定包的以前版本列表: npm view 包名 versions安装指定包名的指定版本: npm install 包名@版本号   //示例: npm install cowsay@1.2.0  全局安装: npm install -g webpack@4.16.4发觉软件包的新版本: npm outdated将所有软件包更新到新的主版本: npm install -g npm-check-updates   然后运行 ncu -u,再运行npm update卸载指定包名:  npm uninstall 包名卸载依赖项: npm uninstall -S &lt;package-name&gt;卸载开发依赖项: npm uninstall -D &lt;package-name&gt;卸载全局包: npm uninstall -g &lt;package-name&gt;</code></pre><h4 id="版本语义控制"><a href="#版本语义控制" class="headerlink" title="版本语义控制"></a>版本语义控制</h4><p>所有的版本都有 3 个数字：<code>x.y.z</code>。</p><ul><li>第一个数字是主版本。</li><li>第二个数字是次版本。</li><li>第三个数字是补丁版本。</li></ul><p>当发布新的版本时，不仅仅是随心所欲地增加数字，还要遵循以下规则：</p><ul><li>当进行不兼容的 API 更改时，则升级主版本。</li><li>当以向后兼容的方式添加功能时，则升级次版本。</li><li>当进行向后兼容的缺陷修复时，则升级补丁版本。</li></ul><p>版本前面一般还添加了一些符号,具体语义如下所示: </p><ul><li><code>^</code>: 只会执行不更改最左边非零数字的更新。 如果写入的是 <code>^0.13.0</code>，则当运行 <code>npm update</code> 时，可以更新到 <code>0.13.1</code>、<code>0.13.2</code> 等，但不能更新到 <code>0.14.0</code> 或更高版本。 如果写入的是 <code>^1.13.0</code>，则当运行 <code>npm update</code> 时，可以更新到 <code>1.13.1</code>、<code>1.14.0</code> 等，但不能更新到 <code>2.0.0</code> 或更高版本。</li><li><code>~</code>: 如果写入的是 <code>〜0.13.0</code>，则当运行 <code>npm update</code> 时，会更新到补丁版本：即 <code>0.13.1</code> 可以，但 <code>0.14.0</code> 不可以。</li><li><code>&gt;</code>: 接受高于指定版本的任何版本。</li><li><code>&gt;=</code>: 接受等于或高于指定版本的任何版本。</li><li><code>&lt;=</code>: 接受等于或低于指定版本的任何版本。</li><li><code>&lt;</code>: 接受低于指定版本的任何版本。</li><li><code>=</code>: 接受确切的版本。</li><li><code>-</code>: 接受一定范围的版本。例如：<code>2.1.0 - 2.6.2</code>。</li><li><code>||</code>: 组合集合。例如 <code>&lt; 2.1 || &gt; 2.6</code>。</li></ul><p>可以合并其中的一些符号，例如 <code>1.0.0 || &gt;=1.1.0 &lt;1.2.0</code>，即使用 1.0.0 或从 1.1.0 开始但低于 1.2.0 的版本。</p><p>还有其他的规则：</p><ul><li>无符号: 仅接受指定的特定版本（例如 <code>1.2.1</code>）。</li><li><code>latest</code>: 使用可用的最新版本。</li></ul><h5 id="镜像配置-备用-推荐使用官方"><a href="#镜像配置-备用-推荐使用官方" class="headerlink" title="镜像配置 (备用,推荐使用官方)"></a>镜像配置 (备用,推荐使用官方)</h5><p><a href="http://npm.taobao.org/">淘宝NPM镜像地址</a></p><p>配置命令:</p><pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></pre><p>使用方式</p><pre><code>cnpm install express</code></pre><h4 id="Node基础"><a href="#Node基础" class="headerlink" title="Node基础"></a>Node基础</h4><h5 id="Buffer"><a href="#Buffer" class="headerlink" title="Buffer"></a>Buffer</h5><blockquote><p>缓冲区, 结构和数组类似, 由于数组不能存储二进制文件,而图片,视频文件都是以二进制文件保存的,故buffer专门用于存储二进制数据.但是显示的时候会以16进制显示.输出的时候是10进制.无需引入模块,直接使用即可.</p><p>构造函数已废弃,推荐使用Buffer.alloc(int length)函数.buffer大小一旦确定后,就不可更改.</p></blockquote><h5 id="fs-文件系统"><a href="#fs-文件系统" class="headerlink" title="fs 文件系统"></a>fs 文件系统</h5><blockquote><p>直接引入模块,无需下载. fs是Node来操作系统中的文件的核心模块.</p></blockquote><p>我学习nodejs主要是为了搭建个人博客,并没有想深入学习的念想. 想学的话,语法还是看<a href="http://nodejs.cn/learn">官方文档</a>吧</p>]]></content>
      
      
      <categories>
          
          <category> 开发教程 </category>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
